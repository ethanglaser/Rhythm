
IMU.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000021c0  080000c0  080000c0  000100c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000001c  08002280  08002280  00012280  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800229c  0800229c  0002000c  2**0
                  CONTENTS
  4 .ARM          00000008  0800229c  0800229c  0001229c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  080022a4  080022a4  0002000c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080022a4  080022a4  000122a4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080022a8  080022a8  000122a8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000000c  20000000  080022ac  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000008c  2000000c  080022b8  0002000c  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000098  080022b8  00020098  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  0002000c  2**0
                  CONTENTS, READONLY
 12 .debug_info   00008645  00000000  00000000  00020034  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 00001693  00000000  00000000  00028679  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 000006b0  00000000  00000000  00029d10  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 000005f8  00000000  00000000  0002a3c0  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  00013dbc  00000000  00000000  0002a9b8  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   00006bba  00000000  00000000  0003e774  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    0007745c  00000000  00000000  0004532e  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  000bc78a  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000016c8  00000000  00000000  000bc808  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	; (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	; (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	; (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	2000000c 	.word	0x2000000c
 80000e0:	00000000 	.word	0x00000000
 80000e4:	08002268 	.word	0x08002268

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	; (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	; (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	; (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			; (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	20000010 	.word	0x20000010
 8000104:	08002268 	.word	0x08002268

08000108 <__udivsi3>:
 8000108:	2200      	movs	r2, #0
 800010a:	0843      	lsrs	r3, r0, #1
 800010c:	428b      	cmp	r3, r1
 800010e:	d374      	bcc.n	80001fa <__udivsi3+0xf2>
 8000110:	0903      	lsrs	r3, r0, #4
 8000112:	428b      	cmp	r3, r1
 8000114:	d35f      	bcc.n	80001d6 <__udivsi3+0xce>
 8000116:	0a03      	lsrs	r3, r0, #8
 8000118:	428b      	cmp	r3, r1
 800011a:	d344      	bcc.n	80001a6 <__udivsi3+0x9e>
 800011c:	0b03      	lsrs	r3, r0, #12
 800011e:	428b      	cmp	r3, r1
 8000120:	d328      	bcc.n	8000174 <__udivsi3+0x6c>
 8000122:	0c03      	lsrs	r3, r0, #16
 8000124:	428b      	cmp	r3, r1
 8000126:	d30d      	bcc.n	8000144 <__udivsi3+0x3c>
 8000128:	22ff      	movs	r2, #255	; 0xff
 800012a:	0209      	lsls	r1, r1, #8
 800012c:	ba12      	rev	r2, r2
 800012e:	0c03      	lsrs	r3, r0, #16
 8000130:	428b      	cmp	r3, r1
 8000132:	d302      	bcc.n	800013a <__udivsi3+0x32>
 8000134:	1212      	asrs	r2, r2, #8
 8000136:	0209      	lsls	r1, r1, #8
 8000138:	d065      	beq.n	8000206 <__udivsi3+0xfe>
 800013a:	0b03      	lsrs	r3, r0, #12
 800013c:	428b      	cmp	r3, r1
 800013e:	d319      	bcc.n	8000174 <__udivsi3+0x6c>
 8000140:	e000      	b.n	8000144 <__udivsi3+0x3c>
 8000142:	0a09      	lsrs	r1, r1, #8
 8000144:	0bc3      	lsrs	r3, r0, #15
 8000146:	428b      	cmp	r3, r1
 8000148:	d301      	bcc.n	800014e <__udivsi3+0x46>
 800014a:	03cb      	lsls	r3, r1, #15
 800014c:	1ac0      	subs	r0, r0, r3
 800014e:	4152      	adcs	r2, r2
 8000150:	0b83      	lsrs	r3, r0, #14
 8000152:	428b      	cmp	r3, r1
 8000154:	d301      	bcc.n	800015a <__udivsi3+0x52>
 8000156:	038b      	lsls	r3, r1, #14
 8000158:	1ac0      	subs	r0, r0, r3
 800015a:	4152      	adcs	r2, r2
 800015c:	0b43      	lsrs	r3, r0, #13
 800015e:	428b      	cmp	r3, r1
 8000160:	d301      	bcc.n	8000166 <__udivsi3+0x5e>
 8000162:	034b      	lsls	r3, r1, #13
 8000164:	1ac0      	subs	r0, r0, r3
 8000166:	4152      	adcs	r2, r2
 8000168:	0b03      	lsrs	r3, r0, #12
 800016a:	428b      	cmp	r3, r1
 800016c:	d301      	bcc.n	8000172 <__udivsi3+0x6a>
 800016e:	030b      	lsls	r3, r1, #12
 8000170:	1ac0      	subs	r0, r0, r3
 8000172:	4152      	adcs	r2, r2
 8000174:	0ac3      	lsrs	r3, r0, #11
 8000176:	428b      	cmp	r3, r1
 8000178:	d301      	bcc.n	800017e <__udivsi3+0x76>
 800017a:	02cb      	lsls	r3, r1, #11
 800017c:	1ac0      	subs	r0, r0, r3
 800017e:	4152      	adcs	r2, r2
 8000180:	0a83      	lsrs	r3, r0, #10
 8000182:	428b      	cmp	r3, r1
 8000184:	d301      	bcc.n	800018a <__udivsi3+0x82>
 8000186:	028b      	lsls	r3, r1, #10
 8000188:	1ac0      	subs	r0, r0, r3
 800018a:	4152      	adcs	r2, r2
 800018c:	0a43      	lsrs	r3, r0, #9
 800018e:	428b      	cmp	r3, r1
 8000190:	d301      	bcc.n	8000196 <__udivsi3+0x8e>
 8000192:	024b      	lsls	r3, r1, #9
 8000194:	1ac0      	subs	r0, r0, r3
 8000196:	4152      	adcs	r2, r2
 8000198:	0a03      	lsrs	r3, r0, #8
 800019a:	428b      	cmp	r3, r1
 800019c:	d301      	bcc.n	80001a2 <__udivsi3+0x9a>
 800019e:	020b      	lsls	r3, r1, #8
 80001a0:	1ac0      	subs	r0, r0, r3
 80001a2:	4152      	adcs	r2, r2
 80001a4:	d2cd      	bcs.n	8000142 <__udivsi3+0x3a>
 80001a6:	09c3      	lsrs	r3, r0, #7
 80001a8:	428b      	cmp	r3, r1
 80001aa:	d301      	bcc.n	80001b0 <__udivsi3+0xa8>
 80001ac:	01cb      	lsls	r3, r1, #7
 80001ae:	1ac0      	subs	r0, r0, r3
 80001b0:	4152      	adcs	r2, r2
 80001b2:	0983      	lsrs	r3, r0, #6
 80001b4:	428b      	cmp	r3, r1
 80001b6:	d301      	bcc.n	80001bc <__udivsi3+0xb4>
 80001b8:	018b      	lsls	r3, r1, #6
 80001ba:	1ac0      	subs	r0, r0, r3
 80001bc:	4152      	adcs	r2, r2
 80001be:	0943      	lsrs	r3, r0, #5
 80001c0:	428b      	cmp	r3, r1
 80001c2:	d301      	bcc.n	80001c8 <__udivsi3+0xc0>
 80001c4:	014b      	lsls	r3, r1, #5
 80001c6:	1ac0      	subs	r0, r0, r3
 80001c8:	4152      	adcs	r2, r2
 80001ca:	0903      	lsrs	r3, r0, #4
 80001cc:	428b      	cmp	r3, r1
 80001ce:	d301      	bcc.n	80001d4 <__udivsi3+0xcc>
 80001d0:	010b      	lsls	r3, r1, #4
 80001d2:	1ac0      	subs	r0, r0, r3
 80001d4:	4152      	adcs	r2, r2
 80001d6:	08c3      	lsrs	r3, r0, #3
 80001d8:	428b      	cmp	r3, r1
 80001da:	d301      	bcc.n	80001e0 <__udivsi3+0xd8>
 80001dc:	00cb      	lsls	r3, r1, #3
 80001de:	1ac0      	subs	r0, r0, r3
 80001e0:	4152      	adcs	r2, r2
 80001e2:	0883      	lsrs	r3, r0, #2
 80001e4:	428b      	cmp	r3, r1
 80001e6:	d301      	bcc.n	80001ec <__udivsi3+0xe4>
 80001e8:	008b      	lsls	r3, r1, #2
 80001ea:	1ac0      	subs	r0, r0, r3
 80001ec:	4152      	adcs	r2, r2
 80001ee:	0843      	lsrs	r3, r0, #1
 80001f0:	428b      	cmp	r3, r1
 80001f2:	d301      	bcc.n	80001f8 <__udivsi3+0xf0>
 80001f4:	004b      	lsls	r3, r1, #1
 80001f6:	1ac0      	subs	r0, r0, r3
 80001f8:	4152      	adcs	r2, r2
 80001fa:	1a41      	subs	r1, r0, r1
 80001fc:	d200      	bcs.n	8000200 <__udivsi3+0xf8>
 80001fe:	4601      	mov	r1, r0
 8000200:	4152      	adcs	r2, r2
 8000202:	4610      	mov	r0, r2
 8000204:	4770      	bx	lr
 8000206:	e7ff      	b.n	8000208 <__udivsi3+0x100>
 8000208:	b501      	push	{r0, lr}
 800020a:	2000      	movs	r0, #0
 800020c:	f000 f806 	bl	800021c <__aeabi_idiv0>
 8000210:	bd02      	pop	{r1, pc}
 8000212:	46c0      	nop			; (mov r8, r8)

08000214 <__aeabi_uidivmod>:
 8000214:	2900      	cmp	r1, #0
 8000216:	d0f7      	beq.n	8000208 <__udivsi3+0x100>
 8000218:	e776      	b.n	8000108 <__udivsi3>
 800021a:	4770      	bx	lr

0800021c <__aeabi_idiv0>:
 800021c:	4770      	bx	lr
 800021e:	46c0      	nop			; (mov r8, r8)

08000220 <__aeabi_uldivmod>:
 8000220:	2b00      	cmp	r3, #0
 8000222:	d111      	bne.n	8000248 <__aeabi_uldivmod+0x28>
 8000224:	2a00      	cmp	r2, #0
 8000226:	d10f      	bne.n	8000248 <__aeabi_uldivmod+0x28>
 8000228:	2900      	cmp	r1, #0
 800022a:	d100      	bne.n	800022e <__aeabi_uldivmod+0xe>
 800022c:	2800      	cmp	r0, #0
 800022e:	d002      	beq.n	8000236 <__aeabi_uldivmod+0x16>
 8000230:	2100      	movs	r1, #0
 8000232:	43c9      	mvns	r1, r1
 8000234:	1c08      	adds	r0, r1, #0
 8000236:	b407      	push	{r0, r1, r2}
 8000238:	4802      	ldr	r0, [pc, #8]	; (8000244 <__aeabi_uldivmod+0x24>)
 800023a:	a102      	add	r1, pc, #8	; (adr r1, 8000244 <__aeabi_uldivmod+0x24>)
 800023c:	1840      	adds	r0, r0, r1
 800023e:	9002      	str	r0, [sp, #8]
 8000240:	bd03      	pop	{r0, r1, pc}
 8000242:	46c0      	nop			; (mov r8, r8)
 8000244:	ffffffd9 	.word	0xffffffd9
 8000248:	b403      	push	{r0, r1}
 800024a:	4668      	mov	r0, sp
 800024c:	b501      	push	{r0, lr}
 800024e:	9802      	ldr	r0, [sp, #8]
 8000250:	f000 f830 	bl	80002b4 <__udivmoddi4>
 8000254:	9b01      	ldr	r3, [sp, #4]
 8000256:	469e      	mov	lr, r3
 8000258:	b002      	add	sp, #8
 800025a:	bc0c      	pop	{r2, r3}
 800025c:	4770      	bx	lr
 800025e:	46c0      	nop			; (mov r8, r8)

08000260 <__aeabi_lmul>:
 8000260:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000262:	46ce      	mov	lr, r9
 8000264:	4647      	mov	r7, r8
 8000266:	0415      	lsls	r5, r2, #16
 8000268:	0c2d      	lsrs	r5, r5, #16
 800026a:	002e      	movs	r6, r5
 800026c:	b580      	push	{r7, lr}
 800026e:	0407      	lsls	r7, r0, #16
 8000270:	0c14      	lsrs	r4, r2, #16
 8000272:	0c3f      	lsrs	r7, r7, #16
 8000274:	4699      	mov	r9, r3
 8000276:	0c03      	lsrs	r3, r0, #16
 8000278:	437e      	muls	r6, r7
 800027a:	435d      	muls	r5, r3
 800027c:	4367      	muls	r7, r4
 800027e:	4363      	muls	r3, r4
 8000280:	197f      	adds	r7, r7, r5
 8000282:	0c34      	lsrs	r4, r6, #16
 8000284:	19e4      	adds	r4, r4, r7
 8000286:	469c      	mov	ip, r3
 8000288:	42a5      	cmp	r5, r4
 800028a:	d903      	bls.n	8000294 <__aeabi_lmul+0x34>
 800028c:	2380      	movs	r3, #128	; 0x80
 800028e:	025b      	lsls	r3, r3, #9
 8000290:	4698      	mov	r8, r3
 8000292:	44c4      	add	ip, r8
 8000294:	464b      	mov	r3, r9
 8000296:	4343      	muls	r3, r0
 8000298:	4351      	muls	r1, r2
 800029a:	0c25      	lsrs	r5, r4, #16
 800029c:	0436      	lsls	r6, r6, #16
 800029e:	4465      	add	r5, ip
 80002a0:	0c36      	lsrs	r6, r6, #16
 80002a2:	0424      	lsls	r4, r4, #16
 80002a4:	19a4      	adds	r4, r4, r6
 80002a6:	195b      	adds	r3, r3, r5
 80002a8:	1859      	adds	r1, r3, r1
 80002aa:	0020      	movs	r0, r4
 80002ac:	bc0c      	pop	{r2, r3}
 80002ae:	4690      	mov	r8, r2
 80002b0:	4699      	mov	r9, r3
 80002b2:	bdf0      	pop	{r4, r5, r6, r7, pc}

080002b4 <__udivmoddi4>:
 80002b4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80002b6:	464f      	mov	r7, r9
 80002b8:	4646      	mov	r6, r8
 80002ba:	46d6      	mov	lr, sl
 80002bc:	b5c0      	push	{r6, r7, lr}
 80002be:	0004      	movs	r4, r0
 80002c0:	b082      	sub	sp, #8
 80002c2:	000d      	movs	r5, r1
 80002c4:	4691      	mov	r9, r2
 80002c6:	4698      	mov	r8, r3
 80002c8:	428b      	cmp	r3, r1
 80002ca:	d82f      	bhi.n	800032c <__udivmoddi4+0x78>
 80002cc:	d02c      	beq.n	8000328 <__udivmoddi4+0x74>
 80002ce:	4641      	mov	r1, r8
 80002d0:	4648      	mov	r0, r9
 80002d2:	f000 f8b1 	bl	8000438 <__clzdi2>
 80002d6:	0029      	movs	r1, r5
 80002d8:	0006      	movs	r6, r0
 80002da:	0020      	movs	r0, r4
 80002dc:	f000 f8ac 	bl	8000438 <__clzdi2>
 80002e0:	1a33      	subs	r3, r6, r0
 80002e2:	469c      	mov	ip, r3
 80002e4:	3b20      	subs	r3, #32
 80002e6:	469a      	mov	sl, r3
 80002e8:	d500      	bpl.n	80002ec <__udivmoddi4+0x38>
 80002ea:	e076      	b.n	80003da <__udivmoddi4+0x126>
 80002ec:	464b      	mov	r3, r9
 80002ee:	4652      	mov	r2, sl
 80002f0:	4093      	lsls	r3, r2
 80002f2:	001f      	movs	r7, r3
 80002f4:	464b      	mov	r3, r9
 80002f6:	4662      	mov	r2, ip
 80002f8:	4093      	lsls	r3, r2
 80002fa:	001e      	movs	r6, r3
 80002fc:	42af      	cmp	r7, r5
 80002fe:	d828      	bhi.n	8000352 <__udivmoddi4+0x9e>
 8000300:	d025      	beq.n	800034e <__udivmoddi4+0x9a>
 8000302:	4653      	mov	r3, sl
 8000304:	1ba4      	subs	r4, r4, r6
 8000306:	41bd      	sbcs	r5, r7
 8000308:	2b00      	cmp	r3, #0
 800030a:	da00      	bge.n	800030e <__udivmoddi4+0x5a>
 800030c:	e07b      	b.n	8000406 <__udivmoddi4+0x152>
 800030e:	2200      	movs	r2, #0
 8000310:	2300      	movs	r3, #0
 8000312:	9200      	str	r2, [sp, #0]
 8000314:	9301      	str	r3, [sp, #4]
 8000316:	2301      	movs	r3, #1
 8000318:	4652      	mov	r2, sl
 800031a:	4093      	lsls	r3, r2
 800031c:	9301      	str	r3, [sp, #4]
 800031e:	2301      	movs	r3, #1
 8000320:	4662      	mov	r2, ip
 8000322:	4093      	lsls	r3, r2
 8000324:	9300      	str	r3, [sp, #0]
 8000326:	e018      	b.n	800035a <__udivmoddi4+0xa6>
 8000328:	4282      	cmp	r2, r0
 800032a:	d9d0      	bls.n	80002ce <__udivmoddi4+0x1a>
 800032c:	2200      	movs	r2, #0
 800032e:	2300      	movs	r3, #0
 8000330:	9200      	str	r2, [sp, #0]
 8000332:	9301      	str	r3, [sp, #4]
 8000334:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8000336:	2b00      	cmp	r3, #0
 8000338:	d001      	beq.n	800033e <__udivmoddi4+0x8a>
 800033a:	601c      	str	r4, [r3, #0]
 800033c:	605d      	str	r5, [r3, #4]
 800033e:	9800      	ldr	r0, [sp, #0]
 8000340:	9901      	ldr	r1, [sp, #4]
 8000342:	b002      	add	sp, #8
 8000344:	bc1c      	pop	{r2, r3, r4}
 8000346:	4690      	mov	r8, r2
 8000348:	4699      	mov	r9, r3
 800034a:	46a2      	mov	sl, r4
 800034c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800034e:	42a3      	cmp	r3, r4
 8000350:	d9d7      	bls.n	8000302 <__udivmoddi4+0x4e>
 8000352:	2200      	movs	r2, #0
 8000354:	2300      	movs	r3, #0
 8000356:	9200      	str	r2, [sp, #0]
 8000358:	9301      	str	r3, [sp, #4]
 800035a:	4663      	mov	r3, ip
 800035c:	2b00      	cmp	r3, #0
 800035e:	d0e9      	beq.n	8000334 <__udivmoddi4+0x80>
 8000360:	07fb      	lsls	r3, r7, #31
 8000362:	4698      	mov	r8, r3
 8000364:	4641      	mov	r1, r8
 8000366:	0872      	lsrs	r2, r6, #1
 8000368:	430a      	orrs	r2, r1
 800036a:	087b      	lsrs	r3, r7, #1
 800036c:	4666      	mov	r6, ip
 800036e:	e00e      	b.n	800038e <__udivmoddi4+0xda>
 8000370:	42ab      	cmp	r3, r5
 8000372:	d101      	bne.n	8000378 <__udivmoddi4+0xc4>
 8000374:	42a2      	cmp	r2, r4
 8000376:	d80c      	bhi.n	8000392 <__udivmoddi4+0xde>
 8000378:	1aa4      	subs	r4, r4, r2
 800037a:	419d      	sbcs	r5, r3
 800037c:	2001      	movs	r0, #1
 800037e:	1924      	adds	r4, r4, r4
 8000380:	416d      	adcs	r5, r5
 8000382:	2100      	movs	r1, #0
 8000384:	3e01      	subs	r6, #1
 8000386:	1824      	adds	r4, r4, r0
 8000388:	414d      	adcs	r5, r1
 800038a:	2e00      	cmp	r6, #0
 800038c:	d006      	beq.n	800039c <__udivmoddi4+0xe8>
 800038e:	42ab      	cmp	r3, r5
 8000390:	d9ee      	bls.n	8000370 <__udivmoddi4+0xbc>
 8000392:	3e01      	subs	r6, #1
 8000394:	1924      	adds	r4, r4, r4
 8000396:	416d      	adcs	r5, r5
 8000398:	2e00      	cmp	r6, #0
 800039a:	d1f8      	bne.n	800038e <__udivmoddi4+0xda>
 800039c:	9800      	ldr	r0, [sp, #0]
 800039e:	9901      	ldr	r1, [sp, #4]
 80003a0:	4653      	mov	r3, sl
 80003a2:	1900      	adds	r0, r0, r4
 80003a4:	4169      	adcs	r1, r5
 80003a6:	2b00      	cmp	r3, #0
 80003a8:	db23      	blt.n	80003f2 <__udivmoddi4+0x13e>
 80003aa:	002b      	movs	r3, r5
 80003ac:	4652      	mov	r2, sl
 80003ae:	40d3      	lsrs	r3, r2
 80003b0:	002a      	movs	r2, r5
 80003b2:	4664      	mov	r4, ip
 80003b4:	40e2      	lsrs	r2, r4
 80003b6:	001c      	movs	r4, r3
 80003b8:	4653      	mov	r3, sl
 80003ba:	0015      	movs	r5, r2
 80003bc:	2b00      	cmp	r3, #0
 80003be:	db2d      	blt.n	800041c <__udivmoddi4+0x168>
 80003c0:	0026      	movs	r6, r4
 80003c2:	4657      	mov	r7, sl
 80003c4:	40be      	lsls	r6, r7
 80003c6:	0033      	movs	r3, r6
 80003c8:	0026      	movs	r6, r4
 80003ca:	4667      	mov	r7, ip
 80003cc:	40be      	lsls	r6, r7
 80003ce:	0032      	movs	r2, r6
 80003d0:	1a80      	subs	r0, r0, r2
 80003d2:	4199      	sbcs	r1, r3
 80003d4:	9000      	str	r0, [sp, #0]
 80003d6:	9101      	str	r1, [sp, #4]
 80003d8:	e7ac      	b.n	8000334 <__udivmoddi4+0x80>
 80003da:	4662      	mov	r2, ip
 80003dc:	2320      	movs	r3, #32
 80003de:	1a9b      	subs	r3, r3, r2
 80003e0:	464a      	mov	r2, r9
 80003e2:	40da      	lsrs	r2, r3
 80003e4:	4661      	mov	r1, ip
 80003e6:	0013      	movs	r3, r2
 80003e8:	4642      	mov	r2, r8
 80003ea:	408a      	lsls	r2, r1
 80003ec:	0017      	movs	r7, r2
 80003ee:	431f      	orrs	r7, r3
 80003f0:	e780      	b.n	80002f4 <__udivmoddi4+0x40>
 80003f2:	4662      	mov	r2, ip
 80003f4:	2320      	movs	r3, #32
 80003f6:	1a9b      	subs	r3, r3, r2
 80003f8:	002a      	movs	r2, r5
 80003fa:	4666      	mov	r6, ip
 80003fc:	409a      	lsls	r2, r3
 80003fe:	0023      	movs	r3, r4
 8000400:	40f3      	lsrs	r3, r6
 8000402:	4313      	orrs	r3, r2
 8000404:	e7d4      	b.n	80003b0 <__udivmoddi4+0xfc>
 8000406:	4662      	mov	r2, ip
 8000408:	2320      	movs	r3, #32
 800040a:	2100      	movs	r1, #0
 800040c:	1a9b      	subs	r3, r3, r2
 800040e:	2200      	movs	r2, #0
 8000410:	9100      	str	r1, [sp, #0]
 8000412:	9201      	str	r2, [sp, #4]
 8000414:	2201      	movs	r2, #1
 8000416:	40da      	lsrs	r2, r3
 8000418:	9201      	str	r2, [sp, #4]
 800041a:	e780      	b.n	800031e <__udivmoddi4+0x6a>
 800041c:	2320      	movs	r3, #32
 800041e:	4662      	mov	r2, ip
 8000420:	0026      	movs	r6, r4
 8000422:	1a9b      	subs	r3, r3, r2
 8000424:	40de      	lsrs	r6, r3
 8000426:	002f      	movs	r7, r5
 8000428:	46b0      	mov	r8, r6
 800042a:	4666      	mov	r6, ip
 800042c:	40b7      	lsls	r7, r6
 800042e:	4646      	mov	r6, r8
 8000430:	003b      	movs	r3, r7
 8000432:	4333      	orrs	r3, r6
 8000434:	e7c8      	b.n	80003c8 <__udivmoddi4+0x114>
 8000436:	46c0      	nop			; (mov r8, r8)

08000438 <__clzdi2>:
 8000438:	b510      	push	{r4, lr}
 800043a:	2900      	cmp	r1, #0
 800043c:	d103      	bne.n	8000446 <__clzdi2+0xe>
 800043e:	f000 f807 	bl	8000450 <__clzsi2>
 8000442:	3020      	adds	r0, #32
 8000444:	e002      	b.n	800044c <__clzdi2+0x14>
 8000446:	1c08      	adds	r0, r1, #0
 8000448:	f000 f802 	bl	8000450 <__clzsi2>
 800044c:	bd10      	pop	{r4, pc}
 800044e:	46c0      	nop			; (mov r8, r8)

08000450 <__clzsi2>:
 8000450:	211c      	movs	r1, #28
 8000452:	2301      	movs	r3, #1
 8000454:	041b      	lsls	r3, r3, #16
 8000456:	4298      	cmp	r0, r3
 8000458:	d301      	bcc.n	800045e <__clzsi2+0xe>
 800045a:	0c00      	lsrs	r0, r0, #16
 800045c:	3910      	subs	r1, #16
 800045e:	0a1b      	lsrs	r3, r3, #8
 8000460:	4298      	cmp	r0, r3
 8000462:	d301      	bcc.n	8000468 <__clzsi2+0x18>
 8000464:	0a00      	lsrs	r0, r0, #8
 8000466:	3908      	subs	r1, #8
 8000468:	091b      	lsrs	r3, r3, #4
 800046a:	4298      	cmp	r0, r3
 800046c:	d301      	bcc.n	8000472 <__clzsi2+0x22>
 800046e:	0900      	lsrs	r0, r0, #4
 8000470:	3904      	subs	r1, #4
 8000472:	a202      	add	r2, pc, #8	; (adr r2, 800047c <__clzsi2+0x2c>)
 8000474:	5c10      	ldrb	r0, [r2, r0]
 8000476:	1840      	adds	r0, r0, r1
 8000478:	4770      	bx	lr
 800047a:	46c0      	nop			; (mov r8, r8)
 800047c:	02020304 	.word	0x02020304
 8000480:	01010101 	.word	0x01010101
	...

0800048c <SPI1_SendByte>:
//	CHIP_DESELECT(ICM20602);
}*/


unsigned char SPI1_SendByte(unsigned char data)
{
 800048c:	b590      	push	{r4, r7, lr}
 800048e:	b085      	sub	sp, #20
 8000490:	af00      	add	r7, sp, #0
 8000492:	0002      	movs	r2, r0
 8000494:	1dfb      	adds	r3, r7, #7
 8000496:	701a      	strb	r2, [r3, #0]
	while((SPI1->SR & SPI_SR_TXE) == RESET);
 8000498:	46c0      	nop			; (mov r8, r8)
 800049a:	4b0b      	ldr	r3, [pc, #44]	; (80004c8 <SPI1_SendByte+0x3c>)
 800049c:	689b      	ldr	r3, [r3, #8]
 800049e:	2202      	movs	r2, #2
 80004a0:	4013      	ands	r3, r2
 80004a2:	d0fa      	beq.n	800049a <SPI1_SendByte+0xe>
//	uint8_t dataAry[4] = {0xa0, 0xa2, 0xa4, 0xa6};
	unsigned char returnVal = 0;
 80004a4:	240f      	movs	r4, #15
 80004a6:	193b      	adds	r3, r7, r4
 80004a8:	2200      	movs	r2, #0
 80004aa:	701a      	strb	r2, [r3, #0]

	HAL_SPI_Transmit(&SPI_InitStruct, &data, sizeof(unsigned char), pow(2, 32) - 1);
 80004ac:	2301      	movs	r3, #1
 80004ae:	425b      	negs	r3, r3
 80004b0:	1df9      	adds	r1, r7, #7
 80004b2:	4806      	ldr	r0, [pc, #24]	; (80004cc <SPI1_SendByte+0x40>)
 80004b4:	2201      	movs	r2, #1
 80004b6:	f001 fc81 	bl	8001dbc <HAL_SPI_Transmit>
//	HAL_SPI_TransmitReceive(&SPI_InitStruct, &data, &returnVal, sizeof(data)/sizeof(uint8_t), (uint32_t) (pow(2, 32) - 1));
	return returnVal;
 80004ba:	193b      	adds	r3, r7, r4
 80004bc:	781b      	ldrb	r3, [r3, #0]
}
 80004be:	0018      	movs	r0, r3
 80004c0:	46bd      	mov	sp, r7
 80004c2:	b005      	add	sp, #20
 80004c4:	bd90      	pop	{r4, r7, pc}
 80004c6:	46c0      	nop			; (mov r8, r8)
 80004c8:	40013000 	.word	0x40013000
 80004cc:	2000003c 	.word	0x2000003c

080004d0 <ICM20602_Readbyte>:

//////////////////////////////////////////////////////////////

uint8_t ICM20602_Readbyte(uint8_t reg_addr)
{
 80004d0:	b5b0      	push	{r4, r5, r7, lr}
 80004d2:	b084      	sub	sp, #16
 80004d4:	af00      	add	r7, sp, #0
 80004d6:	0002      	movs	r2, r0
 80004d8:	1dfb      	adds	r3, r7, #7
 80004da:	701a      	strb	r2, [r3, #0]
	uint8_t val;

	val = SPI1_SendByte(reg_addr | 0x80); //Register. MSB 1 is read instruction.
 80004dc:	1dfb      	adds	r3, r7, #7
 80004de:	781b      	ldrb	r3, [r3, #0]
 80004e0:	2280      	movs	r2, #128	; 0x80
 80004e2:	4252      	negs	r2, r2
 80004e4:	4313      	orrs	r3, r2
 80004e6:	b2db      	uxtb	r3, r3
 80004e8:	250f      	movs	r5, #15
 80004ea:	197c      	adds	r4, r7, r5
 80004ec:	0018      	movs	r0, r3
 80004ee:	f7ff ffcd 	bl	800048c <SPI1_SendByte>
 80004f2:	0003      	movs	r3, r0
 80004f4:	7023      	strb	r3, [r4, #0]
	val = SPI1_SendByte(0x00); //Send DUMMY to read data
 80004f6:	197c      	adds	r4, r7, r5
 80004f8:	2000      	movs	r0, #0
 80004fa:	f7ff ffc7 	bl	800048c <SPI1_SendByte>
 80004fe:	0003      	movs	r3, r0
 8000500:	7023      	strb	r3, [r4, #0]

	return val;
 8000502:	197b      	adds	r3, r7, r5
 8000504:	781b      	ldrb	r3, [r3, #0]
}
 8000506:	0018      	movs	r0, r3
 8000508:	46bd      	mov	sp, r7
 800050a:	b004      	add	sp, #16
 800050c:	bdb0      	pop	{r4, r5, r7, pc}

0800050e <ICM20602_Readbytes>:

void ICM20602_Readbytes(unsigned char reg_addr, unsigned char len, unsigned char* data)
{
 800050e:	b590      	push	{r4, r7, lr}
 8000510:	b085      	sub	sp, #20
 8000512:	af00      	add	r7, sp, #0
 8000514:	603a      	str	r2, [r7, #0]
 8000516:	1dfb      	adds	r3, r7, #7
 8000518:	1c02      	adds	r2, r0, #0
 800051a:	701a      	strb	r2, [r3, #0]
 800051c:	1dbb      	adds	r3, r7, #6
 800051e:	1c0a      	adds	r2, r1, #0
 8000520:	701a      	strb	r2, [r3, #0]
	unsigned int i = 0;
 8000522:	2300      	movs	r3, #0
 8000524:	60fb      	str	r3, [r7, #12]

	SPI1_SendByte(reg_addr | 0x80); //Register. MSB 1 is read instruction.
 8000526:	1dfb      	adds	r3, r7, #7
 8000528:	781b      	ldrb	r3, [r3, #0]
 800052a:	2280      	movs	r2, #128	; 0x80
 800052c:	4252      	negs	r2, r2
 800052e:	4313      	orrs	r3, r2
 8000530:	b2db      	uxtb	r3, r3
 8000532:	0018      	movs	r0, r3
 8000534:	f7ff ffaa 	bl	800048c <SPI1_SendByte>
	while(i < len)
 8000538:	e009      	b.n	800054e <ICM20602_Readbytes+0x40>
	{
		data[i++] = SPI1_SendByte(0x00); //Send DUMMY to read data
 800053a:	68fb      	ldr	r3, [r7, #12]
 800053c:	1c5a      	adds	r2, r3, #1
 800053e:	60fa      	str	r2, [r7, #12]
 8000540:	683a      	ldr	r2, [r7, #0]
 8000542:	18d4      	adds	r4, r2, r3
 8000544:	2000      	movs	r0, #0
 8000546:	f7ff ffa1 	bl	800048c <SPI1_SendByte>
 800054a:	0003      	movs	r3, r0
 800054c:	7023      	strb	r3, [r4, #0]
	while(i < len)
 800054e:	1dbb      	adds	r3, r7, #6
 8000550:	781b      	ldrb	r3, [r3, #0]
 8000552:	68fa      	ldr	r2, [r7, #12]
 8000554:	429a      	cmp	r2, r3
 8000556:	d3f0      	bcc.n	800053a <ICM20602_Readbytes+0x2c>
	}
}
 8000558:	46c0      	nop			; (mov r8, r8)
 800055a:	46bd      	mov	sp, r7
 800055c:	b005      	add	sp, #20
 800055e:	bd90      	pop	{r4, r7, pc}

08000560 <MX_SPI1_Init>:
  * @brief SPI2 Initialization Function
  * @param None
  * @retval None
  */
void MX_SPI1_Init(void)
{
 8000560:	b580      	push	{r7, lr}
 8000562:	b082      	sub	sp, #8
 8000564:	af00      	add	r7, sp, #0
  HAL_MspInit();
 8000566:	f000 f945 	bl	80007f4 <HAL_MspInit>
//  RCC->APB1ENR |= RCC_APB1ENR_SPI2EN;
  SPI_InitStruct.Instance = SPI1;
 800056a:	4b2d      	ldr	r3, [pc, #180]	; (8000620 <MX_SPI1_Init+0xc0>)
 800056c:	4a2d      	ldr	r2, [pc, #180]	; (8000624 <MX_SPI1_Init+0xc4>)
 800056e:	601a      	str	r2, [r3, #0]
  __HAL_RCC_SPI1_CLK_ENABLE();
 8000570:	4b2d      	ldr	r3, [pc, #180]	; (8000628 <MX_SPI1_Init+0xc8>)
 8000572:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8000574:	4b2c      	ldr	r3, [pc, #176]	; (8000628 <MX_SPI1_Init+0xc8>)
 8000576:	2180      	movs	r1, #128	; 0x80
 8000578:	0149      	lsls	r1, r1, #5
 800057a:	430a      	orrs	r2, r1
 800057c:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800057e:	4b2a      	ldr	r3, [pc, #168]	; (8000628 <MX_SPI1_Init+0xc8>)
 8000580:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8000582:	4b29      	ldr	r3, [pc, #164]	; (8000628 <MX_SPI1_Init+0xc8>)
 8000584:	2101      	movs	r1, #1
 8000586:	430a      	orrs	r2, r1
 8000588:	62da      	str	r2, [r3, #44]	; 0x2c
 800058a:	4b27      	ldr	r3, [pc, #156]	; (8000628 <MX_SPI1_Init+0xc8>)
 800058c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800058e:	2201      	movs	r2, #1
 8000590:	4013      	ands	r3, r2
 8000592:	607b      	str	r3, [r7, #4]
 8000594:	687b      	ldr	r3, [r7, #4]

  GPIO_InitStruct.Pin = GPIO_PIN_4 | GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
 8000596:	4b25      	ldr	r3, [pc, #148]	; (800062c <MX_SPI1_Init+0xcc>)
 8000598:	22f0      	movs	r2, #240	; 0xf0
 800059a:	601a      	str	r2, [r3, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800059c:	4b23      	ldr	r3, [pc, #140]	; (800062c <MX_SPI1_Init+0xcc>)
 800059e:	2202      	movs	r2, #2
 80005a0:	605a      	str	r2, [r3, #4]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80005a2:	4b22      	ldr	r3, [pc, #136]	; (800062c <MX_SPI1_Init+0xcc>)
 80005a4:	2200      	movs	r2, #0
 80005a6:	609a      	str	r2, [r3, #8]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80005a8:	4b20      	ldr	r3, [pc, #128]	; (800062c <MX_SPI1_Init+0xcc>)
 80005aa:	2203      	movs	r2, #3
 80005ac:	60da      	str	r2, [r3, #12]
  GPIO_InitStruct.Alternate = GPIO_AF0_SPI1;
 80005ae:	4b1f      	ldr	r3, [pc, #124]	; (800062c <MX_SPI1_Init+0xcc>)
 80005b0:	2200      	movs	r2, #0
 80005b2:	611a      	str	r2, [r3, #16]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80005b4:	4a1d      	ldr	r2, [pc, #116]	; (800062c <MX_SPI1_Init+0xcc>)
 80005b6:	23a0      	movs	r3, #160	; 0xa0
 80005b8:	05db      	lsls	r3, r3, #23
 80005ba:	0011      	movs	r1, r2
 80005bc:	0018      	movs	r0, r3
 80005be:	f000 fadd 	bl	8000b7c <HAL_GPIO_Init>

  SPI_InitStruct.Init.Direction = SPI_DIRECTION_2LINES;
 80005c2:	4b17      	ldr	r3, [pc, #92]	; (8000620 <MX_SPI1_Init+0xc0>)
 80005c4:	2200      	movs	r2, #0
 80005c6:	609a      	str	r2, [r3, #8]
  SPI_InitStruct.Init.Mode = SPI_MODE_MASTER;
 80005c8:	4b15      	ldr	r3, [pc, #84]	; (8000620 <MX_SPI1_Init+0xc0>)
 80005ca:	2282      	movs	r2, #130	; 0x82
 80005cc:	0052      	lsls	r2, r2, #1
 80005ce:	605a      	str	r2, [r3, #4]
  SPI_InitStruct.Init.DataSize = SPI_DATASIZE_8BIT;
 80005d0:	4b13      	ldr	r3, [pc, #76]	; (8000620 <MX_SPI1_Init+0xc0>)
 80005d2:	2200      	movs	r2, #0
 80005d4:	60da      	str	r2, [r3, #12]
  SPI_InitStruct.Init.CLKPolarity = SPI_POLARITY_HIGH;
 80005d6:	4b12      	ldr	r3, [pc, #72]	; (8000620 <MX_SPI1_Init+0xc0>)
 80005d8:	2202      	movs	r2, #2
 80005da:	611a      	str	r2, [r3, #16]
  SPI_InitStruct.Init.CLKPhase = SPI_PHASE_1EDGE;
 80005dc:	4b10      	ldr	r3, [pc, #64]	; (8000620 <MX_SPI1_Init+0xc0>)
 80005de:	2200      	movs	r2, #0
 80005e0:	615a      	str	r2, [r3, #20]
  SPI_InitStruct.Init.NSS = SPI_NSS_HARD_INPUT;
 80005e2:	4b0f      	ldr	r3, [pc, #60]	; (8000620 <MX_SPI1_Init+0xc0>)
 80005e4:	2200      	movs	r2, #0
 80005e6:	619a      	str	r2, [r3, #24]
  SPI_InitStruct.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_8; //ICM-20602 MAX SPI CLK is 10MHz. But DIV2(42MHz) is available.
 80005e8:	4b0d      	ldr	r3, [pc, #52]	; (8000620 <MX_SPI1_Init+0xc0>)
 80005ea:	2210      	movs	r2, #16
 80005ec:	61da      	str	r2, [r3, #28]
  SPI_InitStruct.Init.FirstBit = SPI_FIRSTBIT_MSB;
 80005ee:	4b0c      	ldr	r3, [pc, #48]	; (8000620 <MX_SPI1_Init+0xc0>)
 80005f0:	2200      	movs	r2, #0
 80005f2:	621a      	str	r2, [r3, #32]
  SPI_InitStruct.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 80005f4:	4b0a      	ldr	r3, [pc, #40]	; (8000620 <MX_SPI1_Init+0xc0>)
 80005f6:	2200      	movs	r2, #0
 80005f8:	629a      	str	r2, [r3, #40]	; 0x28
  SPI_InitStruct.Init.CRCPolynomial = 7;
 80005fa:	4b09      	ldr	r3, [pc, #36]	; (8000620 <MX_SPI1_Init+0xc0>)
 80005fc:	2207      	movs	r2, #7
 80005fe:	62da      	str	r2, [r3, #44]	; 0x2c
  SPI_InitStruct.State = HAL_SPI_STATE_READY;
 8000600:	4b07      	ldr	r3, [pc, #28]	; (8000620 <MX_SPI1_Init+0xc0>)
 8000602:	2251      	movs	r2, #81	; 0x51
 8000604:	2101      	movs	r1, #1
 8000606:	5499      	strb	r1, [r3, r2]
  if (HAL_SPI_Init(&SPI_InitStruct) != HAL_OK)
 8000608:	4b05      	ldr	r3, [pc, #20]	; (8000620 <MX_SPI1_Init+0xc0>)
 800060a:	0018      	movs	r0, r3
 800060c:	f001 fb42 	bl	8001c94 <HAL_SPI_Init>
 8000610:	1e03      	subs	r3, r0, #0
 8000612:	d001      	beq.n	8000618 <MX_SPI1_Init+0xb8>
  {
    Error_Handler();
 8000614:	f000 f8ea 	bl	80007ec <Error_Handler>
  }
}
 8000618:	46c0      	nop			; (mov r8, r8)
 800061a:	46bd      	mov	sp, r7
 800061c:	b002      	add	sp, #8
 800061e:	bd80      	pop	{r7, pc}
 8000620:	2000003c 	.word	0x2000003c
 8000624:	40013000 	.word	0x40013000
 8000628:	40021000 	.word	0x40021000
 800062c:	20000028 	.word	0x20000028

08000630 <ICM20602_Initialization>:

int ICM20602_Initialization(void)
{
 8000630:	b590      	push	{r4, r7, lr}
 8000632:	b085      	sub	sp, #20
 8000634:	af00      	add	r7, sp, #0

	uint8_t who_am_i = 0;
 8000636:	230f      	movs	r3, #15
 8000638:	18fb      	adds	r3, r7, r3
 800063a:	2200      	movs	r2, #0
 800063c:	701a      	strb	r2, [r3, #0]
	int16_t accel_raw_data[3] = {0};  // To remove offset
 800063e:	2308      	movs	r3, #8
 8000640:	18fb      	adds	r3, r7, r3
 8000642:	0018      	movs	r0, r3
 8000644:	2306      	movs	r3, #6
 8000646:	001a      	movs	r2, r3
 8000648:	2100      	movs	r1, #0
 800064a:	f001 fe05 	bl	8002258 <memset>
	int16_t gyro_raw_data[3] = {0};   // To remove offset
 800064e:	003b      	movs	r3, r7
 8000650:	0018      	movs	r0, r3
 8000652:	2306      	movs	r3, #6
 8000654:	001a      	movs	r2, r3
 8000656:	2100      	movs	r1, #0
 8000658:	f001 fdfe 	bl	8002258 <memset>

    MX_SPI1_Init();
 800065c:	f7ff ff80 	bl	8000560 <MX_SPI1_Init>

//	ICM20602_GPIO_SPI_Initialization();

	// check WHO_AM_I (0x75)
	while(1){
		who_am_i = ICM20602_Readbyte(WHO_AM_I);
 8000660:	230f      	movs	r3, #15
 8000662:	18fc      	adds	r4, r7, r3
 8000664:	2075      	movs	r0, #117	; 0x75
 8000666:	f7ff ff33 	bl	80004d0 <ICM20602_Readbyte>
 800066a:	0003      	movs	r3, r0
 800066c:	7023      	strb	r3, [r4, #0]
 800066e:	e7f7      	b.n	8000660 <ICM20602_Initialization+0x30>

08000670 <ICM20602_Get3AxisAccRawData>:
	gyro[1] = ((data[2] << 8) | data[3]);
	gyro[2] = ((data[4] << 8) | data[5]);
}

void ICM20602_Get3AxisAccRawData(short* accel)
{
 8000670:	b590      	push	{r4, r7, lr}
 8000672:	b085      	sub	sp, #20
 8000674:	af00      	add	r7, sp, #0
 8000676:	6078      	str	r0, [r7, #4]
	unsigned char data[6];
	ICM20602_Readbytes(ACCEL_XOUT_H, 6, data);
 8000678:	2008      	movs	r0, #8
 800067a:	0004      	movs	r4, r0
 800067c:	183b      	adds	r3, r7, r0
 800067e:	001a      	movs	r2, r3
 8000680:	2106      	movs	r1, #6
 8000682:	203b      	movs	r0, #59	; 0x3b
 8000684:	f7ff ff43 	bl	800050e <ICM20602_Readbytes>

	accel[0] = ((data[0] << 8) | data[1]);
 8000688:	0020      	movs	r0, r4
 800068a:	183b      	adds	r3, r7, r0
 800068c:	781b      	ldrb	r3, [r3, #0]
 800068e:	021b      	lsls	r3, r3, #8
 8000690:	b21a      	sxth	r2, r3
 8000692:	183b      	adds	r3, r7, r0
 8000694:	785b      	ldrb	r3, [r3, #1]
 8000696:	b21b      	sxth	r3, r3
 8000698:	4313      	orrs	r3, r2
 800069a:	b21a      	sxth	r2, r3
 800069c:	687b      	ldr	r3, [r7, #4]
 800069e:	801a      	strh	r2, [r3, #0]
	accel[1] = ((data[2] << 8) | data[3]);
 80006a0:	183b      	adds	r3, r7, r0
 80006a2:	789b      	ldrb	r3, [r3, #2]
 80006a4:	021b      	lsls	r3, r3, #8
 80006a6:	b219      	sxth	r1, r3
 80006a8:	183b      	adds	r3, r7, r0
 80006aa:	78db      	ldrb	r3, [r3, #3]
 80006ac:	b21a      	sxth	r2, r3
 80006ae:	687b      	ldr	r3, [r7, #4]
 80006b0:	3302      	adds	r3, #2
 80006b2:	430a      	orrs	r2, r1
 80006b4:	b212      	sxth	r2, r2
 80006b6:	801a      	strh	r2, [r3, #0]
	accel[2] = ((data[4] << 8) | data[5]);
 80006b8:	183b      	adds	r3, r7, r0
 80006ba:	791b      	ldrb	r3, [r3, #4]
 80006bc:	021b      	lsls	r3, r3, #8
 80006be:	b219      	sxth	r1, r3
 80006c0:	183b      	adds	r3, r7, r0
 80006c2:	795b      	ldrb	r3, [r3, #5]
 80006c4:	b21a      	sxth	r2, r3
 80006c6:	687b      	ldr	r3, [r7, #4]
 80006c8:	3304      	adds	r3, #4
 80006ca:	430a      	orrs	r2, r1
 80006cc:	b212      	sxth	r2, r2
 80006ce:	801a      	strh	r2, [r3, #0]
}
 80006d0:	46c0      	nop			; (mov r8, r8)
 80006d2:	46bd      	mov	sp, r7
 80006d4:	b005      	add	sp, #20
 80006d6:	bd90      	pop	{r4, r7, pc}

080006d8 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 80006d8:	b580      	push	{r7, lr}
 80006da:	b084      	sub	sp, #16
 80006dc:	af00      	add	r7, sp, #0
  int device_ID;
  short accelData[3] = {0};
 80006de:	1d3b      	adds	r3, r7, #4
 80006e0:	0018      	movs	r0, r3
 80006e2:	2306      	movs	r3, #6
 80006e4:	001a      	movs	r2, r3
 80006e6:	2100      	movs	r1, #0
 80006e8:	f001 fdb6 	bl	8002258 <memset>

  HAL_Init();
 80006ec:	f000 f922 	bl	8000934 <HAL_Init>
  SystemClock_Config();
 80006f0:	f000 f810 	bl	8000714 <SystemClock_Config>
  device_ID = ICM20602_Initialization();
 80006f4:	f7ff ff9c 	bl	8000630 <ICM20602_Initialization>
 80006f8:	0003      	movs	r3, r0
 80006fa:	60fb      	str	r3, [r7, #12]
  ICM20602_Get3AxisAccRawData(accelData);
 80006fc:	1d3b      	adds	r3, r7, #4
 80006fe:	0018      	movs	r0, r3
 8000700:	f7ff ffb6 	bl	8000670 <ICM20602_Get3AxisAccRawData>
  device_ID += 1;
 8000704:	68fb      	ldr	r3, [r7, #12]
 8000706:	3301      	adds	r3, #1
 8000708:	60fb      	str	r3, [r7, #12]
 800070a:	2300      	movs	r3, #0
}
 800070c:	0018      	movs	r0, r3
 800070e:	46bd      	mov	sp, r7
 8000710:	b004      	add	sp, #16
 8000712:	bd80      	pop	{r7, pc}

08000714 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000714:	b590      	push	{r4, r7, lr}
 8000716:	b09d      	sub	sp, #116	; 0x74
 8000718:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800071a:	2438      	movs	r4, #56	; 0x38
 800071c:	193b      	adds	r3, r7, r4
 800071e:	0018      	movs	r0, r3
 8000720:	2338      	movs	r3, #56	; 0x38
 8000722:	001a      	movs	r2, r3
 8000724:	2100      	movs	r1, #0
 8000726:	f001 fd97 	bl	8002258 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800072a:	2324      	movs	r3, #36	; 0x24
 800072c:	18fb      	adds	r3, r7, r3
 800072e:	0018      	movs	r0, r3
 8000730:	2314      	movs	r3, #20
 8000732:	001a      	movs	r2, r3
 8000734:	2100      	movs	r1, #0
 8000736:	f001 fd8f 	bl	8002258 <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 800073a:	003b      	movs	r3, r7
 800073c:	0018      	movs	r0, r3
 800073e:	2324      	movs	r3, #36	; 0x24
 8000740:	001a      	movs	r2, r3
 8000742:	2100      	movs	r1, #0
 8000744:	f001 fd88 	bl	8002258 <memset>

  /** Configure the main internal regulator output voltage
  */
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8000748:	4b26      	ldr	r3, [pc, #152]	; (80007e4 <SystemClock_Config+0xd0>)
 800074a:	681b      	ldr	r3, [r3, #0]
 800074c:	4a26      	ldr	r2, [pc, #152]	; (80007e8 <SystemClock_Config+0xd4>)
 800074e:	401a      	ands	r2, r3
 8000750:	4b24      	ldr	r3, [pc, #144]	; (80007e4 <SystemClock_Config+0xd0>)
 8000752:	2180      	movs	r1, #128	; 0x80
 8000754:	0109      	lsls	r1, r1, #4
 8000756:	430a      	orrs	r2, r1
 8000758:	601a      	str	r2, [r3, #0]
  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_MSI;
 800075a:	0021      	movs	r1, r4
 800075c:	187b      	adds	r3, r7, r1
 800075e:	2210      	movs	r2, #16
 8000760:	601a      	str	r2, [r3, #0]
  RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 8000762:	187b      	adds	r3, r7, r1
 8000764:	2201      	movs	r2, #1
 8000766:	61da      	str	r2, [r3, #28]
  RCC_OscInitStruct.MSICalibrationValue = 0;
 8000768:	187b      	adds	r3, r7, r1
 800076a:	2200      	movs	r2, #0
 800076c:	621a      	str	r2, [r3, #32]
  RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_5;
 800076e:	187b      	adds	r3, r7, r1
 8000770:	22a0      	movs	r2, #160	; 0xa0
 8000772:	0212      	lsls	r2, r2, #8
 8000774:	625a      	str	r2, [r3, #36]	; 0x24
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 8000776:	187b      	adds	r3, r7, r1
 8000778:	2200      	movs	r2, #0
 800077a:	629a      	str	r2, [r3, #40]	; 0x28
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800077c:	187b      	adds	r3, r7, r1
 800077e:	0018      	movs	r0, r3
 8000780:	f000 fb72 	bl	8000e68 <HAL_RCC_OscConfig>
 8000784:	1e03      	subs	r3, r0, #0
 8000786:	d001      	beq.n	800078c <SystemClock_Config+0x78>
  {
    Error_Handler();
 8000788:	f000 f830 	bl	80007ec <Error_Handler>
  }
  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 800078c:	2124      	movs	r1, #36	; 0x24
 800078e:	187b      	adds	r3, r7, r1
 8000790:	220f      	movs	r2, #15
 8000792:	601a      	str	r2, [r3, #0]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_MSI;
 8000794:	187b      	adds	r3, r7, r1
 8000796:	2200      	movs	r2, #0
 8000798:	605a      	str	r2, [r3, #4]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 800079a:	187b      	adds	r3, r7, r1
 800079c:	2200      	movs	r2, #0
 800079e:	609a      	str	r2, [r3, #8]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 80007a0:	187b      	adds	r3, r7, r1
 80007a2:	2200      	movs	r2, #0
 80007a4:	60da      	str	r2, [r3, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 80007a6:	187b      	adds	r3, r7, r1
 80007a8:	2200      	movs	r2, #0
 80007aa:	611a      	str	r2, [r3, #16]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 80007ac:	187b      	adds	r3, r7, r1
 80007ae:	2100      	movs	r1, #0
 80007b0:	0018      	movs	r0, r3
 80007b2:	f000 ff21 	bl	80015f8 <HAL_RCC_ClockConfig>
 80007b6:	1e03      	subs	r3, r0, #0
 80007b8:	d001      	beq.n	80007be <SystemClock_Config+0xaa>
  {
    Error_Handler();
 80007ba:	f000 f817 	bl	80007ec <Error_Handler>
  }
  PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART1;
 80007be:	003b      	movs	r3, r7
 80007c0:	2201      	movs	r2, #1
 80007c2:	601a      	str	r2, [r3, #0]
  PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK2;
 80007c4:	003b      	movs	r3, r7
 80007c6:	2200      	movs	r2, #0
 80007c8:	60da      	str	r2, [r3, #12]
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 80007ca:	003b      	movs	r3, r7
 80007cc:	0018      	movs	r0, r3
 80007ce:	f001 f8fd 	bl	80019cc <HAL_RCCEx_PeriphCLKConfig>
 80007d2:	1e03      	subs	r3, r0, #0
 80007d4:	d001      	beq.n	80007da <SystemClock_Config+0xc6>
  {
    Error_Handler();
 80007d6:	f000 f809 	bl	80007ec <Error_Handler>
  }
}
 80007da:	46c0      	nop			; (mov r8, r8)
 80007dc:	46bd      	mov	sp, r7
 80007de:	b01d      	add	sp, #116	; 0x74
 80007e0:	bd90      	pop	{r4, r7, pc}
 80007e2:	46c0      	nop			; (mov r8, r8)
 80007e4:	40007000 	.word	0x40007000
 80007e8:	ffffe7ff 	.word	0xffffe7ff

080007ec <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 80007ec:	b580      	push	{r7, lr}
 80007ee:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 80007f0:	b672      	cpsid	i
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 80007f2:	e7fe      	b.n	80007f2 <Error_Handler+0x6>

080007f4 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 80007f4:	b580      	push	{r7, lr}
 80007f6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80007f8:	4b07      	ldr	r3, [pc, #28]	; (8000818 <HAL_MspInit+0x24>)
 80007fa:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80007fc:	4b06      	ldr	r3, [pc, #24]	; (8000818 <HAL_MspInit+0x24>)
 80007fe:	2101      	movs	r1, #1
 8000800:	430a      	orrs	r2, r1
 8000802:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_RCC_PWR_CLK_ENABLE();
 8000804:	4b04      	ldr	r3, [pc, #16]	; (8000818 <HAL_MspInit+0x24>)
 8000806:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8000808:	4b03      	ldr	r3, [pc, #12]	; (8000818 <HAL_MspInit+0x24>)
 800080a:	2180      	movs	r1, #128	; 0x80
 800080c:	0549      	lsls	r1, r1, #21
 800080e:	430a      	orrs	r2, r1
 8000810:	639a      	str	r2, [r3, #56]	; 0x38
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8000812:	46c0      	nop			; (mov r8, r8)
 8000814:	46bd      	mov	sp, r7
 8000816:	bd80      	pop	{r7, pc}
 8000818:	40021000 	.word	0x40021000

0800081c <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 800081c:	b580      	push	{r7, lr}
 800081e:	b088      	sub	sp, #32
 8000820:	af00      	add	r7, sp, #0
 8000822:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000824:	230c      	movs	r3, #12
 8000826:	18fb      	adds	r3, r7, r3
 8000828:	0018      	movs	r0, r3
 800082a:	2314      	movs	r3, #20
 800082c:	001a      	movs	r2, r3
 800082e:	2100      	movs	r1, #0
 8000830:	f001 fd12 	bl	8002258 <memset>
  if(hspi->Instance==SPI2)
 8000834:	687b      	ldr	r3, [r7, #4]
 8000836:	681b      	ldr	r3, [r3, #0]
 8000838:	4a18      	ldr	r2, [pc, #96]	; (800089c <HAL_SPI_MspInit+0x80>)
 800083a:	4293      	cmp	r3, r2
 800083c:	d129      	bne.n	8000892 <HAL_SPI_MspInit+0x76>
  {
  /* USER CODE BEGIN SPI1_MspInit 0 */

  /* USER CODE END SPI1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI2_CLK_ENABLE();
 800083e:	4b18      	ldr	r3, [pc, #96]	; (80008a0 <HAL_SPI_MspInit+0x84>)
 8000840:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8000842:	4b17      	ldr	r3, [pc, #92]	; (80008a0 <HAL_SPI_MspInit+0x84>)
 8000844:	2180      	movs	r1, #128	; 0x80
 8000846:	01c9      	lsls	r1, r1, #7
 8000848:	430a      	orrs	r2, r1
 800084a:	639a      	str	r2, [r3, #56]	; 0x38

    __HAL_RCC_GPIOB_CLK_ENABLE();
 800084c:	4b14      	ldr	r3, [pc, #80]	; (80008a0 <HAL_SPI_MspInit+0x84>)
 800084e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8000850:	4b13      	ldr	r3, [pc, #76]	; (80008a0 <HAL_SPI_MspInit+0x84>)
 8000852:	2102      	movs	r1, #2
 8000854:	430a      	orrs	r2, r1
 8000856:	62da      	str	r2, [r3, #44]	; 0x2c
 8000858:	4b11      	ldr	r3, [pc, #68]	; (80008a0 <HAL_SPI_MspInit+0x84>)
 800085a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800085c:	2202      	movs	r2, #2
 800085e:	4013      	ands	r3, r2
 8000860:	60bb      	str	r3, [r7, #8]
 8000862:	68bb      	ldr	r3, [r7, #8]
    /**SPI1 GPIO Configuration
    PA5     ------> SPI1_SCK
    PA6     ------> SPI1_MISO
    PA7     ------> SPI1_MOSI
    */
    GPIO_InitStruct.Pin = GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15;
 8000864:	210c      	movs	r1, #12
 8000866:	187b      	adds	r3, r7, r1
 8000868:	22e0      	movs	r2, #224	; 0xe0
 800086a:	0212      	lsls	r2, r2, #8
 800086c:	601a      	str	r2, [r3, #0]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800086e:	187b      	adds	r3, r7, r1
 8000870:	2202      	movs	r2, #2
 8000872:	605a      	str	r2, [r3, #4]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000874:	187b      	adds	r3, r7, r1
 8000876:	2200      	movs	r2, #0
 8000878:	609a      	str	r2, [r3, #8]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800087a:	187b      	adds	r3, r7, r1
 800087c:	2203      	movs	r2, #3
 800087e:	60da      	str	r2, [r3, #12]
    GPIO_InitStruct.Alternate = GPIO_AF0_SPI2;
 8000880:	187b      	adds	r3, r7, r1
 8000882:	2200      	movs	r2, #0
 8000884:	611a      	str	r2, [r3, #16]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000886:	187b      	adds	r3, r7, r1
 8000888:	4a06      	ldr	r2, [pc, #24]	; (80008a4 <HAL_SPI_MspInit+0x88>)
 800088a:	0019      	movs	r1, r3
 800088c:	0010      	movs	r0, r2
 800088e:	f000 f975 	bl	8000b7c <HAL_GPIO_Init>
  }
}
 8000892:	46c0      	nop			; (mov r8, r8)
 8000894:	46bd      	mov	sp, r7
 8000896:	b008      	add	sp, #32
 8000898:	bd80      	pop	{r7, pc}
 800089a:	46c0      	nop			; (mov r8, r8)
 800089c:	40003800 	.word	0x40003800
 80008a0:	40021000 	.word	0x40021000
 80008a4:	50000400 	.word	0x50000400

080008a8 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 80008a8:	b580      	push	{r7, lr}
 80008aa:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 80008ac:	e7fe      	b.n	80008ac <NMI_Handler+0x4>

080008ae <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 80008ae:	b580      	push	{r7, lr}
 80008b0:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 80008b2:	e7fe      	b.n	80008b2 <HardFault_Handler+0x4>

080008b4 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 80008b4:	b580      	push	{r7, lr}
 80008b6:	af00      	add	r7, sp, #0

  /* USER CODE END SVC_IRQn 0 */
  /* USER CODE BEGIN SVC_IRQn 1 */

  /* USER CODE END SVC_IRQn 1 */
}
 80008b8:	46c0      	nop			; (mov r8, r8)
 80008ba:	46bd      	mov	sp, r7
 80008bc:	bd80      	pop	{r7, pc}

080008be <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 80008be:	b580      	push	{r7, lr}
 80008c0:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 80008c2:	46c0      	nop			; (mov r8, r8)
 80008c4:	46bd      	mov	sp, r7
 80008c6:	bd80      	pop	{r7, pc}

080008c8 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 80008c8:	b580      	push	{r7, lr}
 80008ca:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 80008cc:	f000 f886 	bl	80009dc <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 80008d0:	46c0      	nop			; (mov r8, r8)
 80008d2:	46bd      	mov	sp, r7
 80008d4:	bd80      	pop	{r7, pc}

080008d6 <SystemInit>:
 80008d6:	b580      	push	{r7, lr}
 80008d8:	af00      	add	r7, sp, #0
 80008da:	46c0      	nop			; (mov r8, r8)
 80008dc:	46bd      	mov	sp, r7
 80008de:	bd80      	pop	{r7, pc}

080008e0 <Reset_Handler>:
 80008e0:	480d      	ldr	r0, [pc, #52]	; (8000918 <LoopForever+0x2>)
 80008e2:	4685      	mov	sp, r0
 80008e4:	480d      	ldr	r0, [pc, #52]	; (800091c <LoopForever+0x6>)
 80008e6:	490e      	ldr	r1, [pc, #56]	; (8000920 <LoopForever+0xa>)
 80008e8:	4a0e      	ldr	r2, [pc, #56]	; (8000924 <LoopForever+0xe>)
 80008ea:	2300      	movs	r3, #0
 80008ec:	e002      	b.n	80008f4 <LoopCopyDataInit>

080008ee <CopyDataInit>:
 80008ee:	58d4      	ldr	r4, [r2, r3]
 80008f0:	50c4      	str	r4, [r0, r3]
 80008f2:	3304      	adds	r3, #4

080008f4 <LoopCopyDataInit>:
 80008f4:	18c4      	adds	r4, r0, r3
 80008f6:	428c      	cmp	r4, r1
 80008f8:	d3f9      	bcc.n	80008ee <CopyDataInit>
 80008fa:	4a0b      	ldr	r2, [pc, #44]	; (8000928 <LoopForever+0x12>)
 80008fc:	4c0b      	ldr	r4, [pc, #44]	; (800092c <LoopForever+0x16>)
 80008fe:	2300      	movs	r3, #0
 8000900:	e001      	b.n	8000906 <LoopFillZerobss>

08000902 <FillZerobss>:
 8000902:	6013      	str	r3, [r2, #0]
 8000904:	3204      	adds	r2, #4

08000906 <LoopFillZerobss>:
 8000906:	42a2      	cmp	r2, r4
 8000908:	d3fb      	bcc.n	8000902 <FillZerobss>
 800090a:	f7ff ffe4 	bl	80008d6 <SystemInit>
 800090e:	f001 fc7f 	bl	8002210 <__libc_init_array>
 8000912:	f7ff fee1 	bl	80006d8 <main>

08000916 <LoopForever>:
 8000916:	e7fe      	b.n	8000916 <LoopForever>
 8000918:	20002000 	.word	0x20002000
 800091c:	20000000 	.word	0x20000000
 8000920:	2000000c 	.word	0x2000000c
 8000924:	080022ac 	.word	0x080022ac
 8000928:	2000000c 	.word	0x2000000c
 800092c:	20000098 	.word	0x20000098

08000930 <ADC1_COMP_IRQHandler>:
 8000930:	e7fe      	b.n	8000930 <ADC1_COMP_IRQHandler>
	...

08000934 <HAL_Init>:
 8000934:	b580      	push	{r7, lr}
 8000936:	b082      	sub	sp, #8
 8000938:	af00      	add	r7, sp, #0
 800093a:	1dfb      	adds	r3, r7, #7
 800093c:	2200      	movs	r2, #0
 800093e:	701a      	strb	r2, [r3, #0]
 8000940:	4b0b      	ldr	r3, [pc, #44]	; (8000970 <HAL_Init+0x3c>)
 8000942:	681a      	ldr	r2, [r3, #0]
 8000944:	4b0a      	ldr	r3, [pc, #40]	; (8000970 <HAL_Init+0x3c>)
 8000946:	2140      	movs	r1, #64	; 0x40
 8000948:	430a      	orrs	r2, r1
 800094a:	601a      	str	r2, [r3, #0]
 800094c:	2000      	movs	r0, #0
 800094e:	f000 f811 	bl	8000974 <HAL_InitTick>
 8000952:	1e03      	subs	r3, r0, #0
 8000954:	d003      	beq.n	800095e <HAL_Init+0x2a>
 8000956:	1dfb      	adds	r3, r7, #7
 8000958:	2201      	movs	r2, #1
 800095a:	701a      	strb	r2, [r3, #0]
 800095c:	e001      	b.n	8000962 <HAL_Init+0x2e>
 800095e:	f7ff ff49 	bl	80007f4 <HAL_MspInit>
 8000962:	1dfb      	adds	r3, r7, #7
 8000964:	781b      	ldrb	r3, [r3, #0]
 8000966:	0018      	movs	r0, r3
 8000968:	46bd      	mov	sp, r7
 800096a:	b002      	add	sp, #8
 800096c:	bd80      	pop	{r7, pc}
 800096e:	46c0      	nop			; (mov r8, r8)
 8000970:	40022000 	.word	0x40022000

08000974 <HAL_InitTick>:
 8000974:	b590      	push	{r4, r7, lr}
 8000976:	b083      	sub	sp, #12
 8000978:	af00      	add	r7, sp, #0
 800097a:	6078      	str	r0, [r7, #4]
 800097c:	4b14      	ldr	r3, [pc, #80]	; (80009d0 <HAL_InitTick+0x5c>)
 800097e:	681c      	ldr	r4, [r3, #0]
 8000980:	4b14      	ldr	r3, [pc, #80]	; (80009d4 <HAL_InitTick+0x60>)
 8000982:	781b      	ldrb	r3, [r3, #0]
 8000984:	0019      	movs	r1, r3
 8000986:	23fa      	movs	r3, #250	; 0xfa
 8000988:	0098      	lsls	r0, r3, #2
 800098a:	f7ff fbbd 	bl	8000108 <__udivsi3>
 800098e:	0003      	movs	r3, r0
 8000990:	0019      	movs	r1, r3
 8000992:	0020      	movs	r0, r4
 8000994:	f7ff fbb8 	bl	8000108 <__udivsi3>
 8000998:	0003      	movs	r3, r0
 800099a:	0018      	movs	r0, r3
 800099c:	f000 f8e1 	bl	8000b62 <HAL_SYSTICK_Config>
 80009a0:	1e03      	subs	r3, r0, #0
 80009a2:	d001      	beq.n	80009a8 <HAL_InitTick+0x34>
 80009a4:	2301      	movs	r3, #1
 80009a6:	e00f      	b.n	80009c8 <HAL_InitTick+0x54>
 80009a8:	687b      	ldr	r3, [r7, #4]
 80009aa:	2b03      	cmp	r3, #3
 80009ac:	d80b      	bhi.n	80009c6 <HAL_InitTick+0x52>
 80009ae:	6879      	ldr	r1, [r7, #4]
 80009b0:	2301      	movs	r3, #1
 80009b2:	425b      	negs	r3, r3
 80009b4:	2200      	movs	r2, #0
 80009b6:	0018      	movs	r0, r3
 80009b8:	f000 f8be 	bl	8000b38 <HAL_NVIC_SetPriority>
 80009bc:	4b06      	ldr	r3, [pc, #24]	; (80009d8 <HAL_InitTick+0x64>)
 80009be:	687a      	ldr	r2, [r7, #4]
 80009c0:	601a      	str	r2, [r3, #0]
 80009c2:	2300      	movs	r3, #0
 80009c4:	e000      	b.n	80009c8 <HAL_InitTick+0x54>
 80009c6:	2301      	movs	r3, #1
 80009c8:	0018      	movs	r0, r3
 80009ca:	46bd      	mov	sp, r7
 80009cc:	b003      	add	sp, #12
 80009ce:	bd90      	pop	{r4, r7, pc}
 80009d0:	20000000 	.word	0x20000000
 80009d4:	20000008 	.word	0x20000008
 80009d8:	20000004 	.word	0x20000004

080009dc <HAL_IncTick>:
 80009dc:	b580      	push	{r7, lr}
 80009de:	af00      	add	r7, sp, #0
 80009e0:	4b05      	ldr	r3, [pc, #20]	; (80009f8 <HAL_IncTick+0x1c>)
 80009e2:	781b      	ldrb	r3, [r3, #0]
 80009e4:	001a      	movs	r2, r3
 80009e6:	4b05      	ldr	r3, [pc, #20]	; (80009fc <HAL_IncTick+0x20>)
 80009e8:	681b      	ldr	r3, [r3, #0]
 80009ea:	18d2      	adds	r2, r2, r3
 80009ec:	4b03      	ldr	r3, [pc, #12]	; (80009fc <HAL_IncTick+0x20>)
 80009ee:	601a      	str	r2, [r3, #0]
 80009f0:	46c0      	nop			; (mov r8, r8)
 80009f2:	46bd      	mov	sp, r7
 80009f4:	bd80      	pop	{r7, pc}
 80009f6:	46c0      	nop			; (mov r8, r8)
 80009f8:	20000008 	.word	0x20000008
 80009fc:	20000094 	.word	0x20000094

08000a00 <HAL_GetTick>:
 8000a00:	b580      	push	{r7, lr}
 8000a02:	af00      	add	r7, sp, #0
 8000a04:	4b02      	ldr	r3, [pc, #8]	; (8000a10 <HAL_GetTick+0x10>)
 8000a06:	681b      	ldr	r3, [r3, #0]
 8000a08:	0018      	movs	r0, r3
 8000a0a:	46bd      	mov	sp, r7
 8000a0c:	bd80      	pop	{r7, pc}
 8000a0e:	46c0      	nop			; (mov r8, r8)
 8000a10:	20000094 	.word	0x20000094

08000a14 <__NVIC_SetPriority>:
 8000a14:	b590      	push	{r4, r7, lr}
 8000a16:	b083      	sub	sp, #12
 8000a18:	af00      	add	r7, sp, #0
 8000a1a:	0002      	movs	r2, r0
 8000a1c:	6039      	str	r1, [r7, #0]
 8000a1e:	1dfb      	adds	r3, r7, #7
 8000a20:	701a      	strb	r2, [r3, #0]
 8000a22:	1dfb      	adds	r3, r7, #7
 8000a24:	781b      	ldrb	r3, [r3, #0]
 8000a26:	2b7f      	cmp	r3, #127	; 0x7f
 8000a28:	d828      	bhi.n	8000a7c <__NVIC_SetPriority+0x68>
 8000a2a:	4a2f      	ldr	r2, [pc, #188]	; (8000ae8 <__NVIC_SetPriority+0xd4>)
 8000a2c:	1dfb      	adds	r3, r7, #7
 8000a2e:	781b      	ldrb	r3, [r3, #0]
 8000a30:	b25b      	sxtb	r3, r3
 8000a32:	089b      	lsrs	r3, r3, #2
 8000a34:	33c0      	adds	r3, #192	; 0xc0
 8000a36:	009b      	lsls	r3, r3, #2
 8000a38:	589b      	ldr	r3, [r3, r2]
 8000a3a:	1dfa      	adds	r2, r7, #7
 8000a3c:	7812      	ldrb	r2, [r2, #0]
 8000a3e:	0011      	movs	r1, r2
 8000a40:	2203      	movs	r2, #3
 8000a42:	400a      	ands	r2, r1
 8000a44:	00d2      	lsls	r2, r2, #3
 8000a46:	21ff      	movs	r1, #255	; 0xff
 8000a48:	4091      	lsls	r1, r2
 8000a4a:	000a      	movs	r2, r1
 8000a4c:	43d2      	mvns	r2, r2
 8000a4e:	401a      	ands	r2, r3
 8000a50:	0011      	movs	r1, r2
 8000a52:	683b      	ldr	r3, [r7, #0]
 8000a54:	019b      	lsls	r3, r3, #6
 8000a56:	22ff      	movs	r2, #255	; 0xff
 8000a58:	401a      	ands	r2, r3
 8000a5a:	1dfb      	adds	r3, r7, #7
 8000a5c:	781b      	ldrb	r3, [r3, #0]
 8000a5e:	0018      	movs	r0, r3
 8000a60:	2303      	movs	r3, #3
 8000a62:	4003      	ands	r3, r0
 8000a64:	00db      	lsls	r3, r3, #3
 8000a66:	409a      	lsls	r2, r3
 8000a68:	481f      	ldr	r0, [pc, #124]	; (8000ae8 <__NVIC_SetPriority+0xd4>)
 8000a6a:	1dfb      	adds	r3, r7, #7
 8000a6c:	781b      	ldrb	r3, [r3, #0]
 8000a6e:	b25b      	sxtb	r3, r3
 8000a70:	089b      	lsrs	r3, r3, #2
 8000a72:	430a      	orrs	r2, r1
 8000a74:	33c0      	adds	r3, #192	; 0xc0
 8000a76:	009b      	lsls	r3, r3, #2
 8000a78:	501a      	str	r2, [r3, r0]
 8000a7a:	e031      	b.n	8000ae0 <__NVIC_SetPriority+0xcc>
 8000a7c:	4a1b      	ldr	r2, [pc, #108]	; (8000aec <__NVIC_SetPriority+0xd8>)
 8000a7e:	1dfb      	adds	r3, r7, #7
 8000a80:	781b      	ldrb	r3, [r3, #0]
 8000a82:	0019      	movs	r1, r3
 8000a84:	230f      	movs	r3, #15
 8000a86:	400b      	ands	r3, r1
 8000a88:	3b08      	subs	r3, #8
 8000a8a:	089b      	lsrs	r3, r3, #2
 8000a8c:	3306      	adds	r3, #6
 8000a8e:	009b      	lsls	r3, r3, #2
 8000a90:	18d3      	adds	r3, r2, r3
 8000a92:	3304      	adds	r3, #4
 8000a94:	681b      	ldr	r3, [r3, #0]
 8000a96:	1dfa      	adds	r2, r7, #7
 8000a98:	7812      	ldrb	r2, [r2, #0]
 8000a9a:	0011      	movs	r1, r2
 8000a9c:	2203      	movs	r2, #3
 8000a9e:	400a      	ands	r2, r1
 8000aa0:	00d2      	lsls	r2, r2, #3
 8000aa2:	21ff      	movs	r1, #255	; 0xff
 8000aa4:	4091      	lsls	r1, r2
 8000aa6:	000a      	movs	r2, r1
 8000aa8:	43d2      	mvns	r2, r2
 8000aaa:	401a      	ands	r2, r3
 8000aac:	0011      	movs	r1, r2
 8000aae:	683b      	ldr	r3, [r7, #0]
 8000ab0:	019b      	lsls	r3, r3, #6
 8000ab2:	22ff      	movs	r2, #255	; 0xff
 8000ab4:	401a      	ands	r2, r3
 8000ab6:	1dfb      	adds	r3, r7, #7
 8000ab8:	781b      	ldrb	r3, [r3, #0]
 8000aba:	0018      	movs	r0, r3
 8000abc:	2303      	movs	r3, #3
 8000abe:	4003      	ands	r3, r0
 8000ac0:	00db      	lsls	r3, r3, #3
 8000ac2:	409a      	lsls	r2, r3
 8000ac4:	4809      	ldr	r0, [pc, #36]	; (8000aec <__NVIC_SetPriority+0xd8>)
 8000ac6:	1dfb      	adds	r3, r7, #7
 8000ac8:	781b      	ldrb	r3, [r3, #0]
 8000aca:	001c      	movs	r4, r3
 8000acc:	230f      	movs	r3, #15
 8000ace:	4023      	ands	r3, r4
 8000ad0:	3b08      	subs	r3, #8
 8000ad2:	089b      	lsrs	r3, r3, #2
 8000ad4:	430a      	orrs	r2, r1
 8000ad6:	3306      	adds	r3, #6
 8000ad8:	009b      	lsls	r3, r3, #2
 8000ada:	18c3      	adds	r3, r0, r3
 8000adc:	3304      	adds	r3, #4
 8000ade:	601a      	str	r2, [r3, #0]
 8000ae0:	46c0      	nop			; (mov r8, r8)
 8000ae2:	46bd      	mov	sp, r7
 8000ae4:	b003      	add	sp, #12
 8000ae6:	bd90      	pop	{r4, r7, pc}
 8000ae8:	e000e100 	.word	0xe000e100
 8000aec:	e000ed00 	.word	0xe000ed00

08000af0 <SysTick_Config>:
 8000af0:	b580      	push	{r7, lr}
 8000af2:	b082      	sub	sp, #8
 8000af4:	af00      	add	r7, sp, #0
 8000af6:	6078      	str	r0, [r7, #4]
 8000af8:	687b      	ldr	r3, [r7, #4]
 8000afa:	3b01      	subs	r3, #1
 8000afc:	4a0c      	ldr	r2, [pc, #48]	; (8000b30 <SysTick_Config+0x40>)
 8000afe:	4293      	cmp	r3, r2
 8000b00:	d901      	bls.n	8000b06 <SysTick_Config+0x16>
 8000b02:	2301      	movs	r3, #1
 8000b04:	e010      	b.n	8000b28 <SysTick_Config+0x38>
 8000b06:	4b0b      	ldr	r3, [pc, #44]	; (8000b34 <SysTick_Config+0x44>)
 8000b08:	687a      	ldr	r2, [r7, #4]
 8000b0a:	3a01      	subs	r2, #1
 8000b0c:	605a      	str	r2, [r3, #4]
 8000b0e:	2301      	movs	r3, #1
 8000b10:	425b      	negs	r3, r3
 8000b12:	2103      	movs	r1, #3
 8000b14:	0018      	movs	r0, r3
 8000b16:	f7ff ff7d 	bl	8000a14 <__NVIC_SetPriority>
 8000b1a:	4b06      	ldr	r3, [pc, #24]	; (8000b34 <SysTick_Config+0x44>)
 8000b1c:	2200      	movs	r2, #0
 8000b1e:	609a      	str	r2, [r3, #8]
 8000b20:	4b04      	ldr	r3, [pc, #16]	; (8000b34 <SysTick_Config+0x44>)
 8000b22:	2207      	movs	r2, #7
 8000b24:	601a      	str	r2, [r3, #0]
 8000b26:	2300      	movs	r3, #0
 8000b28:	0018      	movs	r0, r3
 8000b2a:	46bd      	mov	sp, r7
 8000b2c:	b002      	add	sp, #8
 8000b2e:	bd80      	pop	{r7, pc}
 8000b30:	00ffffff 	.word	0x00ffffff
 8000b34:	e000e010 	.word	0xe000e010

08000b38 <HAL_NVIC_SetPriority>:
 8000b38:	b580      	push	{r7, lr}
 8000b3a:	b084      	sub	sp, #16
 8000b3c:	af00      	add	r7, sp, #0
 8000b3e:	60b9      	str	r1, [r7, #8]
 8000b40:	607a      	str	r2, [r7, #4]
 8000b42:	210f      	movs	r1, #15
 8000b44:	187b      	adds	r3, r7, r1
 8000b46:	1c02      	adds	r2, r0, #0
 8000b48:	701a      	strb	r2, [r3, #0]
 8000b4a:	68ba      	ldr	r2, [r7, #8]
 8000b4c:	187b      	adds	r3, r7, r1
 8000b4e:	781b      	ldrb	r3, [r3, #0]
 8000b50:	b25b      	sxtb	r3, r3
 8000b52:	0011      	movs	r1, r2
 8000b54:	0018      	movs	r0, r3
 8000b56:	f7ff ff5d 	bl	8000a14 <__NVIC_SetPriority>
 8000b5a:	46c0      	nop			; (mov r8, r8)
 8000b5c:	46bd      	mov	sp, r7
 8000b5e:	b004      	add	sp, #16
 8000b60:	bd80      	pop	{r7, pc}

08000b62 <HAL_SYSTICK_Config>:
 8000b62:	b580      	push	{r7, lr}
 8000b64:	b082      	sub	sp, #8
 8000b66:	af00      	add	r7, sp, #0
 8000b68:	6078      	str	r0, [r7, #4]
 8000b6a:	687b      	ldr	r3, [r7, #4]
 8000b6c:	0018      	movs	r0, r3
 8000b6e:	f7ff ffbf 	bl	8000af0 <SysTick_Config>
 8000b72:	0003      	movs	r3, r0
 8000b74:	0018      	movs	r0, r3
 8000b76:	46bd      	mov	sp, r7
 8000b78:	b002      	add	sp, #8
 8000b7a:	bd80      	pop	{r7, pc}

08000b7c <HAL_GPIO_Init>:
 8000b7c:	b580      	push	{r7, lr}
 8000b7e:	b086      	sub	sp, #24
 8000b80:	af00      	add	r7, sp, #0
 8000b82:	6078      	str	r0, [r7, #4]
 8000b84:	6039      	str	r1, [r7, #0]
 8000b86:	2300      	movs	r3, #0
 8000b88:	617b      	str	r3, [r7, #20]
 8000b8a:	2300      	movs	r3, #0
 8000b8c:	60fb      	str	r3, [r7, #12]
 8000b8e:	2300      	movs	r3, #0
 8000b90:	613b      	str	r3, [r7, #16]
 8000b92:	e14f      	b.n	8000e34 <HAL_GPIO_Init+0x2b8>
 8000b94:	683b      	ldr	r3, [r7, #0]
 8000b96:	681b      	ldr	r3, [r3, #0]
 8000b98:	2101      	movs	r1, #1
 8000b9a:	697a      	ldr	r2, [r7, #20]
 8000b9c:	4091      	lsls	r1, r2
 8000b9e:	000a      	movs	r2, r1
 8000ba0:	4013      	ands	r3, r2
 8000ba2:	60fb      	str	r3, [r7, #12]
 8000ba4:	68fb      	ldr	r3, [r7, #12]
 8000ba6:	2b00      	cmp	r3, #0
 8000ba8:	d100      	bne.n	8000bac <HAL_GPIO_Init+0x30>
 8000baa:	e140      	b.n	8000e2e <HAL_GPIO_Init+0x2b2>
 8000bac:	683b      	ldr	r3, [r7, #0]
 8000bae:	685b      	ldr	r3, [r3, #4]
 8000bb0:	2b01      	cmp	r3, #1
 8000bb2:	d00b      	beq.n	8000bcc <HAL_GPIO_Init+0x50>
 8000bb4:	683b      	ldr	r3, [r7, #0]
 8000bb6:	685b      	ldr	r3, [r3, #4]
 8000bb8:	2b02      	cmp	r3, #2
 8000bba:	d007      	beq.n	8000bcc <HAL_GPIO_Init+0x50>
 8000bbc:	683b      	ldr	r3, [r7, #0]
 8000bbe:	685b      	ldr	r3, [r3, #4]
 8000bc0:	2b11      	cmp	r3, #17
 8000bc2:	d003      	beq.n	8000bcc <HAL_GPIO_Init+0x50>
 8000bc4:	683b      	ldr	r3, [r7, #0]
 8000bc6:	685b      	ldr	r3, [r3, #4]
 8000bc8:	2b12      	cmp	r3, #18
 8000bca:	d130      	bne.n	8000c2e <HAL_GPIO_Init+0xb2>
 8000bcc:	687b      	ldr	r3, [r7, #4]
 8000bce:	689b      	ldr	r3, [r3, #8]
 8000bd0:	613b      	str	r3, [r7, #16]
 8000bd2:	697b      	ldr	r3, [r7, #20]
 8000bd4:	005b      	lsls	r3, r3, #1
 8000bd6:	2203      	movs	r2, #3
 8000bd8:	409a      	lsls	r2, r3
 8000bda:	0013      	movs	r3, r2
 8000bdc:	43da      	mvns	r2, r3
 8000bde:	693b      	ldr	r3, [r7, #16]
 8000be0:	4013      	ands	r3, r2
 8000be2:	613b      	str	r3, [r7, #16]
 8000be4:	683b      	ldr	r3, [r7, #0]
 8000be6:	68da      	ldr	r2, [r3, #12]
 8000be8:	697b      	ldr	r3, [r7, #20]
 8000bea:	005b      	lsls	r3, r3, #1
 8000bec:	409a      	lsls	r2, r3
 8000bee:	0013      	movs	r3, r2
 8000bf0:	693a      	ldr	r2, [r7, #16]
 8000bf2:	4313      	orrs	r3, r2
 8000bf4:	613b      	str	r3, [r7, #16]
 8000bf6:	687b      	ldr	r3, [r7, #4]
 8000bf8:	693a      	ldr	r2, [r7, #16]
 8000bfa:	609a      	str	r2, [r3, #8]
 8000bfc:	687b      	ldr	r3, [r7, #4]
 8000bfe:	685b      	ldr	r3, [r3, #4]
 8000c00:	613b      	str	r3, [r7, #16]
 8000c02:	2201      	movs	r2, #1
 8000c04:	697b      	ldr	r3, [r7, #20]
 8000c06:	409a      	lsls	r2, r3
 8000c08:	0013      	movs	r3, r2
 8000c0a:	43da      	mvns	r2, r3
 8000c0c:	693b      	ldr	r3, [r7, #16]
 8000c0e:	4013      	ands	r3, r2
 8000c10:	613b      	str	r3, [r7, #16]
 8000c12:	683b      	ldr	r3, [r7, #0]
 8000c14:	685b      	ldr	r3, [r3, #4]
 8000c16:	091b      	lsrs	r3, r3, #4
 8000c18:	2201      	movs	r2, #1
 8000c1a:	401a      	ands	r2, r3
 8000c1c:	697b      	ldr	r3, [r7, #20]
 8000c1e:	409a      	lsls	r2, r3
 8000c20:	0013      	movs	r3, r2
 8000c22:	693a      	ldr	r2, [r7, #16]
 8000c24:	4313      	orrs	r3, r2
 8000c26:	613b      	str	r3, [r7, #16]
 8000c28:	687b      	ldr	r3, [r7, #4]
 8000c2a:	693a      	ldr	r2, [r7, #16]
 8000c2c:	605a      	str	r2, [r3, #4]
 8000c2e:	687b      	ldr	r3, [r7, #4]
 8000c30:	68db      	ldr	r3, [r3, #12]
 8000c32:	613b      	str	r3, [r7, #16]
 8000c34:	697b      	ldr	r3, [r7, #20]
 8000c36:	005b      	lsls	r3, r3, #1
 8000c38:	2203      	movs	r2, #3
 8000c3a:	409a      	lsls	r2, r3
 8000c3c:	0013      	movs	r3, r2
 8000c3e:	43da      	mvns	r2, r3
 8000c40:	693b      	ldr	r3, [r7, #16]
 8000c42:	4013      	ands	r3, r2
 8000c44:	613b      	str	r3, [r7, #16]
 8000c46:	683b      	ldr	r3, [r7, #0]
 8000c48:	689a      	ldr	r2, [r3, #8]
 8000c4a:	697b      	ldr	r3, [r7, #20]
 8000c4c:	005b      	lsls	r3, r3, #1
 8000c4e:	409a      	lsls	r2, r3
 8000c50:	0013      	movs	r3, r2
 8000c52:	693a      	ldr	r2, [r7, #16]
 8000c54:	4313      	orrs	r3, r2
 8000c56:	613b      	str	r3, [r7, #16]
 8000c58:	687b      	ldr	r3, [r7, #4]
 8000c5a:	693a      	ldr	r2, [r7, #16]
 8000c5c:	60da      	str	r2, [r3, #12]
 8000c5e:	683b      	ldr	r3, [r7, #0]
 8000c60:	685b      	ldr	r3, [r3, #4]
 8000c62:	2b02      	cmp	r3, #2
 8000c64:	d003      	beq.n	8000c6e <HAL_GPIO_Init+0xf2>
 8000c66:	683b      	ldr	r3, [r7, #0]
 8000c68:	685b      	ldr	r3, [r3, #4]
 8000c6a:	2b12      	cmp	r3, #18
 8000c6c:	d123      	bne.n	8000cb6 <HAL_GPIO_Init+0x13a>
 8000c6e:	697b      	ldr	r3, [r7, #20]
 8000c70:	08da      	lsrs	r2, r3, #3
 8000c72:	687b      	ldr	r3, [r7, #4]
 8000c74:	3208      	adds	r2, #8
 8000c76:	0092      	lsls	r2, r2, #2
 8000c78:	58d3      	ldr	r3, [r2, r3]
 8000c7a:	613b      	str	r3, [r7, #16]
 8000c7c:	697b      	ldr	r3, [r7, #20]
 8000c7e:	2207      	movs	r2, #7
 8000c80:	4013      	ands	r3, r2
 8000c82:	009b      	lsls	r3, r3, #2
 8000c84:	220f      	movs	r2, #15
 8000c86:	409a      	lsls	r2, r3
 8000c88:	0013      	movs	r3, r2
 8000c8a:	43da      	mvns	r2, r3
 8000c8c:	693b      	ldr	r3, [r7, #16]
 8000c8e:	4013      	ands	r3, r2
 8000c90:	613b      	str	r3, [r7, #16]
 8000c92:	683b      	ldr	r3, [r7, #0]
 8000c94:	691a      	ldr	r2, [r3, #16]
 8000c96:	697b      	ldr	r3, [r7, #20]
 8000c98:	2107      	movs	r1, #7
 8000c9a:	400b      	ands	r3, r1
 8000c9c:	009b      	lsls	r3, r3, #2
 8000c9e:	409a      	lsls	r2, r3
 8000ca0:	0013      	movs	r3, r2
 8000ca2:	693a      	ldr	r2, [r7, #16]
 8000ca4:	4313      	orrs	r3, r2
 8000ca6:	613b      	str	r3, [r7, #16]
 8000ca8:	697b      	ldr	r3, [r7, #20]
 8000caa:	08da      	lsrs	r2, r3, #3
 8000cac:	687b      	ldr	r3, [r7, #4]
 8000cae:	3208      	adds	r2, #8
 8000cb0:	0092      	lsls	r2, r2, #2
 8000cb2:	6939      	ldr	r1, [r7, #16]
 8000cb4:	50d1      	str	r1, [r2, r3]
 8000cb6:	687b      	ldr	r3, [r7, #4]
 8000cb8:	681b      	ldr	r3, [r3, #0]
 8000cba:	613b      	str	r3, [r7, #16]
 8000cbc:	697b      	ldr	r3, [r7, #20]
 8000cbe:	005b      	lsls	r3, r3, #1
 8000cc0:	2203      	movs	r2, #3
 8000cc2:	409a      	lsls	r2, r3
 8000cc4:	0013      	movs	r3, r2
 8000cc6:	43da      	mvns	r2, r3
 8000cc8:	693b      	ldr	r3, [r7, #16]
 8000cca:	4013      	ands	r3, r2
 8000ccc:	613b      	str	r3, [r7, #16]
 8000cce:	683b      	ldr	r3, [r7, #0]
 8000cd0:	685b      	ldr	r3, [r3, #4]
 8000cd2:	2203      	movs	r2, #3
 8000cd4:	401a      	ands	r2, r3
 8000cd6:	697b      	ldr	r3, [r7, #20]
 8000cd8:	005b      	lsls	r3, r3, #1
 8000cda:	409a      	lsls	r2, r3
 8000cdc:	0013      	movs	r3, r2
 8000cde:	693a      	ldr	r2, [r7, #16]
 8000ce0:	4313      	orrs	r3, r2
 8000ce2:	613b      	str	r3, [r7, #16]
 8000ce4:	687b      	ldr	r3, [r7, #4]
 8000ce6:	693a      	ldr	r2, [r7, #16]
 8000ce8:	601a      	str	r2, [r3, #0]
 8000cea:	683b      	ldr	r3, [r7, #0]
 8000cec:	685a      	ldr	r2, [r3, #4]
 8000cee:	2380      	movs	r3, #128	; 0x80
 8000cf0:	055b      	lsls	r3, r3, #21
 8000cf2:	4013      	ands	r3, r2
 8000cf4:	d100      	bne.n	8000cf8 <HAL_GPIO_Init+0x17c>
 8000cf6:	e09a      	b.n	8000e2e <HAL_GPIO_Init+0x2b2>
 8000cf8:	4b54      	ldr	r3, [pc, #336]	; (8000e4c <HAL_GPIO_Init+0x2d0>)
 8000cfa:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8000cfc:	4b53      	ldr	r3, [pc, #332]	; (8000e4c <HAL_GPIO_Init+0x2d0>)
 8000cfe:	2101      	movs	r1, #1
 8000d00:	430a      	orrs	r2, r1
 8000d02:	635a      	str	r2, [r3, #52]	; 0x34
 8000d04:	4a52      	ldr	r2, [pc, #328]	; (8000e50 <HAL_GPIO_Init+0x2d4>)
 8000d06:	697b      	ldr	r3, [r7, #20]
 8000d08:	089b      	lsrs	r3, r3, #2
 8000d0a:	3302      	adds	r3, #2
 8000d0c:	009b      	lsls	r3, r3, #2
 8000d0e:	589b      	ldr	r3, [r3, r2]
 8000d10:	613b      	str	r3, [r7, #16]
 8000d12:	697b      	ldr	r3, [r7, #20]
 8000d14:	2203      	movs	r2, #3
 8000d16:	4013      	ands	r3, r2
 8000d18:	009b      	lsls	r3, r3, #2
 8000d1a:	220f      	movs	r2, #15
 8000d1c:	409a      	lsls	r2, r3
 8000d1e:	0013      	movs	r3, r2
 8000d20:	43da      	mvns	r2, r3
 8000d22:	693b      	ldr	r3, [r7, #16]
 8000d24:	4013      	ands	r3, r2
 8000d26:	613b      	str	r3, [r7, #16]
 8000d28:	687a      	ldr	r2, [r7, #4]
 8000d2a:	23a0      	movs	r3, #160	; 0xa0
 8000d2c:	05db      	lsls	r3, r3, #23
 8000d2e:	429a      	cmp	r2, r3
 8000d30:	d019      	beq.n	8000d66 <HAL_GPIO_Init+0x1ea>
 8000d32:	687b      	ldr	r3, [r7, #4]
 8000d34:	4a47      	ldr	r2, [pc, #284]	; (8000e54 <HAL_GPIO_Init+0x2d8>)
 8000d36:	4293      	cmp	r3, r2
 8000d38:	d013      	beq.n	8000d62 <HAL_GPIO_Init+0x1e6>
 8000d3a:	687b      	ldr	r3, [r7, #4]
 8000d3c:	4a46      	ldr	r2, [pc, #280]	; (8000e58 <HAL_GPIO_Init+0x2dc>)
 8000d3e:	4293      	cmp	r3, r2
 8000d40:	d00d      	beq.n	8000d5e <HAL_GPIO_Init+0x1e2>
 8000d42:	687b      	ldr	r3, [r7, #4]
 8000d44:	4a45      	ldr	r2, [pc, #276]	; (8000e5c <HAL_GPIO_Init+0x2e0>)
 8000d46:	4293      	cmp	r3, r2
 8000d48:	d007      	beq.n	8000d5a <HAL_GPIO_Init+0x1de>
 8000d4a:	687b      	ldr	r3, [r7, #4]
 8000d4c:	4a44      	ldr	r2, [pc, #272]	; (8000e60 <HAL_GPIO_Init+0x2e4>)
 8000d4e:	4293      	cmp	r3, r2
 8000d50:	d101      	bne.n	8000d56 <HAL_GPIO_Init+0x1da>
 8000d52:	2305      	movs	r3, #5
 8000d54:	e008      	b.n	8000d68 <HAL_GPIO_Init+0x1ec>
 8000d56:	2306      	movs	r3, #6
 8000d58:	e006      	b.n	8000d68 <HAL_GPIO_Init+0x1ec>
 8000d5a:	2303      	movs	r3, #3
 8000d5c:	e004      	b.n	8000d68 <HAL_GPIO_Init+0x1ec>
 8000d5e:	2302      	movs	r3, #2
 8000d60:	e002      	b.n	8000d68 <HAL_GPIO_Init+0x1ec>
 8000d62:	2301      	movs	r3, #1
 8000d64:	e000      	b.n	8000d68 <HAL_GPIO_Init+0x1ec>
 8000d66:	2300      	movs	r3, #0
 8000d68:	697a      	ldr	r2, [r7, #20]
 8000d6a:	2103      	movs	r1, #3
 8000d6c:	400a      	ands	r2, r1
 8000d6e:	0092      	lsls	r2, r2, #2
 8000d70:	4093      	lsls	r3, r2
 8000d72:	693a      	ldr	r2, [r7, #16]
 8000d74:	4313      	orrs	r3, r2
 8000d76:	613b      	str	r3, [r7, #16]
 8000d78:	4935      	ldr	r1, [pc, #212]	; (8000e50 <HAL_GPIO_Init+0x2d4>)
 8000d7a:	697b      	ldr	r3, [r7, #20]
 8000d7c:	089b      	lsrs	r3, r3, #2
 8000d7e:	3302      	adds	r3, #2
 8000d80:	009b      	lsls	r3, r3, #2
 8000d82:	693a      	ldr	r2, [r7, #16]
 8000d84:	505a      	str	r2, [r3, r1]
 8000d86:	4b37      	ldr	r3, [pc, #220]	; (8000e64 <HAL_GPIO_Init+0x2e8>)
 8000d88:	681b      	ldr	r3, [r3, #0]
 8000d8a:	613b      	str	r3, [r7, #16]
 8000d8c:	68fb      	ldr	r3, [r7, #12]
 8000d8e:	43da      	mvns	r2, r3
 8000d90:	693b      	ldr	r3, [r7, #16]
 8000d92:	4013      	ands	r3, r2
 8000d94:	613b      	str	r3, [r7, #16]
 8000d96:	683b      	ldr	r3, [r7, #0]
 8000d98:	685a      	ldr	r2, [r3, #4]
 8000d9a:	2380      	movs	r3, #128	; 0x80
 8000d9c:	025b      	lsls	r3, r3, #9
 8000d9e:	4013      	ands	r3, r2
 8000da0:	d003      	beq.n	8000daa <HAL_GPIO_Init+0x22e>
 8000da2:	693a      	ldr	r2, [r7, #16]
 8000da4:	68fb      	ldr	r3, [r7, #12]
 8000da6:	4313      	orrs	r3, r2
 8000da8:	613b      	str	r3, [r7, #16]
 8000daa:	4b2e      	ldr	r3, [pc, #184]	; (8000e64 <HAL_GPIO_Init+0x2e8>)
 8000dac:	693a      	ldr	r2, [r7, #16]
 8000dae:	601a      	str	r2, [r3, #0]
 8000db0:	4b2c      	ldr	r3, [pc, #176]	; (8000e64 <HAL_GPIO_Init+0x2e8>)
 8000db2:	685b      	ldr	r3, [r3, #4]
 8000db4:	613b      	str	r3, [r7, #16]
 8000db6:	68fb      	ldr	r3, [r7, #12]
 8000db8:	43da      	mvns	r2, r3
 8000dba:	693b      	ldr	r3, [r7, #16]
 8000dbc:	4013      	ands	r3, r2
 8000dbe:	613b      	str	r3, [r7, #16]
 8000dc0:	683b      	ldr	r3, [r7, #0]
 8000dc2:	685a      	ldr	r2, [r3, #4]
 8000dc4:	2380      	movs	r3, #128	; 0x80
 8000dc6:	029b      	lsls	r3, r3, #10
 8000dc8:	4013      	ands	r3, r2
 8000dca:	d003      	beq.n	8000dd4 <HAL_GPIO_Init+0x258>
 8000dcc:	693a      	ldr	r2, [r7, #16]
 8000dce:	68fb      	ldr	r3, [r7, #12]
 8000dd0:	4313      	orrs	r3, r2
 8000dd2:	613b      	str	r3, [r7, #16]
 8000dd4:	4b23      	ldr	r3, [pc, #140]	; (8000e64 <HAL_GPIO_Init+0x2e8>)
 8000dd6:	693a      	ldr	r2, [r7, #16]
 8000dd8:	605a      	str	r2, [r3, #4]
 8000dda:	4b22      	ldr	r3, [pc, #136]	; (8000e64 <HAL_GPIO_Init+0x2e8>)
 8000ddc:	689b      	ldr	r3, [r3, #8]
 8000dde:	613b      	str	r3, [r7, #16]
 8000de0:	68fb      	ldr	r3, [r7, #12]
 8000de2:	43da      	mvns	r2, r3
 8000de4:	693b      	ldr	r3, [r7, #16]
 8000de6:	4013      	ands	r3, r2
 8000de8:	613b      	str	r3, [r7, #16]
 8000dea:	683b      	ldr	r3, [r7, #0]
 8000dec:	685a      	ldr	r2, [r3, #4]
 8000dee:	2380      	movs	r3, #128	; 0x80
 8000df0:	035b      	lsls	r3, r3, #13
 8000df2:	4013      	ands	r3, r2
 8000df4:	d003      	beq.n	8000dfe <HAL_GPIO_Init+0x282>
 8000df6:	693a      	ldr	r2, [r7, #16]
 8000df8:	68fb      	ldr	r3, [r7, #12]
 8000dfa:	4313      	orrs	r3, r2
 8000dfc:	613b      	str	r3, [r7, #16]
 8000dfe:	4b19      	ldr	r3, [pc, #100]	; (8000e64 <HAL_GPIO_Init+0x2e8>)
 8000e00:	693a      	ldr	r2, [r7, #16]
 8000e02:	609a      	str	r2, [r3, #8]
 8000e04:	4b17      	ldr	r3, [pc, #92]	; (8000e64 <HAL_GPIO_Init+0x2e8>)
 8000e06:	68db      	ldr	r3, [r3, #12]
 8000e08:	613b      	str	r3, [r7, #16]
 8000e0a:	68fb      	ldr	r3, [r7, #12]
 8000e0c:	43da      	mvns	r2, r3
 8000e0e:	693b      	ldr	r3, [r7, #16]
 8000e10:	4013      	ands	r3, r2
 8000e12:	613b      	str	r3, [r7, #16]
 8000e14:	683b      	ldr	r3, [r7, #0]
 8000e16:	685a      	ldr	r2, [r3, #4]
 8000e18:	2380      	movs	r3, #128	; 0x80
 8000e1a:	039b      	lsls	r3, r3, #14
 8000e1c:	4013      	ands	r3, r2
 8000e1e:	d003      	beq.n	8000e28 <HAL_GPIO_Init+0x2ac>
 8000e20:	693a      	ldr	r2, [r7, #16]
 8000e22:	68fb      	ldr	r3, [r7, #12]
 8000e24:	4313      	orrs	r3, r2
 8000e26:	613b      	str	r3, [r7, #16]
 8000e28:	4b0e      	ldr	r3, [pc, #56]	; (8000e64 <HAL_GPIO_Init+0x2e8>)
 8000e2a:	693a      	ldr	r2, [r7, #16]
 8000e2c:	60da      	str	r2, [r3, #12]
 8000e2e:	697b      	ldr	r3, [r7, #20]
 8000e30:	3301      	adds	r3, #1
 8000e32:	617b      	str	r3, [r7, #20]
 8000e34:	683b      	ldr	r3, [r7, #0]
 8000e36:	681a      	ldr	r2, [r3, #0]
 8000e38:	697b      	ldr	r3, [r7, #20]
 8000e3a:	40da      	lsrs	r2, r3
 8000e3c:	1e13      	subs	r3, r2, #0
 8000e3e:	d000      	beq.n	8000e42 <HAL_GPIO_Init+0x2c6>
 8000e40:	e6a8      	b.n	8000b94 <HAL_GPIO_Init+0x18>
 8000e42:	46c0      	nop			; (mov r8, r8)
 8000e44:	46bd      	mov	sp, r7
 8000e46:	b006      	add	sp, #24
 8000e48:	bd80      	pop	{r7, pc}
 8000e4a:	46c0      	nop			; (mov r8, r8)
 8000e4c:	40021000 	.word	0x40021000
 8000e50:	40010000 	.word	0x40010000
 8000e54:	50000400 	.word	0x50000400
 8000e58:	50000800 	.word	0x50000800
 8000e5c:	50000c00 	.word	0x50000c00
 8000e60:	50001c00 	.word	0x50001c00
 8000e64:	40010400 	.word	0x40010400

08000e68 <HAL_RCC_OscConfig>:
 8000e68:	b5b0      	push	{r4, r5, r7, lr}
 8000e6a:	b08a      	sub	sp, #40	; 0x28
 8000e6c:	af00      	add	r7, sp, #0
 8000e6e:	6078      	str	r0, [r7, #4]
 8000e70:	687b      	ldr	r3, [r7, #4]
 8000e72:	2b00      	cmp	r3, #0
 8000e74:	d102      	bne.n	8000e7c <HAL_RCC_OscConfig+0x14>
 8000e76:	2301      	movs	r3, #1
 8000e78:	f000 fbb4 	bl	80015e4 <HAL_RCC_OscConfig+0x77c>
 8000e7c:	4bc3      	ldr	r3, [pc, #780]	; (800118c <HAL_RCC_OscConfig+0x324>)
 8000e7e:	68db      	ldr	r3, [r3, #12]
 8000e80:	220c      	movs	r2, #12
 8000e82:	4013      	ands	r3, r2
 8000e84:	623b      	str	r3, [r7, #32]
 8000e86:	4bc1      	ldr	r3, [pc, #772]	; (800118c <HAL_RCC_OscConfig+0x324>)
 8000e88:	68da      	ldr	r2, [r3, #12]
 8000e8a:	2380      	movs	r3, #128	; 0x80
 8000e8c:	025b      	lsls	r3, r3, #9
 8000e8e:	4013      	ands	r3, r2
 8000e90:	61fb      	str	r3, [r7, #28]
 8000e92:	687b      	ldr	r3, [r7, #4]
 8000e94:	681b      	ldr	r3, [r3, #0]
 8000e96:	2201      	movs	r2, #1
 8000e98:	4013      	ands	r3, r2
 8000e9a:	d100      	bne.n	8000e9e <HAL_RCC_OscConfig+0x36>
 8000e9c:	e07e      	b.n	8000f9c <HAL_RCC_OscConfig+0x134>
 8000e9e:	6a3b      	ldr	r3, [r7, #32]
 8000ea0:	2b08      	cmp	r3, #8
 8000ea2:	d007      	beq.n	8000eb4 <HAL_RCC_OscConfig+0x4c>
 8000ea4:	6a3b      	ldr	r3, [r7, #32]
 8000ea6:	2b0c      	cmp	r3, #12
 8000ea8:	d112      	bne.n	8000ed0 <HAL_RCC_OscConfig+0x68>
 8000eaa:	69fa      	ldr	r2, [r7, #28]
 8000eac:	2380      	movs	r3, #128	; 0x80
 8000eae:	025b      	lsls	r3, r3, #9
 8000eb0:	429a      	cmp	r2, r3
 8000eb2:	d10d      	bne.n	8000ed0 <HAL_RCC_OscConfig+0x68>
 8000eb4:	4bb5      	ldr	r3, [pc, #724]	; (800118c <HAL_RCC_OscConfig+0x324>)
 8000eb6:	681a      	ldr	r2, [r3, #0]
 8000eb8:	2380      	movs	r3, #128	; 0x80
 8000eba:	029b      	lsls	r3, r3, #10
 8000ebc:	4013      	ands	r3, r2
 8000ebe:	d100      	bne.n	8000ec2 <HAL_RCC_OscConfig+0x5a>
 8000ec0:	e06b      	b.n	8000f9a <HAL_RCC_OscConfig+0x132>
 8000ec2:	687b      	ldr	r3, [r7, #4]
 8000ec4:	685b      	ldr	r3, [r3, #4]
 8000ec6:	2b00      	cmp	r3, #0
 8000ec8:	d167      	bne.n	8000f9a <HAL_RCC_OscConfig+0x132>
 8000eca:	2301      	movs	r3, #1
 8000ecc:	f000 fb8a 	bl	80015e4 <HAL_RCC_OscConfig+0x77c>
 8000ed0:	687b      	ldr	r3, [r7, #4]
 8000ed2:	685a      	ldr	r2, [r3, #4]
 8000ed4:	2380      	movs	r3, #128	; 0x80
 8000ed6:	025b      	lsls	r3, r3, #9
 8000ed8:	429a      	cmp	r2, r3
 8000eda:	d107      	bne.n	8000eec <HAL_RCC_OscConfig+0x84>
 8000edc:	4bab      	ldr	r3, [pc, #684]	; (800118c <HAL_RCC_OscConfig+0x324>)
 8000ede:	681a      	ldr	r2, [r3, #0]
 8000ee0:	4baa      	ldr	r3, [pc, #680]	; (800118c <HAL_RCC_OscConfig+0x324>)
 8000ee2:	2180      	movs	r1, #128	; 0x80
 8000ee4:	0249      	lsls	r1, r1, #9
 8000ee6:	430a      	orrs	r2, r1
 8000ee8:	601a      	str	r2, [r3, #0]
 8000eea:	e027      	b.n	8000f3c <HAL_RCC_OscConfig+0xd4>
 8000eec:	687b      	ldr	r3, [r7, #4]
 8000eee:	685a      	ldr	r2, [r3, #4]
 8000ef0:	23a0      	movs	r3, #160	; 0xa0
 8000ef2:	02db      	lsls	r3, r3, #11
 8000ef4:	429a      	cmp	r2, r3
 8000ef6:	d10e      	bne.n	8000f16 <HAL_RCC_OscConfig+0xae>
 8000ef8:	4ba4      	ldr	r3, [pc, #656]	; (800118c <HAL_RCC_OscConfig+0x324>)
 8000efa:	681a      	ldr	r2, [r3, #0]
 8000efc:	4ba3      	ldr	r3, [pc, #652]	; (800118c <HAL_RCC_OscConfig+0x324>)
 8000efe:	2180      	movs	r1, #128	; 0x80
 8000f00:	02c9      	lsls	r1, r1, #11
 8000f02:	430a      	orrs	r2, r1
 8000f04:	601a      	str	r2, [r3, #0]
 8000f06:	4ba1      	ldr	r3, [pc, #644]	; (800118c <HAL_RCC_OscConfig+0x324>)
 8000f08:	681a      	ldr	r2, [r3, #0]
 8000f0a:	4ba0      	ldr	r3, [pc, #640]	; (800118c <HAL_RCC_OscConfig+0x324>)
 8000f0c:	2180      	movs	r1, #128	; 0x80
 8000f0e:	0249      	lsls	r1, r1, #9
 8000f10:	430a      	orrs	r2, r1
 8000f12:	601a      	str	r2, [r3, #0]
 8000f14:	e012      	b.n	8000f3c <HAL_RCC_OscConfig+0xd4>
 8000f16:	4b9d      	ldr	r3, [pc, #628]	; (800118c <HAL_RCC_OscConfig+0x324>)
 8000f18:	681a      	ldr	r2, [r3, #0]
 8000f1a:	4b9c      	ldr	r3, [pc, #624]	; (800118c <HAL_RCC_OscConfig+0x324>)
 8000f1c:	499c      	ldr	r1, [pc, #624]	; (8001190 <HAL_RCC_OscConfig+0x328>)
 8000f1e:	400a      	ands	r2, r1
 8000f20:	601a      	str	r2, [r3, #0]
 8000f22:	4b9a      	ldr	r3, [pc, #616]	; (800118c <HAL_RCC_OscConfig+0x324>)
 8000f24:	681a      	ldr	r2, [r3, #0]
 8000f26:	2380      	movs	r3, #128	; 0x80
 8000f28:	025b      	lsls	r3, r3, #9
 8000f2a:	4013      	ands	r3, r2
 8000f2c:	60fb      	str	r3, [r7, #12]
 8000f2e:	68fb      	ldr	r3, [r7, #12]
 8000f30:	4b96      	ldr	r3, [pc, #600]	; (800118c <HAL_RCC_OscConfig+0x324>)
 8000f32:	681a      	ldr	r2, [r3, #0]
 8000f34:	4b95      	ldr	r3, [pc, #596]	; (800118c <HAL_RCC_OscConfig+0x324>)
 8000f36:	4997      	ldr	r1, [pc, #604]	; (8001194 <HAL_RCC_OscConfig+0x32c>)
 8000f38:	400a      	ands	r2, r1
 8000f3a:	601a      	str	r2, [r3, #0]
 8000f3c:	687b      	ldr	r3, [r7, #4]
 8000f3e:	685b      	ldr	r3, [r3, #4]
 8000f40:	2b00      	cmp	r3, #0
 8000f42:	d015      	beq.n	8000f70 <HAL_RCC_OscConfig+0x108>
 8000f44:	f7ff fd5c 	bl	8000a00 <HAL_GetTick>
 8000f48:	0003      	movs	r3, r0
 8000f4a:	61bb      	str	r3, [r7, #24]
 8000f4c:	e009      	b.n	8000f62 <HAL_RCC_OscConfig+0xfa>
 8000f4e:	f7ff fd57 	bl	8000a00 <HAL_GetTick>
 8000f52:	0002      	movs	r2, r0
 8000f54:	69bb      	ldr	r3, [r7, #24]
 8000f56:	1ad3      	subs	r3, r2, r3
 8000f58:	2b64      	cmp	r3, #100	; 0x64
 8000f5a:	d902      	bls.n	8000f62 <HAL_RCC_OscConfig+0xfa>
 8000f5c:	2303      	movs	r3, #3
 8000f5e:	f000 fb41 	bl	80015e4 <HAL_RCC_OscConfig+0x77c>
 8000f62:	4b8a      	ldr	r3, [pc, #552]	; (800118c <HAL_RCC_OscConfig+0x324>)
 8000f64:	681a      	ldr	r2, [r3, #0]
 8000f66:	2380      	movs	r3, #128	; 0x80
 8000f68:	029b      	lsls	r3, r3, #10
 8000f6a:	4013      	ands	r3, r2
 8000f6c:	d0ef      	beq.n	8000f4e <HAL_RCC_OscConfig+0xe6>
 8000f6e:	e015      	b.n	8000f9c <HAL_RCC_OscConfig+0x134>
 8000f70:	f7ff fd46 	bl	8000a00 <HAL_GetTick>
 8000f74:	0003      	movs	r3, r0
 8000f76:	61bb      	str	r3, [r7, #24]
 8000f78:	e008      	b.n	8000f8c <HAL_RCC_OscConfig+0x124>
 8000f7a:	f7ff fd41 	bl	8000a00 <HAL_GetTick>
 8000f7e:	0002      	movs	r2, r0
 8000f80:	69bb      	ldr	r3, [r7, #24]
 8000f82:	1ad3      	subs	r3, r2, r3
 8000f84:	2b64      	cmp	r3, #100	; 0x64
 8000f86:	d901      	bls.n	8000f8c <HAL_RCC_OscConfig+0x124>
 8000f88:	2303      	movs	r3, #3
 8000f8a:	e32b      	b.n	80015e4 <HAL_RCC_OscConfig+0x77c>
 8000f8c:	4b7f      	ldr	r3, [pc, #508]	; (800118c <HAL_RCC_OscConfig+0x324>)
 8000f8e:	681a      	ldr	r2, [r3, #0]
 8000f90:	2380      	movs	r3, #128	; 0x80
 8000f92:	029b      	lsls	r3, r3, #10
 8000f94:	4013      	ands	r3, r2
 8000f96:	d1f0      	bne.n	8000f7a <HAL_RCC_OscConfig+0x112>
 8000f98:	e000      	b.n	8000f9c <HAL_RCC_OscConfig+0x134>
 8000f9a:	46c0      	nop			; (mov r8, r8)
 8000f9c:	687b      	ldr	r3, [r7, #4]
 8000f9e:	681b      	ldr	r3, [r3, #0]
 8000fa0:	2202      	movs	r2, #2
 8000fa2:	4013      	ands	r3, r2
 8000fa4:	d100      	bne.n	8000fa8 <HAL_RCC_OscConfig+0x140>
 8000fa6:	e08c      	b.n	80010c2 <HAL_RCC_OscConfig+0x25a>
 8000fa8:	687b      	ldr	r3, [r7, #4]
 8000faa:	68db      	ldr	r3, [r3, #12]
 8000fac:	617b      	str	r3, [r7, #20]
 8000fae:	6a3b      	ldr	r3, [r7, #32]
 8000fb0:	2b04      	cmp	r3, #4
 8000fb2:	d005      	beq.n	8000fc0 <HAL_RCC_OscConfig+0x158>
 8000fb4:	6a3b      	ldr	r3, [r7, #32]
 8000fb6:	2b0c      	cmp	r3, #12
 8000fb8:	d13f      	bne.n	800103a <HAL_RCC_OscConfig+0x1d2>
 8000fba:	69fb      	ldr	r3, [r7, #28]
 8000fbc:	2b00      	cmp	r3, #0
 8000fbe:	d13c      	bne.n	800103a <HAL_RCC_OscConfig+0x1d2>
 8000fc0:	4b72      	ldr	r3, [pc, #456]	; (800118c <HAL_RCC_OscConfig+0x324>)
 8000fc2:	681b      	ldr	r3, [r3, #0]
 8000fc4:	2204      	movs	r2, #4
 8000fc6:	4013      	ands	r3, r2
 8000fc8:	d004      	beq.n	8000fd4 <HAL_RCC_OscConfig+0x16c>
 8000fca:	697b      	ldr	r3, [r7, #20]
 8000fcc:	2b00      	cmp	r3, #0
 8000fce:	d101      	bne.n	8000fd4 <HAL_RCC_OscConfig+0x16c>
 8000fd0:	2301      	movs	r3, #1
 8000fd2:	e307      	b.n	80015e4 <HAL_RCC_OscConfig+0x77c>
 8000fd4:	4b6d      	ldr	r3, [pc, #436]	; (800118c <HAL_RCC_OscConfig+0x324>)
 8000fd6:	685b      	ldr	r3, [r3, #4]
 8000fd8:	4a6f      	ldr	r2, [pc, #444]	; (8001198 <HAL_RCC_OscConfig+0x330>)
 8000fda:	4013      	ands	r3, r2
 8000fdc:	0019      	movs	r1, r3
 8000fde:	687b      	ldr	r3, [r7, #4]
 8000fe0:	691b      	ldr	r3, [r3, #16]
 8000fe2:	021a      	lsls	r2, r3, #8
 8000fe4:	4b69      	ldr	r3, [pc, #420]	; (800118c <HAL_RCC_OscConfig+0x324>)
 8000fe6:	430a      	orrs	r2, r1
 8000fe8:	605a      	str	r2, [r3, #4]
 8000fea:	4b68      	ldr	r3, [pc, #416]	; (800118c <HAL_RCC_OscConfig+0x324>)
 8000fec:	681b      	ldr	r3, [r3, #0]
 8000fee:	2209      	movs	r2, #9
 8000ff0:	4393      	bics	r3, r2
 8000ff2:	0019      	movs	r1, r3
 8000ff4:	4b65      	ldr	r3, [pc, #404]	; (800118c <HAL_RCC_OscConfig+0x324>)
 8000ff6:	697a      	ldr	r2, [r7, #20]
 8000ff8:	430a      	orrs	r2, r1
 8000ffa:	601a      	str	r2, [r3, #0]
 8000ffc:	f000 fc44 	bl	8001888 <HAL_RCC_GetSysClockFreq>
 8001000:	0001      	movs	r1, r0
 8001002:	4b62      	ldr	r3, [pc, #392]	; (800118c <HAL_RCC_OscConfig+0x324>)
 8001004:	68db      	ldr	r3, [r3, #12]
 8001006:	091b      	lsrs	r3, r3, #4
 8001008:	220f      	movs	r2, #15
 800100a:	4013      	ands	r3, r2
 800100c:	4a63      	ldr	r2, [pc, #396]	; (800119c <HAL_RCC_OscConfig+0x334>)
 800100e:	5cd3      	ldrb	r3, [r2, r3]
 8001010:	000a      	movs	r2, r1
 8001012:	40da      	lsrs	r2, r3
 8001014:	4b62      	ldr	r3, [pc, #392]	; (80011a0 <HAL_RCC_OscConfig+0x338>)
 8001016:	601a      	str	r2, [r3, #0]
 8001018:	4b62      	ldr	r3, [pc, #392]	; (80011a4 <HAL_RCC_OscConfig+0x33c>)
 800101a:	681b      	ldr	r3, [r3, #0]
 800101c:	2513      	movs	r5, #19
 800101e:	197c      	adds	r4, r7, r5
 8001020:	0018      	movs	r0, r3
 8001022:	f7ff fca7 	bl	8000974 <HAL_InitTick>
 8001026:	0003      	movs	r3, r0
 8001028:	7023      	strb	r3, [r4, #0]
 800102a:	197b      	adds	r3, r7, r5
 800102c:	781b      	ldrb	r3, [r3, #0]
 800102e:	2b00      	cmp	r3, #0
 8001030:	d047      	beq.n	80010c2 <HAL_RCC_OscConfig+0x25a>
 8001032:	2313      	movs	r3, #19
 8001034:	18fb      	adds	r3, r7, r3
 8001036:	781b      	ldrb	r3, [r3, #0]
 8001038:	e2d4      	b.n	80015e4 <HAL_RCC_OscConfig+0x77c>
 800103a:	697b      	ldr	r3, [r7, #20]
 800103c:	2b00      	cmp	r3, #0
 800103e:	d027      	beq.n	8001090 <HAL_RCC_OscConfig+0x228>
 8001040:	4b52      	ldr	r3, [pc, #328]	; (800118c <HAL_RCC_OscConfig+0x324>)
 8001042:	681b      	ldr	r3, [r3, #0]
 8001044:	2209      	movs	r2, #9
 8001046:	4393      	bics	r3, r2
 8001048:	0019      	movs	r1, r3
 800104a:	4b50      	ldr	r3, [pc, #320]	; (800118c <HAL_RCC_OscConfig+0x324>)
 800104c:	697a      	ldr	r2, [r7, #20]
 800104e:	430a      	orrs	r2, r1
 8001050:	601a      	str	r2, [r3, #0]
 8001052:	f7ff fcd5 	bl	8000a00 <HAL_GetTick>
 8001056:	0003      	movs	r3, r0
 8001058:	61bb      	str	r3, [r7, #24]
 800105a:	e008      	b.n	800106e <HAL_RCC_OscConfig+0x206>
 800105c:	f7ff fcd0 	bl	8000a00 <HAL_GetTick>
 8001060:	0002      	movs	r2, r0
 8001062:	69bb      	ldr	r3, [r7, #24]
 8001064:	1ad3      	subs	r3, r2, r3
 8001066:	2b02      	cmp	r3, #2
 8001068:	d901      	bls.n	800106e <HAL_RCC_OscConfig+0x206>
 800106a:	2303      	movs	r3, #3
 800106c:	e2ba      	b.n	80015e4 <HAL_RCC_OscConfig+0x77c>
 800106e:	4b47      	ldr	r3, [pc, #284]	; (800118c <HAL_RCC_OscConfig+0x324>)
 8001070:	681b      	ldr	r3, [r3, #0]
 8001072:	2204      	movs	r2, #4
 8001074:	4013      	ands	r3, r2
 8001076:	d0f1      	beq.n	800105c <HAL_RCC_OscConfig+0x1f4>
 8001078:	4b44      	ldr	r3, [pc, #272]	; (800118c <HAL_RCC_OscConfig+0x324>)
 800107a:	685b      	ldr	r3, [r3, #4]
 800107c:	4a46      	ldr	r2, [pc, #280]	; (8001198 <HAL_RCC_OscConfig+0x330>)
 800107e:	4013      	ands	r3, r2
 8001080:	0019      	movs	r1, r3
 8001082:	687b      	ldr	r3, [r7, #4]
 8001084:	691b      	ldr	r3, [r3, #16]
 8001086:	021a      	lsls	r2, r3, #8
 8001088:	4b40      	ldr	r3, [pc, #256]	; (800118c <HAL_RCC_OscConfig+0x324>)
 800108a:	430a      	orrs	r2, r1
 800108c:	605a      	str	r2, [r3, #4]
 800108e:	e018      	b.n	80010c2 <HAL_RCC_OscConfig+0x25a>
 8001090:	4b3e      	ldr	r3, [pc, #248]	; (800118c <HAL_RCC_OscConfig+0x324>)
 8001092:	681a      	ldr	r2, [r3, #0]
 8001094:	4b3d      	ldr	r3, [pc, #244]	; (800118c <HAL_RCC_OscConfig+0x324>)
 8001096:	2101      	movs	r1, #1
 8001098:	438a      	bics	r2, r1
 800109a:	601a      	str	r2, [r3, #0]
 800109c:	f7ff fcb0 	bl	8000a00 <HAL_GetTick>
 80010a0:	0003      	movs	r3, r0
 80010a2:	61bb      	str	r3, [r7, #24]
 80010a4:	e008      	b.n	80010b8 <HAL_RCC_OscConfig+0x250>
 80010a6:	f7ff fcab 	bl	8000a00 <HAL_GetTick>
 80010aa:	0002      	movs	r2, r0
 80010ac:	69bb      	ldr	r3, [r7, #24]
 80010ae:	1ad3      	subs	r3, r2, r3
 80010b0:	2b02      	cmp	r3, #2
 80010b2:	d901      	bls.n	80010b8 <HAL_RCC_OscConfig+0x250>
 80010b4:	2303      	movs	r3, #3
 80010b6:	e295      	b.n	80015e4 <HAL_RCC_OscConfig+0x77c>
 80010b8:	4b34      	ldr	r3, [pc, #208]	; (800118c <HAL_RCC_OscConfig+0x324>)
 80010ba:	681b      	ldr	r3, [r3, #0]
 80010bc:	2204      	movs	r2, #4
 80010be:	4013      	ands	r3, r2
 80010c0:	d1f1      	bne.n	80010a6 <HAL_RCC_OscConfig+0x23e>
 80010c2:	687b      	ldr	r3, [r7, #4]
 80010c4:	681b      	ldr	r3, [r3, #0]
 80010c6:	2210      	movs	r2, #16
 80010c8:	4013      	ands	r3, r2
 80010ca:	d100      	bne.n	80010ce <HAL_RCC_OscConfig+0x266>
 80010cc:	e0a3      	b.n	8001216 <HAL_RCC_OscConfig+0x3ae>
 80010ce:	6a3b      	ldr	r3, [r7, #32]
 80010d0:	2b00      	cmp	r3, #0
 80010d2:	d141      	bne.n	8001158 <HAL_RCC_OscConfig+0x2f0>
 80010d4:	4b2d      	ldr	r3, [pc, #180]	; (800118c <HAL_RCC_OscConfig+0x324>)
 80010d6:	681a      	ldr	r2, [r3, #0]
 80010d8:	2380      	movs	r3, #128	; 0x80
 80010da:	009b      	lsls	r3, r3, #2
 80010dc:	4013      	ands	r3, r2
 80010de:	d005      	beq.n	80010ec <HAL_RCC_OscConfig+0x284>
 80010e0:	687b      	ldr	r3, [r7, #4]
 80010e2:	69db      	ldr	r3, [r3, #28]
 80010e4:	2b00      	cmp	r3, #0
 80010e6:	d101      	bne.n	80010ec <HAL_RCC_OscConfig+0x284>
 80010e8:	2301      	movs	r3, #1
 80010ea:	e27b      	b.n	80015e4 <HAL_RCC_OscConfig+0x77c>
 80010ec:	4b27      	ldr	r3, [pc, #156]	; (800118c <HAL_RCC_OscConfig+0x324>)
 80010ee:	685b      	ldr	r3, [r3, #4]
 80010f0:	4a2d      	ldr	r2, [pc, #180]	; (80011a8 <HAL_RCC_OscConfig+0x340>)
 80010f2:	4013      	ands	r3, r2
 80010f4:	0019      	movs	r1, r3
 80010f6:	687b      	ldr	r3, [r7, #4]
 80010f8:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80010fa:	4b24      	ldr	r3, [pc, #144]	; (800118c <HAL_RCC_OscConfig+0x324>)
 80010fc:	430a      	orrs	r2, r1
 80010fe:	605a      	str	r2, [r3, #4]
 8001100:	4b22      	ldr	r3, [pc, #136]	; (800118c <HAL_RCC_OscConfig+0x324>)
 8001102:	685b      	ldr	r3, [r3, #4]
 8001104:	021b      	lsls	r3, r3, #8
 8001106:	0a19      	lsrs	r1, r3, #8
 8001108:	687b      	ldr	r3, [r7, #4]
 800110a:	6a1b      	ldr	r3, [r3, #32]
 800110c:	061a      	lsls	r2, r3, #24
 800110e:	4b1f      	ldr	r3, [pc, #124]	; (800118c <HAL_RCC_OscConfig+0x324>)
 8001110:	430a      	orrs	r2, r1
 8001112:	605a      	str	r2, [r3, #4]
 8001114:	687b      	ldr	r3, [r7, #4]
 8001116:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001118:	0b5b      	lsrs	r3, r3, #13
 800111a:	3301      	adds	r3, #1
 800111c:	2280      	movs	r2, #128	; 0x80
 800111e:	0212      	lsls	r2, r2, #8
 8001120:	409a      	lsls	r2, r3
 8001122:	4b1a      	ldr	r3, [pc, #104]	; (800118c <HAL_RCC_OscConfig+0x324>)
 8001124:	68db      	ldr	r3, [r3, #12]
 8001126:	091b      	lsrs	r3, r3, #4
 8001128:	210f      	movs	r1, #15
 800112a:	400b      	ands	r3, r1
 800112c:	491b      	ldr	r1, [pc, #108]	; (800119c <HAL_RCC_OscConfig+0x334>)
 800112e:	5ccb      	ldrb	r3, [r1, r3]
 8001130:	40da      	lsrs	r2, r3
 8001132:	4b1b      	ldr	r3, [pc, #108]	; (80011a0 <HAL_RCC_OscConfig+0x338>)
 8001134:	601a      	str	r2, [r3, #0]
 8001136:	4b1b      	ldr	r3, [pc, #108]	; (80011a4 <HAL_RCC_OscConfig+0x33c>)
 8001138:	681b      	ldr	r3, [r3, #0]
 800113a:	2513      	movs	r5, #19
 800113c:	197c      	adds	r4, r7, r5
 800113e:	0018      	movs	r0, r3
 8001140:	f7ff fc18 	bl	8000974 <HAL_InitTick>
 8001144:	0003      	movs	r3, r0
 8001146:	7023      	strb	r3, [r4, #0]
 8001148:	197b      	adds	r3, r7, r5
 800114a:	781b      	ldrb	r3, [r3, #0]
 800114c:	2b00      	cmp	r3, #0
 800114e:	d062      	beq.n	8001216 <HAL_RCC_OscConfig+0x3ae>
 8001150:	2313      	movs	r3, #19
 8001152:	18fb      	adds	r3, r7, r3
 8001154:	781b      	ldrb	r3, [r3, #0]
 8001156:	e245      	b.n	80015e4 <HAL_RCC_OscConfig+0x77c>
 8001158:	687b      	ldr	r3, [r7, #4]
 800115a:	69db      	ldr	r3, [r3, #28]
 800115c:	2b00      	cmp	r3, #0
 800115e:	d040      	beq.n	80011e2 <HAL_RCC_OscConfig+0x37a>
 8001160:	4b0a      	ldr	r3, [pc, #40]	; (800118c <HAL_RCC_OscConfig+0x324>)
 8001162:	681a      	ldr	r2, [r3, #0]
 8001164:	4b09      	ldr	r3, [pc, #36]	; (800118c <HAL_RCC_OscConfig+0x324>)
 8001166:	2180      	movs	r1, #128	; 0x80
 8001168:	0049      	lsls	r1, r1, #1
 800116a:	430a      	orrs	r2, r1
 800116c:	601a      	str	r2, [r3, #0]
 800116e:	f7ff fc47 	bl	8000a00 <HAL_GetTick>
 8001172:	0003      	movs	r3, r0
 8001174:	61bb      	str	r3, [r7, #24]
 8001176:	e019      	b.n	80011ac <HAL_RCC_OscConfig+0x344>
 8001178:	f7ff fc42 	bl	8000a00 <HAL_GetTick>
 800117c:	0002      	movs	r2, r0
 800117e:	69bb      	ldr	r3, [r7, #24]
 8001180:	1ad3      	subs	r3, r2, r3
 8001182:	2b02      	cmp	r3, #2
 8001184:	d912      	bls.n	80011ac <HAL_RCC_OscConfig+0x344>
 8001186:	2303      	movs	r3, #3
 8001188:	e22c      	b.n	80015e4 <HAL_RCC_OscConfig+0x77c>
 800118a:	46c0      	nop			; (mov r8, r8)
 800118c:	40021000 	.word	0x40021000
 8001190:	fffeffff 	.word	0xfffeffff
 8001194:	fffbffff 	.word	0xfffbffff
 8001198:	ffffe0ff 	.word	0xffffe0ff
 800119c:	08002280 	.word	0x08002280
 80011a0:	20000000 	.word	0x20000000
 80011a4:	20000004 	.word	0x20000004
 80011a8:	ffff1fff 	.word	0xffff1fff
 80011ac:	4bc6      	ldr	r3, [pc, #792]	; (80014c8 <HAL_RCC_OscConfig+0x660>)
 80011ae:	681a      	ldr	r2, [r3, #0]
 80011b0:	2380      	movs	r3, #128	; 0x80
 80011b2:	009b      	lsls	r3, r3, #2
 80011b4:	4013      	ands	r3, r2
 80011b6:	d0df      	beq.n	8001178 <HAL_RCC_OscConfig+0x310>
 80011b8:	4bc3      	ldr	r3, [pc, #780]	; (80014c8 <HAL_RCC_OscConfig+0x660>)
 80011ba:	685b      	ldr	r3, [r3, #4]
 80011bc:	4ac3      	ldr	r2, [pc, #780]	; (80014cc <HAL_RCC_OscConfig+0x664>)
 80011be:	4013      	ands	r3, r2
 80011c0:	0019      	movs	r1, r3
 80011c2:	687b      	ldr	r3, [r7, #4]
 80011c4:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80011c6:	4bc0      	ldr	r3, [pc, #768]	; (80014c8 <HAL_RCC_OscConfig+0x660>)
 80011c8:	430a      	orrs	r2, r1
 80011ca:	605a      	str	r2, [r3, #4]
 80011cc:	4bbe      	ldr	r3, [pc, #760]	; (80014c8 <HAL_RCC_OscConfig+0x660>)
 80011ce:	685b      	ldr	r3, [r3, #4]
 80011d0:	021b      	lsls	r3, r3, #8
 80011d2:	0a19      	lsrs	r1, r3, #8
 80011d4:	687b      	ldr	r3, [r7, #4]
 80011d6:	6a1b      	ldr	r3, [r3, #32]
 80011d8:	061a      	lsls	r2, r3, #24
 80011da:	4bbb      	ldr	r3, [pc, #748]	; (80014c8 <HAL_RCC_OscConfig+0x660>)
 80011dc:	430a      	orrs	r2, r1
 80011de:	605a      	str	r2, [r3, #4]
 80011e0:	e019      	b.n	8001216 <HAL_RCC_OscConfig+0x3ae>
 80011e2:	4bb9      	ldr	r3, [pc, #740]	; (80014c8 <HAL_RCC_OscConfig+0x660>)
 80011e4:	681a      	ldr	r2, [r3, #0]
 80011e6:	4bb8      	ldr	r3, [pc, #736]	; (80014c8 <HAL_RCC_OscConfig+0x660>)
 80011e8:	49b9      	ldr	r1, [pc, #740]	; (80014d0 <HAL_RCC_OscConfig+0x668>)
 80011ea:	400a      	ands	r2, r1
 80011ec:	601a      	str	r2, [r3, #0]
 80011ee:	f7ff fc07 	bl	8000a00 <HAL_GetTick>
 80011f2:	0003      	movs	r3, r0
 80011f4:	61bb      	str	r3, [r7, #24]
 80011f6:	e008      	b.n	800120a <HAL_RCC_OscConfig+0x3a2>
 80011f8:	f7ff fc02 	bl	8000a00 <HAL_GetTick>
 80011fc:	0002      	movs	r2, r0
 80011fe:	69bb      	ldr	r3, [r7, #24]
 8001200:	1ad3      	subs	r3, r2, r3
 8001202:	2b02      	cmp	r3, #2
 8001204:	d901      	bls.n	800120a <HAL_RCC_OscConfig+0x3a2>
 8001206:	2303      	movs	r3, #3
 8001208:	e1ec      	b.n	80015e4 <HAL_RCC_OscConfig+0x77c>
 800120a:	4baf      	ldr	r3, [pc, #700]	; (80014c8 <HAL_RCC_OscConfig+0x660>)
 800120c:	681a      	ldr	r2, [r3, #0]
 800120e:	2380      	movs	r3, #128	; 0x80
 8001210:	009b      	lsls	r3, r3, #2
 8001212:	4013      	ands	r3, r2
 8001214:	d1f0      	bne.n	80011f8 <HAL_RCC_OscConfig+0x390>
 8001216:	687b      	ldr	r3, [r7, #4]
 8001218:	681b      	ldr	r3, [r3, #0]
 800121a:	2208      	movs	r2, #8
 800121c:	4013      	ands	r3, r2
 800121e:	d036      	beq.n	800128e <HAL_RCC_OscConfig+0x426>
 8001220:	687b      	ldr	r3, [r7, #4]
 8001222:	695b      	ldr	r3, [r3, #20]
 8001224:	2b00      	cmp	r3, #0
 8001226:	d019      	beq.n	800125c <HAL_RCC_OscConfig+0x3f4>
 8001228:	4ba7      	ldr	r3, [pc, #668]	; (80014c8 <HAL_RCC_OscConfig+0x660>)
 800122a:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800122c:	4ba6      	ldr	r3, [pc, #664]	; (80014c8 <HAL_RCC_OscConfig+0x660>)
 800122e:	2101      	movs	r1, #1
 8001230:	430a      	orrs	r2, r1
 8001232:	651a      	str	r2, [r3, #80]	; 0x50
 8001234:	f7ff fbe4 	bl	8000a00 <HAL_GetTick>
 8001238:	0003      	movs	r3, r0
 800123a:	61bb      	str	r3, [r7, #24]
 800123c:	e008      	b.n	8001250 <HAL_RCC_OscConfig+0x3e8>
 800123e:	f7ff fbdf 	bl	8000a00 <HAL_GetTick>
 8001242:	0002      	movs	r2, r0
 8001244:	69bb      	ldr	r3, [r7, #24]
 8001246:	1ad3      	subs	r3, r2, r3
 8001248:	2b02      	cmp	r3, #2
 800124a:	d901      	bls.n	8001250 <HAL_RCC_OscConfig+0x3e8>
 800124c:	2303      	movs	r3, #3
 800124e:	e1c9      	b.n	80015e4 <HAL_RCC_OscConfig+0x77c>
 8001250:	4b9d      	ldr	r3, [pc, #628]	; (80014c8 <HAL_RCC_OscConfig+0x660>)
 8001252:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8001254:	2202      	movs	r2, #2
 8001256:	4013      	ands	r3, r2
 8001258:	d0f1      	beq.n	800123e <HAL_RCC_OscConfig+0x3d6>
 800125a:	e018      	b.n	800128e <HAL_RCC_OscConfig+0x426>
 800125c:	4b9a      	ldr	r3, [pc, #616]	; (80014c8 <HAL_RCC_OscConfig+0x660>)
 800125e:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8001260:	4b99      	ldr	r3, [pc, #612]	; (80014c8 <HAL_RCC_OscConfig+0x660>)
 8001262:	2101      	movs	r1, #1
 8001264:	438a      	bics	r2, r1
 8001266:	651a      	str	r2, [r3, #80]	; 0x50
 8001268:	f7ff fbca 	bl	8000a00 <HAL_GetTick>
 800126c:	0003      	movs	r3, r0
 800126e:	61bb      	str	r3, [r7, #24]
 8001270:	e008      	b.n	8001284 <HAL_RCC_OscConfig+0x41c>
 8001272:	f7ff fbc5 	bl	8000a00 <HAL_GetTick>
 8001276:	0002      	movs	r2, r0
 8001278:	69bb      	ldr	r3, [r7, #24]
 800127a:	1ad3      	subs	r3, r2, r3
 800127c:	2b02      	cmp	r3, #2
 800127e:	d901      	bls.n	8001284 <HAL_RCC_OscConfig+0x41c>
 8001280:	2303      	movs	r3, #3
 8001282:	e1af      	b.n	80015e4 <HAL_RCC_OscConfig+0x77c>
 8001284:	4b90      	ldr	r3, [pc, #576]	; (80014c8 <HAL_RCC_OscConfig+0x660>)
 8001286:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8001288:	2202      	movs	r2, #2
 800128a:	4013      	ands	r3, r2
 800128c:	d1f1      	bne.n	8001272 <HAL_RCC_OscConfig+0x40a>
 800128e:	687b      	ldr	r3, [r7, #4]
 8001290:	681b      	ldr	r3, [r3, #0]
 8001292:	2204      	movs	r2, #4
 8001294:	4013      	ands	r3, r2
 8001296:	d100      	bne.n	800129a <HAL_RCC_OscConfig+0x432>
 8001298:	e0af      	b.n	80013fa <HAL_RCC_OscConfig+0x592>
 800129a:	2327      	movs	r3, #39	; 0x27
 800129c:	18fb      	adds	r3, r7, r3
 800129e:	2200      	movs	r2, #0
 80012a0:	701a      	strb	r2, [r3, #0]
 80012a2:	4b89      	ldr	r3, [pc, #548]	; (80014c8 <HAL_RCC_OscConfig+0x660>)
 80012a4:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80012a6:	2380      	movs	r3, #128	; 0x80
 80012a8:	055b      	lsls	r3, r3, #21
 80012aa:	4013      	ands	r3, r2
 80012ac:	d10a      	bne.n	80012c4 <HAL_RCC_OscConfig+0x45c>
 80012ae:	4b86      	ldr	r3, [pc, #536]	; (80014c8 <HAL_RCC_OscConfig+0x660>)
 80012b0:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80012b2:	4b85      	ldr	r3, [pc, #532]	; (80014c8 <HAL_RCC_OscConfig+0x660>)
 80012b4:	2180      	movs	r1, #128	; 0x80
 80012b6:	0549      	lsls	r1, r1, #21
 80012b8:	430a      	orrs	r2, r1
 80012ba:	639a      	str	r2, [r3, #56]	; 0x38
 80012bc:	2327      	movs	r3, #39	; 0x27
 80012be:	18fb      	adds	r3, r7, r3
 80012c0:	2201      	movs	r2, #1
 80012c2:	701a      	strb	r2, [r3, #0]
 80012c4:	4b83      	ldr	r3, [pc, #524]	; (80014d4 <HAL_RCC_OscConfig+0x66c>)
 80012c6:	681a      	ldr	r2, [r3, #0]
 80012c8:	2380      	movs	r3, #128	; 0x80
 80012ca:	005b      	lsls	r3, r3, #1
 80012cc:	4013      	ands	r3, r2
 80012ce:	d11a      	bne.n	8001306 <HAL_RCC_OscConfig+0x49e>
 80012d0:	4b80      	ldr	r3, [pc, #512]	; (80014d4 <HAL_RCC_OscConfig+0x66c>)
 80012d2:	681a      	ldr	r2, [r3, #0]
 80012d4:	4b7f      	ldr	r3, [pc, #508]	; (80014d4 <HAL_RCC_OscConfig+0x66c>)
 80012d6:	2180      	movs	r1, #128	; 0x80
 80012d8:	0049      	lsls	r1, r1, #1
 80012da:	430a      	orrs	r2, r1
 80012dc:	601a      	str	r2, [r3, #0]
 80012de:	f7ff fb8f 	bl	8000a00 <HAL_GetTick>
 80012e2:	0003      	movs	r3, r0
 80012e4:	61bb      	str	r3, [r7, #24]
 80012e6:	e008      	b.n	80012fa <HAL_RCC_OscConfig+0x492>
 80012e8:	f7ff fb8a 	bl	8000a00 <HAL_GetTick>
 80012ec:	0002      	movs	r2, r0
 80012ee:	69bb      	ldr	r3, [r7, #24]
 80012f0:	1ad3      	subs	r3, r2, r3
 80012f2:	2b64      	cmp	r3, #100	; 0x64
 80012f4:	d901      	bls.n	80012fa <HAL_RCC_OscConfig+0x492>
 80012f6:	2303      	movs	r3, #3
 80012f8:	e174      	b.n	80015e4 <HAL_RCC_OscConfig+0x77c>
 80012fa:	4b76      	ldr	r3, [pc, #472]	; (80014d4 <HAL_RCC_OscConfig+0x66c>)
 80012fc:	681a      	ldr	r2, [r3, #0]
 80012fe:	2380      	movs	r3, #128	; 0x80
 8001300:	005b      	lsls	r3, r3, #1
 8001302:	4013      	ands	r3, r2
 8001304:	d0f0      	beq.n	80012e8 <HAL_RCC_OscConfig+0x480>
 8001306:	687b      	ldr	r3, [r7, #4]
 8001308:	689a      	ldr	r2, [r3, #8]
 800130a:	2380      	movs	r3, #128	; 0x80
 800130c:	005b      	lsls	r3, r3, #1
 800130e:	429a      	cmp	r2, r3
 8001310:	d107      	bne.n	8001322 <HAL_RCC_OscConfig+0x4ba>
 8001312:	4b6d      	ldr	r3, [pc, #436]	; (80014c8 <HAL_RCC_OscConfig+0x660>)
 8001314:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8001316:	4b6c      	ldr	r3, [pc, #432]	; (80014c8 <HAL_RCC_OscConfig+0x660>)
 8001318:	2180      	movs	r1, #128	; 0x80
 800131a:	0049      	lsls	r1, r1, #1
 800131c:	430a      	orrs	r2, r1
 800131e:	651a      	str	r2, [r3, #80]	; 0x50
 8001320:	e031      	b.n	8001386 <HAL_RCC_OscConfig+0x51e>
 8001322:	687b      	ldr	r3, [r7, #4]
 8001324:	689b      	ldr	r3, [r3, #8]
 8001326:	2b00      	cmp	r3, #0
 8001328:	d10c      	bne.n	8001344 <HAL_RCC_OscConfig+0x4dc>
 800132a:	4b67      	ldr	r3, [pc, #412]	; (80014c8 <HAL_RCC_OscConfig+0x660>)
 800132c:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800132e:	4b66      	ldr	r3, [pc, #408]	; (80014c8 <HAL_RCC_OscConfig+0x660>)
 8001330:	4967      	ldr	r1, [pc, #412]	; (80014d0 <HAL_RCC_OscConfig+0x668>)
 8001332:	400a      	ands	r2, r1
 8001334:	651a      	str	r2, [r3, #80]	; 0x50
 8001336:	4b64      	ldr	r3, [pc, #400]	; (80014c8 <HAL_RCC_OscConfig+0x660>)
 8001338:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800133a:	4b63      	ldr	r3, [pc, #396]	; (80014c8 <HAL_RCC_OscConfig+0x660>)
 800133c:	4966      	ldr	r1, [pc, #408]	; (80014d8 <HAL_RCC_OscConfig+0x670>)
 800133e:	400a      	ands	r2, r1
 8001340:	651a      	str	r2, [r3, #80]	; 0x50
 8001342:	e020      	b.n	8001386 <HAL_RCC_OscConfig+0x51e>
 8001344:	687b      	ldr	r3, [r7, #4]
 8001346:	689a      	ldr	r2, [r3, #8]
 8001348:	23a0      	movs	r3, #160	; 0xa0
 800134a:	00db      	lsls	r3, r3, #3
 800134c:	429a      	cmp	r2, r3
 800134e:	d10e      	bne.n	800136e <HAL_RCC_OscConfig+0x506>
 8001350:	4b5d      	ldr	r3, [pc, #372]	; (80014c8 <HAL_RCC_OscConfig+0x660>)
 8001352:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8001354:	4b5c      	ldr	r3, [pc, #368]	; (80014c8 <HAL_RCC_OscConfig+0x660>)
 8001356:	2180      	movs	r1, #128	; 0x80
 8001358:	00c9      	lsls	r1, r1, #3
 800135a:	430a      	orrs	r2, r1
 800135c:	651a      	str	r2, [r3, #80]	; 0x50
 800135e:	4b5a      	ldr	r3, [pc, #360]	; (80014c8 <HAL_RCC_OscConfig+0x660>)
 8001360:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8001362:	4b59      	ldr	r3, [pc, #356]	; (80014c8 <HAL_RCC_OscConfig+0x660>)
 8001364:	2180      	movs	r1, #128	; 0x80
 8001366:	0049      	lsls	r1, r1, #1
 8001368:	430a      	orrs	r2, r1
 800136a:	651a      	str	r2, [r3, #80]	; 0x50
 800136c:	e00b      	b.n	8001386 <HAL_RCC_OscConfig+0x51e>
 800136e:	4b56      	ldr	r3, [pc, #344]	; (80014c8 <HAL_RCC_OscConfig+0x660>)
 8001370:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8001372:	4b55      	ldr	r3, [pc, #340]	; (80014c8 <HAL_RCC_OscConfig+0x660>)
 8001374:	4956      	ldr	r1, [pc, #344]	; (80014d0 <HAL_RCC_OscConfig+0x668>)
 8001376:	400a      	ands	r2, r1
 8001378:	651a      	str	r2, [r3, #80]	; 0x50
 800137a:	4b53      	ldr	r3, [pc, #332]	; (80014c8 <HAL_RCC_OscConfig+0x660>)
 800137c:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800137e:	4b52      	ldr	r3, [pc, #328]	; (80014c8 <HAL_RCC_OscConfig+0x660>)
 8001380:	4955      	ldr	r1, [pc, #340]	; (80014d8 <HAL_RCC_OscConfig+0x670>)
 8001382:	400a      	ands	r2, r1
 8001384:	651a      	str	r2, [r3, #80]	; 0x50
 8001386:	687b      	ldr	r3, [r7, #4]
 8001388:	689b      	ldr	r3, [r3, #8]
 800138a:	2b00      	cmp	r3, #0
 800138c:	d015      	beq.n	80013ba <HAL_RCC_OscConfig+0x552>
 800138e:	f7ff fb37 	bl	8000a00 <HAL_GetTick>
 8001392:	0003      	movs	r3, r0
 8001394:	61bb      	str	r3, [r7, #24]
 8001396:	e009      	b.n	80013ac <HAL_RCC_OscConfig+0x544>
 8001398:	f7ff fb32 	bl	8000a00 <HAL_GetTick>
 800139c:	0002      	movs	r2, r0
 800139e:	69bb      	ldr	r3, [r7, #24]
 80013a0:	1ad3      	subs	r3, r2, r3
 80013a2:	4a4e      	ldr	r2, [pc, #312]	; (80014dc <HAL_RCC_OscConfig+0x674>)
 80013a4:	4293      	cmp	r3, r2
 80013a6:	d901      	bls.n	80013ac <HAL_RCC_OscConfig+0x544>
 80013a8:	2303      	movs	r3, #3
 80013aa:	e11b      	b.n	80015e4 <HAL_RCC_OscConfig+0x77c>
 80013ac:	4b46      	ldr	r3, [pc, #280]	; (80014c8 <HAL_RCC_OscConfig+0x660>)
 80013ae:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 80013b0:	2380      	movs	r3, #128	; 0x80
 80013b2:	009b      	lsls	r3, r3, #2
 80013b4:	4013      	ands	r3, r2
 80013b6:	d0ef      	beq.n	8001398 <HAL_RCC_OscConfig+0x530>
 80013b8:	e014      	b.n	80013e4 <HAL_RCC_OscConfig+0x57c>
 80013ba:	f7ff fb21 	bl	8000a00 <HAL_GetTick>
 80013be:	0003      	movs	r3, r0
 80013c0:	61bb      	str	r3, [r7, #24]
 80013c2:	e009      	b.n	80013d8 <HAL_RCC_OscConfig+0x570>
 80013c4:	f7ff fb1c 	bl	8000a00 <HAL_GetTick>
 80013c8:	0002      	movs	r2, r0
 80013ca:	69bb      	ldr	r3, [r7, #24]
 80013cc:	1ad3      	subs	r3, r2, r3
 80013ce:	4a43      	ldr	r2, [pc, #268]	; (80014dc <HAL_RCC_OscConfig+0x674>)
 80013d0:	4293      	cmp	r3, r2
 80013d2:	d901      	bls.n	80013d8 <HAL_RCC_OscConfig+0x570>
 80013d4:	2303      	movs	r3, #3
 80013d6:	e105      	b.n	80015e4 <HAL_RCC_OscConfig+0x77c>
 80013d8:	4b3b      	ldr	r3, [pc, #236]	; (80014c8 <HAL_RCC_OscConfig+0x660>)
 80013da:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 80013dc:	2380      	movs	r3, #128	; 0x80
 80013de:	009b      	lsls	r3, r3, #2
 80013e0:	4013      	ands	r3, r2
 80013e2:	d1ef      	bne.n	80013c4 <HAL_RCC_OscConfig+0x55c>
 80013e4:	2327      	movs	r3, #39	; 0x27
 80013e6:	18fb      	adds	r3, r7, r3
 80013e8:	781b      	ldrb	r3, [r3, #0]
 80013ea:	2b01      	cmp	r3, #1
 80013ec:	d105      	bne.n	80013fa <HAL_RCC_OscConfig+0x592>
 80013ee:	4b36      	ldr	r3, [pc, #216]	; (80014c8 <HAL_RCC_OscConfig+0x660>)
 80013f0:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80013f2:	4b35      	ldr	r3, [pc, #212]	; (80014c8 <HAL_RCC_OscConfig+0x660>)
 80013f4:	493a      	ldr	r1, [pc, #232]	; (80014e0 <HAL_RCC_OscConfig+0x678>)
 80013f6:	400a      	ands	r2, r1
 80013f8:	639a      	str	r2, [r3, #56]	; 0x38
 80013fa:	687b      	ldr	r3, [r7, #4]
 80013fc:	681b      	ldr	r3, [r3, #0]
 80013fe:	2220      	movs	r2, #32
 8001400:	4013      	ands	r3, r2
 8001402:	d049      	beq.n	8001498 <HAL_RCC_OscConfig+0x630>
 8001404:	687b      	ldr	r3, [r7, #4]
 8001406:	699b      	ldr	r3, [r3, #24]
 8001408:	2b00      	cmp	r3, #0
 800140a:	d026      	beq.n	800145a <HAL_RCC_OscConfig+0x5f2>
 800140c:	4b2e      	ldr	r3, [pc, #184]	; (80014c8 <HAL_RCC_OscConfig+0x660>)
 800140e:	689a      	ldr	r2, [r3, #8]
 8001410:	4b2d      	ldr	r3, [pc, #180]	; (80014c8 <HAL_RCC_OscConfig+0x660>)
 8001412:	2101      	movs	r1, #1
 8001414:	430a      	orrs	r2, r1
 8001416:	609a      	str	r2, [r3, #8]
 8001418:	4b2b      	ldr	r3, [pc, #172]	; (80014c8 <HAL_RCC_OscConfig+0x660>)
 800141a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800141c:	4b2a      	ldr	r3, [pc, #168]	; (80014c8 <HAL_RCC_OscConfig+0x660>)
 800141e:	2101      	movs	r1, #1
 8001420:	430a      	orrs	r2, r1
 8001422:	635a      	str	r2, [r3, #52]	; 0x34
 8001424:	4b2f      	ldr	r3, [pc, #188]	; (80014e4 <HAL_RCC_OscConfig+0x67c>)
 8001426:	6a1a      	ldr	r2, [r3, #32]
 8001428:	4b2e      	ldr	r3, [pc, #184]	; (80014e4 <HAL_RCC_OscConfig+0x67c>)
 800142a:	2180      	movs	r1, #128	; 0x80
 800142c:	0189      	lsls	r1, r1, #6
 800142e:	430a      	orrs	r2, r1
 8001430:	621a      	str	r2, [r3, #32]
 8001432:	f7ff fae5 	bl	8000a00 <HAL_GetTick>
 8001436:	0003      	movs	r3, r0
 8001438:	61bb      	str	r3, [r7, #24]
 800143a:	e008      	b.n	800144e <HAL_RCC_OscConfig+0x5e6>
 800143c:	f7ff fae0 	bl	8000a00 <HAL_GetTick>
 8001440:	0002      	movs	r2, r0
 8001442:	69bb      	ldr	r3, [r7, #24]
 8001444:	1ad3      	subs	r3, r2, r3
 8001446:	2b02      	cmp	r3, #2
 8001448:	d901      	bls.n	800144e <HAL_RCC_OscConfig+0x5e6>
 800144a:	2303      	movs	r3, #3
 800144c:	e0ca      	b.n	80015e4 <HAL_RCC_OscConfig+0x77c>
 800144e:	4b1e      	ldr	r3, [pc, #120]	; (80014c8 <HAL_RCC_OscConfig+0x660>)
 8001450:	689b      	ldr	r3, [r3, #8]
 8001452:	2202      	movs	r2, #2
 8001454:	4013      	ands	r3, r2
 8001456:	d0f1      	beq.n	800143c <HAL_RCC_OscConfig+0x5d4>
 8001458:	e01e      	b.n	8001498 <HAL_RCC_OscConfig+0x630>
 800145a:	4b1b      	ldr	r3, [pc, #108]	; (80014c8 <HAL_RCC_OscConfig+0x660>)
 800145c:	689a      	ldr	r2, [r3, #8]
 800145e:	4b1a      	ldr	r3, [pc, #104]	; (80014c8 <HAL_RCC_OscConfig+0x660>)
 8001460:	2101      	movs	r1, #1
 8001462:	438a      	bics	r2, r1
 8001464:	609a      	str	r2, [r3, #8]
 8001466:	4b1f      	ldr	r3, [pc, #124]	; (80014e4 <HAL_RCC_OscConfig+0x67c>)
 8001468:	6a1a      	ldr	r2, [r3, #32]
 800146a:	4b1e      	ldr	r3, [pc, #120]	; (80014e4 <HAL_RCC_OscConfig+0x67c>)
 800146c:	491e      	ldr	r1, [pc, #120]	; (80014e8 <HAL_RCC_OscConfig+0x680>)
 800146e:	400a      	ands	r2, r1
 8001470:	621a      	str	r2, [r3, #32]
 8001472:	f7ff fac5 	bl	8000a00 <HAL_GetTick>
 8001476:	0003      	movs	r3, r0
 8001478:	61bb      	str	r3, [r7, #24]
 800147a:	e008      	b.n	800148e <HAL_RCC_OscConfig+0x626>
 800147c:	f7ff fac0 	bl	8000a00 <HAL_GetTick>
 8001480:	0002      	movs	r2, r0
 8001482:	69bb      	ldr	r3, [r7, #24]
 8001484:	1ad3      	subs	r3, r2, r3
 8001486:	2b02      	cmp	r3, #2
 8001488:	d901      	bls.n	800148e <HAL_RCC_OscConfig+0x626>
 800148a:	2303      	movs	r3, #3
 800148c:	e0aa      	b.n	80015e4 <HAL_RCC_OscConfig+0x77c>
 800148e:	4b0e      	ldr	r3, [pc, #56]	; (80014c8 <HAL_RCC_OscConfig+0x660>)
 8001490:	689b      	ldr	r3, [r3, #8]
 8001492:	2202      	movs	r2, #2
 8001494:	4013      	ands	r3, r2
 8001496:	d1f1      	bne.n	800147c <HAL_RCC_OscConfig+0x614>
 8001498:	687b      	ldr	r3, [r7, #4]
 800149a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800149c:	2b00      	cmp	r3, #0
 800149e:	d100      	bne.n	80014a2 <HAL_RCC_OscConfig+0x63a>
 80014a0:	e09f      	b.n	80015e2 <HAL_RCC_OscConfig+0x77a>
 80014a2:	6a3b      	ldr	r3, [r7, #32]
 80014a4:	2b0c      	cmp	r3, #12
 80014a6:	d100      	bne.n	80014aa <HAL_RCC_OscConfig+0x642>
 80014a8:	e078      	b.n	800159c <HAL_RCC_OscConfig+0x734>
 80014aa:	687b      	ldr	r3, [r7, #4]
 80014ac:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80014ae:	2b02      	cmp	r3, #2
 80014b0:	d159      	bne.n	8001566 <HAL_RCC_OscConfig+0x6fe>
 80014b2:	4b05      	ldr	r3, [pc, #20]	; (80014c8 <HAL_RCC_OscConfig+0x660>)
 80014b4:	681a      	ldr	r2, [r3, #0]
 80014b6:	4b04      	ldr	r3, [pc, #16]	; (80014c8 <HAL_RCC_OscConfig+0x660>)
 80014b8:	490c      	ldr	r1, [pc, #48]	; (80014ec <HAL_RCC_OscConfig+0x684>)
 80014ba:	400a      	ands	r2, r1
 80014bc:	601a      	str	r2, [r3, #0]
 80014be:	f7ff fa9f 	bl	8000a00 <HAL_GetTick>
 80014c2:	0003      	movs	r3, r0
 80014c4:	61bb      	str	r3, [r7, #24]
 80014c6:	e01c      	b.n	8001502 <HAL_RCC_OscConfig+0x69a>
 80014c8:	40021000 	.word	0x40021000
 80014cc:	ffff1fff 	.word	0xffff1fff
 80014d0:	fffffeff 	.word	0xfffffeff
 80014d4:	40007000 	.word	0x40007000
 80014d8:	fffffbff 	.word	0xfffffbff
 80014dc:	00001388 	.word	0x00001388
 80014e0:	efffffff 	.word	0xefffffff
 80014e4:	40010000 	.word	0x40010000
 80014e8:	ffffdfff 	.word	0xffffdfff
 80014ec:	feffffff 	.word	0xfeffffff
 80014f0:	f7ff fa86 	bl	8000a00 <HAL_GetTick>
 80014f4:	0002      	movs	r2, r0
 80014f6:	69bb      	ldr	r3, [r7, #24]
 80014f8:	1ad3      	subs	r3, r2, r3
 80014fa:	2b02      	cmp	r3, #2
 80014fc:	d901      	bls.n	8001502 <HAL_RCC_OscConfig+0x69a>
 80014fe:	2303      	movs	r3, #3
 8001500:	e070      	b.n	80015e4 <HAL_RCC_OscConfig+0x77c>
 8001502:	4b3a      	ldr	r3, [pc, #232]	; (80015ec <HAL_RCC_OscConfig+0x784>)
 8001504:	681a      	ldr	r2, [r3, #0]
 8001506:	2380      	movs	r3, #128	; 0x80
 8001508:	049b      	lsls	r3, r3, #18
 800150a:	4013      	ands	r3, r2
 800150c:	d1f0      	bne.n	80014f0 <HAL_RCC_OscConfig+0x688>
 800150e:	4b37      	ldr	r3, [pc, #220]	; (80015ec <HAL_RCC_OscConfig+0x784>)
 8001510:	68db      	ldr	r3, [r3, #12]
 8001512:	4a37      	ldr	r2, [pc, #220]	; (80015f0 <HAL_RCC_OscConfig+0x788>)
 8001514:	4013      	ands	r3, r2
 8001516:	0019      	movs	r1, r3
 8001518:	687b      	ldr	r3, [r7, #4]
 800151a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800151c:	687b      	ldr	r3, [r7, #4]
 800151e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001520:	431a      	orrs	r2, r3
 8001522:	687b      	ldr	r3, [r7, #4]
 8001524:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8001526:	431a      	orrs	r2, r3
 8001528:	4b30      	ldr	r3, [pc, #192]	; (80015ec <HAL_RCC_OscConfig+0x784>)
 800152a:	430a      	orrs	r2, r1
 800152c:	60da      	str	r2, [r3, #12]
 800152e:	4b2f      	ldr	r3, [pc, #188]	; (80015ec <HAL_RCC_OscConfig+0x784>)
 8001530:	681a      	ldr	r2, [r3, #0]
 8001532:	4b2e      	ldr	r3, [pc, #184]	; (80015ec <HAL_RCC_OscConfig+0x784>)
 8001534:	2180      	movs	r1, #128	; 0x80
 8001536:	0449      	lsls	r1, r1, #17
 8001538:	430a      	orrs	r2, r1
 800153a:	601a      	str	r2, [r3, #0]
 800153c:	f7ff fa60 	bl	8000a00 <HAL_GetTick>
 8001540:	0003      	movs	r3, r0
 8001542:	61bb      	str	r3, [r7, #24]
 8001544:	e008      	b.n	8001558 <HAL_RCC_OscConfig+0x6f0>
 8001546:	f7ff fa5b 	bl	8000a00 <HAL_GetTick>
 800154a:	0002      	movs	r2, r0
 800154c:	69bb      	ldr	r3, [r7, #24]
 800154e:	1ad3      	subs	r3, r2, r3
 8001550:	2b02      	cmp	r3, #2
 8001552:	d901      	bls.n	8001558 <HAL_RCC_OscConfig+0x6f0>
 8001554:	2303      	movs	r3, #3
 8001556:	e045      	b.n	80015e4 <HAL_RCC_OscConfig+0x77c>
 8001558:	4b24      	ldr	r3, [pc, #144]	; (80015ec <HAL_RCC_OscConfig+0x784>)
 800155a:	681a      	ldr	r2, [r3, #0]
 800155c:	2380      	movs	r3, #128	; 0x80
 800155e:	049b      	lsls	r3, r3, #18
 8001560:	4013      	ands	r3, r2
 8001562:	d0f0      	beq.n	8001546 <HAL_RCC_OscConfig+0x6de>
 8001564:	e03d      	b.n	80015e2 <HAL_RCC_OscConfig+0x77a>
 8001566:	4b21      	ldr	r3, [pc, #132]	; (80015ec <HAL_RCC_OscConfig+0x784>)
 8001568:	681a      	ldr	r2, [r3, #0]
 800156a:	4b20      	ldr	r3, [pc, #128]	; (80015ec <HAL_RCC_OscConfig+0x784>)
 800156c:	4921      	ldr	r1, [pc, #132]	; (80015f4 <HAL_RCC_OscConfig+0x78c>)
 800156e:	400a      	ands	r2, r1
 8001570:	601a      	str	r2, [r3, #0]
 8001572:	f7ff fa45 	bl	8000a00 <HAL_GetTick>
 8001576:	0003      	movs	r3, r0
 8001578:	61bb      	str	r3, [r7, #24]
 800157a:	e008      	b.n	800158e <HAL_RCC_OscConfig+0x726>
 800157c:	f7ff fa40 	bl	8000a00 <HAL_GetTick>
 8001580:	0002      	movs	r2, r0
 8001582:	69bb      	ldr	r3, [r7, #24]
 8001584:	1ad3      	subs	r3, r2, r3
 8001586:	2b02      	cmp	r3, #2
 8001588:	d901      	bls.n	800158e <HAL_RCC_OscConfig+0x726>
 800158a:	2303      	movs	r3, #3
 800158c:	e02a      	b.n	80015e4 <HAL_RCC_OscConfig+0x77c>
 800158e:	4b17      	ldr	r3, [pc, #92]	; (80015ec <HAL_RCC_OscConfig+0x784>)
 8001590:	681a      	ldr	r2, [r3, #0]
 8001592:	2380      	movs	r3, #128	; 0x80
 8001594:	049b      	lsls	r3, r3, #18
 8001596:	4013      	ands	r3, r2
 8001598:	d1f0      	bne.n	800157c <HAL_RCC_OscConfig+0x714>
 800159a:	e022      	b.n	80015e2 <HAL_RCC_OscConfig+0x77a>
 800159c:	687b      	ldr	r3, [r7, #4]
 800159e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80015a0:	2b01      	cmp	r3, #1
 80015a2:	d101      	bne.n	80015a8 <HAL_RCC_OscConfig+0x740>
 80015a4:	2301      	movs	r3, #1
 80015a6:	e01d      	b.n	80015e4 <HAL_RCC_OscConfig+0x77c>
 80015a8:	4b10      	ldr	r3, [pc, #64]	; (80015ec <HAL_RCC_OscConfig+0x784>)
 80015aa:	68db      	ldr	r3, [r3, #12]
 80015ac:	61fb      	str	r3, [r7, #28]
 80015ae:	69fa      	ldr	r2, [r7, #28]
 80015b0:	2380      	movs	r3, #128	; 0x80
 80015b2:	025b      	lsls	r3, r3, #9
 80015b4:	401a      	ands	r2, r3
 80015b6:	687b      	ldr	r3, [r7, #4]
 80015b8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80015ba:	429a      	cmp	r2, r3
 80015bc:	d10f      	bne.n	80015de <HAL_RCC_OscConfig+0x776>
 80015be:	69fa      	ldr	r2, [r7, #28]
 80015c0:	23f0      	movs	r3, #240	; 0xf0
 80015c2:	039b      	lsls	r3, r3, #14
 80015c4:	401a      	ands	r2, r3
 80015c6:	687b      	ldr	r3, [r7, #4]
 80015c8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80015ca:	429a      	cmp	r2, r3
 80015cc:	d107      	bne.n	80015de <HAL_RCC_OscConfig+0x776>
 80015ce:	69fa      	ldr	r2, [r7, #28]
 80015d0:	23c0      	movs	r3, #192	; 0xc0
 80015d2:	041b      	lsls	r3, r3, #16
 80015d4:	401a      	ands	r2, r3
 80015d6:	687b      	ldr	r3, [r7, #4]
 80015d8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80015da:	429a      	cmp	r2, r3
 80015dc:	d001      	beq.n	80015e2 <HAL_RCC_OscConfig+0x77a>
 80015de:	2301      	movs	r3, #1
 80015e0:	e000      	b.n	80015e4 <HAL_RCC_OscConfig+0x77c>
 80015e2:	2300      	movs	r3, #0
 80015e4:	0018      	movs	r0, r3
 80015e6:	46bd      	mov	sp, r7
 80015e8:	b00a      	add	sp, #40	; 0x28
 80015ea:	bdb0      	pop	{r4, r5, r7, pc}
 80015ec:	40021000 	.word	0x40021000
 80015f0:	ff02ffff 	.word	0xff02ffff
 80015f4:	feffffff 	.word	0xfeffffff

080015f8 <HAL_RCC_ClockConfig>:
 80015f8:	b5b0      	push	{r4, r5, r7, lr}
 80015fa:	b084      	sub	sp, #16
 80015fc:	af00      	add	r7, sp, #0
 80015fe:	6078      	str	r0, [r7, #4]
 8001600:	6039      	str	r1, [r7, #0]
 8001602:	687b      	ldr	r3, [r7, #4]
 8001604:	2b00      	cmp	r3, #0
 8001606:	d101      	bne.n	800160c <HAL_RCC_ClockConfig+0x14>
 8001608:	2301      	movs	r3, #1
 800160a:	e129      	b.n	8001860 <HAL_RCC_ClockConfig+0x268>
 800160c:	4b96      	ldr	r3, [pc, #600]	; (8001868 <HAL_RCC_ClockConfig+0x270>)
 800160e:	681b      	ldr	r3, [r3, #0]
 8001610:	2201      	movs	r2, #1
 8001612:	4013      	ands	r3, r2
 8001614:	683a      	ldr	r2, [r7, #0]
 8001616:	429a      	cmp	r2, r3
 8001618:	d91e      	bls.n	8001658 <HAL_RCC_ClockConfig+0x60>
 800161a:	4b93      	ldr	r3, [pc, #588]	; (8001868 <HAL_RCC_ClockConfig+0x270>)
 800161c:	681b      	ldr	r3, [r3, #0]
 800161e:	2201      	movs	r2, #1
 8001620:	4393      	bics	r3, r2
 8001622:	0019      	movs	r1, r3
 8001624:	4b90      	ldr	r3, [pc, #576]	; (8001868 <HAL_RCC_ClockConfig+0x270>)
 8001626:	683a      	ldr	r2, [r7, #0]
 8001628:	430a      	orrs	r2, r1
 800162a:	601a      	str	r2, [r3, #0]
 800162c:	f7ff f9e8 	bl	8000a00 <HAL_GetTick>
 8001630:	0003      	movs	r3, r0
 8001632:	60fb      	str	r3, [r7, #12]
 8001634:	e009      	b.n	800164a <HAL_RCC_ClockConfig+0x52>
 8001636:	f7ff f9e3 	bl	8000a00 <HAL_GetTick>
 800163a:	0002      	movs	r2, r0
 800163c:	68fb      	ldr	r3, [r7, #12]
 800163e:	1ad3      	subs	r3, r2, r3
 8001640:	4a8a      	ldr	r2, [pc, #552]	; (800186c <HAL_RCC_ClockConfig+0x274>)
 8001642:	4293      	cmp	r3, r2
 8001644:	d901      	bls.n	800164a <HAL_RCC_ClockConfig+0x52>
 8001646:	2303      	movs	r3, #3
 8001648:	e10a      	b.n	8001860 <HAL_RCC_ClockConfig+0x268>
 800164a:	4b87      	ldr	r3, [pc, #540]	; (8001868 <HAL_RCC_ClockConfig+0x270>)
 800164c:	681b      	ldr	r3, [r3, #0]
 800164e:	2201      	movs	r2, #1
 8001650:	4013      	ands	r3, r2
 8001652:	683a      	ldr	r2, [r7, #0]
 8001654:	429a      	cmp	r2, r3
 8001656:	d1ee      	bne.n	8001636 <HAL_RCC_ClockConfig+0x3e>
 8001658:	687b      	ldr	r3, [r7, #4]
 800165a:	681b      	ldr	r3, [r3, #0]
 800165c:	2202      	movs	r2, #2
 800165e:	4013      	ands	r3, r2
 8001660:	d009      	beq.n	8001676 <HAL_RCC_ClockConfig+0x7e>
 8001662:	4b83      	ldr	r3, [pc, #524]	; (8001870 <HAL_RCC_ClockConfig+0x278>)
 8001664:	68db      	ldr	r3, [r3, #12]
 8001666:	22f0      	movs	r2, #240	; 0xf0
 8001668:	4393      	bics	r3, r2
 800166a:	0019      	movs	r1, r3
 800166c:	687b      	ldr	r3, [r7, #4]
 800166e:	689a      	ldr	r2, [r3, #8]
 8001670:	4b7f      	ldr	r3, [pc, #508]	; (8001870 <HAL_RCC_ClockConfig+0x278>)
 8001672:	430a      	orrs	r2, r1
 8001674:	60da      	str	r2, [r3, #12]
 8001676:	687b      	ldr	r3, [r7, #4]
 8001678:	681b      	ldr	r3, [r3, #0]
 800167a:	2201      	movs	r2, #1
 800167c:	4013      	ands	r3, r2
 800167e:	d100      	bne.n	8001682 <HAL_RCC_ClockConfig+0x8a>
 8001680:	e089      	b.n	8001796 <HAL_RCC_ClockConfig+0x19e>
 8001682:	687b      	ldr	r3, [r7, #4]
 8001684:	685b      	ldr	r3, [r3, #4]
 8001686:	2b02      	cmp	r3, #2
 8001688:	d107      	bne.n	800169a <HAL_RCC_ClockConfig+0xa2>
 800168a:	4b79      	ldr	r3, [pc, #484]	; (8001870 <HAL_RCC_ClockConfig+0x278>)
 800168c:	681a      	ldr	r2, [r3, #0]
 800168e:	2380      	movs	r3, #128	; 0x80
 8001690:	029b      	lsls	r3, r3, #10
 8001692:	4013      	ands	r3, r2
 8001694:	d120      	bne.n	80016d8 <HAL_RCC_ClockConfig+0xe0>
 8001696:	2301      	movs	r3, #1
 8001698:	e0e2      	b.n	8001860 <HAL_RCC_ClockConfig+0x268>
 800169a:	687b      	ldr	r3, [r7, #4]
 800169c:	685b      	ldr	r3, [r3, #4]
 800169e:	2b03      	cmp	r3, #3
 80016a0:	d107      	bne.n	80016b2 <HAL_RCC_ClockConfig+0xba>
 80016a2:	4b73      	ldr	r3, [pc, #460]	; (8001870 <HAL_RCC_ClockConfig+0x278>)
 80016a4:	681a      	ldr	r2, [r3, #0]
 80016a6:	2380      	movs	r3, #128	; 0x80
 80016a8:	049b      	lsls	r3, r3, #18
 80016aa:	4013      	ands	r3, r2
 80016ac:	d114      	bne.n	80016d8 <HAL_RCC_ClockConfig+0xe0>
 80016ae:	2301      	movs	r3, #1
 80016b0:	e0d6      	b.n	8001860 <HAL_RCC_ClockConfig+0x268>
 80016b2:	687b      	ldr	r3, [r7, #4]
 80016b4:	685b      	ldr	r3, [r3, #4]
 80016b6:	2b01      	cmp	r3, #1
 80016b8:	d106      	bne.n	80016c8 <HAL_RCC_ClockConfig+0xd0>
 80016ba:	4b6d      	ldr	r3, [pc, #436]	; (8001870 <HAL_RCC_ClockConfig+0x278>)
 80016bc:	681b      	ldr	r3, [r3, #0]
 80016be:	2204      	movs	r2, #4
 80016c0:	4013      	ands	r3, r2
 80016c2:	d109      	bne.n	80016d8 <HAL_RCC_ClockConfig+0xe0>
 80016c4:	2301      	movs	r3, #1
 80016c6:	e0cb      	b.n	8001860 <HAL_RCC_ClockConfig+0x268>
 80016c8:	4b69      	ldr	r3, [pc, #420]	; (8001870 <HAL_RCC_ClockConfig+0x278>)
 80016ca:	681a      	ldr	r2, [r3, #0]
 80016cc:	2380      	movs	r3, #128	; 0x80
 80016ce:	009b      	lsls	r3, r3, #2
 80016d0:	4013      	ands	r3, r2
 80016d2:	d101      	bne.n	80016d8 <HAL_RCC_ClockConfig+0xe0>
 80016d4:	2301      	movs	r3, #1
 80016d6:	e0c3      	b.n	8001860 <HAL_RCC_ClockConfig+0x268>
 80016d8:	4b65      	ldr	r3, [pc, #404]	; (8001870 <HAL_RCC_ClockConfig+0x278>)
 80016da:	68db      	ldr	r3, [r3, #12]
 80016dc:	2203      	movs	r2, #3
 80016de:	4393      	bics	r3, r2
 80016e0:	0019      	movs	r1, r3
 80016e2:	687b      	ldr	r3, [r7, #4]
 80016e4:	685a      	ldr	r2, [r3, #4]
 80016e6:	4b62      	ldr	r3, [pc, #392]	; (8001870 <HAL_RCC_ClockConfig+0x278>)
 80016e8:	430a      	orrs	r2, r1
 80016ea:	60da      	str	r2, [r3, #12]
 80016ec:	f7ff f988 	bl	8000a00 <HAL_GetTick>
 80016f0:	0003      	movs	r3, r0
 80016f2:	60fb      	str	r3, [r7, #12]
 80016f4:	687b      	ldr	r3, [r7, #4]
 80016f6:	685b      	ldr	r3, [r3, #4]
 80016f8:	2b02      	cmp	r3, #2
 80016fa:	d111      	bne.n	8001720 <HAL_RCC_ClockConfig+0x128>
 80016fc:	e009      	b.n	8001712 <HAL_RCC_ClockConfig+0x11a>
 80016fe:	f7ff f97f 	bl	8000a00 <HAL_GetTick>
 8001702:	0002      	movs	r2, r0
 8001704:	68fb      	ldr	r3, [r7, #12]
 8001706:	1ad3      	subs	r3, r2, r3
 8001708:	4a58      	ldr	r2, [pc, #352]	; (800186c <HAL_RCC_ClockConfig+0x274>)
 800170a:	4293      	cmp	r3, r2
 800170c:	d901      	bls.n	8001712 <HAL_RCC_ClockConfig+0x11a>
 800170e:	2303      	movs	r3, #3
 8001710:	e0a6      	b.n	8001860 <HAL_RCC_ClockConfig+0x268>
 8001712:	4b57      	ldr	r3, [pc, #348]	; (8001870 <HAL_RCC_ClockConfig+0x278>)
 8001714:	68db      	ldr	r3, [r3, #12]
 8001716:	220c      	movs	r2, #12
 8001718:	4013      	ands	r3, r2
 800171a:	2b08      	cmp	r3, #8
 800171c:	d1ef      	bne.n	80016fe <HAL_RCC_ClockConfig+0x106>
 800171e:	e03a      	b.n	8001796 <HAL_RCC_ClockConfig+0x19e>
 8001720:	687b      	ldr	r3, [r7, #4]
 8001722:	685b      	ldr	r3, [r3, #4]
 8001724:	2b03      	cmp	r3, #3
 8001726:	d111      	bne.n	800174c <HAL_RCC_ClockConfig+0x154>
 8001728:	e009      	b.n	800173e <HAL_RCC_ClockConfig+0x146>
 800172a:	f7ff f969 	bl	8000a00 <HAL_GetTick>
 800172e:	0002      	movs	r2, r0
 8001730:	68fb      	ldr	r3, [r7, #12]
 8001732:	1ad3      	subs	r3, r2, r3
 8001734:	4a4d      	ldr	r2, [pc, #308]	; (800186c <HAL_RCC_ClockConfig+0x274>)
 8001736:	4293      	cmp	r3, r2
 8001738:	d901      	bls.n	800173e <HAL_RCC_ClockConfig+0x146>
 800173a:	2303      	movs	r3, #3
 800173c:	e090      	b.n	8001860 <HAL_RCC_ClockConfig+0x268>
 800173e:	4b4c      	ldr	r3, [pc, #304]	; (8001870 <HAL_RCC_ClockConfig+0x278>)
 8001740:	68db      	ldr	r3, [r3, #12]
 8001742:	220c      	movs	r2, #12
 8001744:	4013      	ands	r3, r2
 8001746:	2b0c      	cmp	r3, #12
 8001748:	d1ef      	bne.n	800172a <HAL_RCC_ClockConfig+0x132>
 800174a:	e024      	b.n	8001796 <HAL_RCC_ClockConfig+0x19e>
 800174c:	687b      	ldr	r3, [r7, #4]
 800174e:	685b      	ldr	r3, [r3, #4]
 8001750:	2b01      	cmp	r3, #1
 8001752:	d11b      	bne.n	800178c <HAL_RCC_ClockConfig+0x194>
 8001754:	e009      	b.n	800176a <HAL_RCC_ClockConfig+0x172>
 8001756:	f7ff f953 	bl	8000a00 <HAL_GetTick>
 800175a:	0002      	movs	r2, r0
 800175c:	68fb      	ldr	r3, [r7, #12]
 800175e:	1ad3      	subs	r3, r2, r3
 8001760:	4a42      	ldr	r2, [pc, #264]	; (800186c <HAL_RCC_ClockConfig+0x274>)
 8001762:	4293      	cmp	r3, r2
 8001764:	d901      	bls.n	800176a <HAL_RCC_ClockConfig+0x172>
 8001766:	2303      	movs	r3, #3
 8001768:	e07a      	b.n	8001860 <HAL_RCC_ClockConfig+0x268>
 800176a:	4b41      	ldr	r3, [pc, #260]	; (8001870 <HAL_RCC_ClockConfig+0x278>)
 800176c:	68db      	ldr	r3, [r3, #12]
 800176e:	220c      	movs	r2, #12
 8001770:	4013      	ands	r3, r2
 8001772:	2b04      	cmp	r3, #4
 8001774:	d1ef      	bne.n	8001756 <HAL_RCC_ClockConfig+0x15e>
 8001776:	e00e      	b.n	8001796 <HAL_RCC_ClockConfig+0x19e>
 8001778:	f7ff f942 	bl	8000a00 <HAL_GetTick>
 800177c:	0002      	movs	r2, r0
 800177e:	68fb      	ldr	r3, [r7, #12]
 8001780:	1ad3      	subs	r3, r2, r3
 8001782:	4a3a      	ldr	r2, [pc, #232]	; (800186c <HAL_RCC_ClockConfig+0x274>)
 8001784:	4293      	cmp	r3, r2
 8001786:	d901      	bls.n	800178c <HAL_RCC_ClockConfig+0x194>
 8001788:	2303      	movs	r3, #3
 800178a:	e069      	b.n	8001860 <HAL_RCC_ClockConfig+0x268>
 800178c:	4b38      	ldr	r3, [pc, #224]	; (8001870 <HAL_RCC_ClockConfig+0x278>)
 800178e:	68db      	ldr	r3, [r3, #12]
 8001790:	220c      	movs	r2, #12
 8001792:	4013      	ands	r3, r2
 8001794:	d1f0      	bne.n	8001778 <HAL_RCC_ClockConfig+0x180>
 8001796:	4b34      	ldr	r3, [pc, #208]	; (8001868 <HAL_RCC_ClockConfig+0x270>)
 8001798:	681b      	ldr	r3, [r3, #0]
 800179a:	2201      	movs	r2, #1
 800179c:	4013      	ands	r3, r2
 800179e:	683a      	ldr	r2, [r7, #0]
 80017a0:	429a      	cmp	r2, r3
 80017a2:	d21e      	bcs.n	80017e2 <HAL_RCC_ClockConfig+0x1ea>
 80017a4:	4b30      	ldr	r3, [pc, #192]	; (8001868 <HAL_RCC_ClockConfig+0x270>)
 80017a6:	681b      	ldr	r3, [r3, #0]
 80017a8:	2201      	movs	r2, #1
 80017aa:	4393      	bics	r3, r2
 80017ac:	0019      	movs	r1, r3
 80017ae:	4b2e      	ldr	r3, [pc, #184]	; (8001868 <HAL_RCC_ClockConfig+0x270>)
 80017b0:	683a      	ldr	r2, [r7, #0]
 80017b2:	430a      	orrs	r2, r1
 80017b4:	601a      	str	r2, [r3, #0]
 80017b6:	f7ff f923 	bl	8000a00 <HAL_GetTick>
 80017ba:	0003      	movs	r3, r0
 80017bc:	60fb      	str	r3, [r7, #12]
 80017be:	e009      	b.n	80017d4 <HAL_RCC_ClockConfig+0x1dc>
 80017c0:	f7ff f91e 	bl	8000a00 <HAL_GetTick>
 80017c4:	0002      	movs	r2, r0
 80017c6:	68fb      	ldr	r3, [r7, #12]
 80017c8:	1ad3      	subs	r3, r2, r3
 80017ca:	4a28      	ldr	r2, [pc, #160]	; (800186c <HAL_RCC_ClockConfig+0x274>)
 80017cc:	4293      	cmp	r3, r2
 80017ce:	d901      	bls.n	80017d4 <HAL_RCC_ClockConfig+0x1dc>
 80017d0:	2303      	movs	r3, #3
 80017d2:	e045      	b.n	8001860 <HAL_RCC_ClockConfig+0x268>
 80017d4:	4b24      	ldr	r3, [pc, #144]	; (8001868 <HAL_RCC_ClockConfig+0x270>)
 80017d6:	681b      	ldr	r3, [r3, #0]
 80017d8:	2201      	movs	r2, #1
 80017da:	4013      	ands	r3, r2
 80017dc:	683a      	ldr	r2, [r7, #0]
 80017de:	429a      	cmp	r2, r3
 80017e0:	d1ee      	bne.n	80017c0 <HAL_RCC_ClockConfig+0x1c8>
 80017e2:	687b      	ldr	r3, [r7, #4]
 80017e4:	681b      	ldr	r3, [r3, #0]
 80017e6:	2204      	movs	r2, #4
 80017e8:	4013      	ands	r3, r2
 80017ea:	d009      	beq.n	8001800 <HAL_RCC_ClockConfig+0x208>
 80017ec:	4b20      	ldr	r3, [pc, #128]	; (8001870 <HAL_RCC_ClockConfig+0x278>)
 80017ee:	68db      	ldr	r3, [r3, #12]
 80017f0:	4a20      	ldr	r2, [pc, #128]	; (8001874 <HAL_RCC_ClockConfig+0x27c>)
 80017f2:	4013      	ands	r3, r2
 80017f4:	0019      	movs	r1, r3
 80017f6:	687b      	ldr	r3, [r7, #4]
 80017f8:	68da      	ldr	r2, [r3, #12]
 80017fa:	4b1d      	ldr	r3, [pc, #116]	; (8001870 <HAL_RCC_ClockConfig+0x278>)
 80017fc:	430a      	orrs	r2, r1
 80017fe:	60da      	str	r2, [r3, #12]
 8001800:	687b      	ldr	r3, [r7, #4]
 8001802:	681b      	ldr	r3, [r3, #0]
 8001804:	2208      	movs	r2, #8
 8001806:	4013      	ands	r3, r2
 8001808:	d00a      	beq.n	8001820 <HAL_RCC_ClockConfig+0x228>
 800180a:	4b19      	ldr	r3, [pc, #100]	; (8001870 <HAL_RCC_ClockConfig+0x278>)
 800180c:	68db      	ldr	r3, [r3, #12]
 800180e:	4a1a      	ldr	r2, [pc, #104]	; (8001878 <HAL_RCC_ClockConfig+0x280>)
 8001810:	4013      	ands	r3, r2
 8001812:	0019      	movs	r1, r3
 8001814:	687b      	ldr	r3, [r7, #4]
 8001816:	691b      	ldr	r3, [r3, #16]
 8001818:	00da      	lsls	r2, r3, #3
 800181a:	4b15      	ldr	r3, [pc, #84]	; (8001870 <HAL_RCC_ClockConfig+0x278>)
 800181c:	430a      	orrs	r2, r1
 800181e:	60da      	str	r2, [r3, #12]
 8001820:	f000 f832 	bl	8001888 <HAL_RCC_GetSysClockFreq>
 8001824:	0001      	movs	r1, r0
 8001826:	4b12      	ldr	r3, [pc, #72]	; (8001870 <HAL_RCC_ClockConfig+0x278>)
 8001828:	68db      	ldr	r3, [r3, #12]
 800182a:	091b      	lsrs	r3, r3, #4
 800182c:	220f      	movs	r2, #15
 800182e:	4013      	ands	r3, r2
 8001830:	4a12      	ldr	r2, [pc, #72]	; (800187c <HAL_RCC_ClockConfig+0x284>)
 8001832:	5cd3      	ldrb	r3, [r2, r3]
 8001834:	000a      	movs	r2, r1
 8001836:	40da      	lsrs	r2, r3
 8001838:	4b11      	ldr	r3, [pc, #68]	; (8001880 <HAL_RCC_ClockConfig+0x288>)
 800183a:	601a      	str	r2, [r3, #0]
 800183c:	4b11      	ldr	r3, [pc, #68]	; (8001884 <HAL_RCC_ClockConfig+0x28c>)
 800183e:	681b      	ldr	r3, [r3, #0]
 8001840:	250b      	movs	r5, #11
 8001842:	197c      	adds	r4, r7, r5
 8001844:	0018      	movs	r0, r3
 8001846:	f7ff f895 	bl	8000974 <HAL_InitTick>
 800184a:	0003      	movs	r3, r0
 800184c:	7023      	strb	r3, [r4, #0]
 800184e:	197b      	adds	r3, r7, r5
 8001850:	781b      	ldrb	r3, [r3, #0]
 8001852:	2b00      	cmp	r3, #0
 8001854:	d003      	beq.n	800185e <HAL_RCC_ClockConfig+0x266>
 8001856:	230b      	movs	r3, #11
 8001858:	18fb      	adds	r3, r7, r3
 800185a:	781b      	ldrb	r3, [r3, #0]
 800185c:	e000      	b.n	8001860 <HAL_RCC_ClockConfig+0x268>
 800185e:	2300      	movs	r3, #0
 8001860:	0018      	movs	r0, r3
 8001862:	46bd      	mov	sp, r7
 8001864:	b004      	add	sp, #16
 8001866:	bdb0      	pop	{r4, r5, r7, pc}
 8001868:	40022000 	.word	0x40022000
 800186c:	00001388 	.word	0x00001388
 8001870:	40021000 	.word	0x40021000
 8001874:	fffff8ff 	.word	0xfffff8ff
 8001878:	ffffc7ff 	.word	0xffffc7ff
 800187c:	08002280 	.word	0x08002280
 8001880:	20000000 	.word	0x20000000
 8001884:	20000004 	.word	0x20000004

08001888 <HAL_RCC_GetSysClockFreq>:
 8001888:	b5f0      	push	{r4, r5, r6, r7, lr}
 800188a:	b08f      	sub	sp, #60	; 0x3c
 800188c:	af00      	add	r7, sp, #0
 800188e:	4b4a      	ldr	r3, [pc, #296]	; (80019b8 <HAL_RCC_GetSysClockFreq+0x130>)
 8001890:	68db      	ldr	r3, [r3, #12]
 8001892:	62fb      	str	r3, [r7, #44]	; 0x2c
 8001894:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8001896:	230c      	movs	r3, #12
 8001898:	4013      	ands	r3, r2
 800189a:	2b08      	cmp	r3, #8
 800189c:	d00f      	beq.n	80018be <HAL_RCC_GetSysClockFreq+0x36>
 800189e:	2b0c      	cmp	r3, #12
 80018a0:	d010      	beq.n	80018c4 <HAL_RCC_GetSysClockFreq+0x3c>
 80018a2:	2b04      	cmp	r3, #4
 80018a4:	d000      	beq.n	80018a8 <HAL_RCC_GetSysClockFreq+0x20>
 80018a6:	e073      	b.n	8001990 <HAL_RCC_GetSysClockFreq+0x108>
 80018a8:	4b43      	ldr	r3, [pc, #268]	; (80019b8 <HAL_RCC_GetSysClockFreq+0x130>)
 80018aa:	681b      	ldr	r3, [r3, #0]
 80018ac:	2210      	movs	r2, #16
 80018ae:	4013      	ands	r3, r2
 80018b0:	d002      	beq.n	80018b8 <HAL_RCC_GetSysClockFreq+0x30>
 80018b2:	4b42      	ldr	r3, [pc, #264]	; (80019bc <HAL_RCC_GetSysClockFreq+0x134>)
 80018b4:	633b      	str	r3, [r7, #48]	; 0x30
 80018b6:	e079      	b.n	80019ac <HAL_RCC_GetSysClockFreq+0x124>
 80018b8:	4b41      	ldr	r3, [pc, #260]	; (80019c0 <HAL_RCC_GetSysClockFreq+0x138>)
 80018ba:	633b      	str	r3, [r7, #48]	; 0x30
 80018bc:	e076      	b.n	80019ac <HAL_RCC_GetSysClockFreq+0x124>
 80018be:	4b41      	ldr	r3, [pc, #260]	; (80019c4 <HAL_RCC_GetSysClockFreq+0x13c>)
 80018c0:	633b      	str	r3, [r7, #48]	; 0x30
 80018c2:	e073      	b.n	80019ac <HAL_RCC_GetSysClockFreq+0x124>
 80018c4:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80018c6:	0c9a      	lsrs	r2, r3, #18
 80018c8:	230f      	movs	r3, #15
 80018ca:	401a      	ands	r2, r3
 80018cc:	4b3e      	ldr	r3, [pc, #248]	; (80019c8 <HAL_RCC_GetSysClockFreq+0x140>)
 80018ce:	5c9b      	ldrb	r3, [r3, r2]
 80018d0:	62bb      	str	r3, [r7, #40]	; 0x28
 80018d2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80018d4:	0d9a      	lsrs	r2, r3, #22
 80018d6:	2303      	movs	r3, #3
 80018d8:	4013      	ands	r3, r2
 80018da:	3301      	adds	r3, #1
 80018dc:	627b      	str	r3, [r7, #36]	; 0x24
 80018de:	4b36      	ldr	r3, [pc, #216]	; (80019b8 <HAL_RCC_GetSysClockFreq+0x130>)
 80018e0:	68da      	ldr	r2, [r3, #12]
 80018e2:	2380      	movs	r3, #128	; 0x80
 80018e4:	025b      	lsls	r3, r3, #9
 80018e6:	4013      	ands	r3, r2
 80018e8:	d019      	beq.n	800191e <HAL_RCC_GetSysClockFreq+0x96>
 80018ea:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80018ec:	61bb      	str	r3, [r7, #24]
 80018ee:	2300      	movs	r3, #0
 80018f0:	61fb      	str	r3, [r7, #28]
 80018f2:	4a34      	ldr	r2, [pc, #208]	; (80019c4 <HAL_RCC_GetSysClockFreq+0x13c>)
 80018f4:	2300      	movs	r3, #0
 80018f6:	69b8      	ldr	r0, [r7, #24]
 80018f8:	69f9      	ldr	r1, [r7, #28]
 80018fa:	f7fe fcb1 	bl	8000260 <__aeabi_lmul>
 80018fe:	0003      	movs	r3, r0
 8001900:	000c      	movs	r4, r1
 8001902:	0018      	movs	r0, r3
 8001904:	0021      	movs	r1, r4
 8001906:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001908:	613b      	str	r3, [r7, #16]
 800190a:	2300      	movs	r3, #0
 800190c:	617b      	str	r3, [r7, #20]
 800190e:	693a      	ldr	r2, [r7, #16]
 8001910:	697b      	ldr	r3, [r7, #20]
 8001912:	f7fe fc85 	bl	8000220 <__aeabi_uldivmod>
 8001916:	0003      	movs	r3, r0
 8001918:	000c      	movs	r4, r1
 800191a:	637b      	str	r3, [r7, #52]	; 0x34
 800191c:	e035      	b.n	800198a <HAL_RCC_GetSysClockFreq+0x102>
 800191e:	4b26      	ldr	r3, [pc, #152]	; (80019b8 <HAL_RCC_GetSysClockFreq+0x130>)
 8001920:	681b      	ldr	r3, [r3, #0]
 8001922:	2210      	movs	r2, #16
 8001924:	4013      	ands	r3, r2
 8001926:	d019      	beq.n	800195c <HAL_RCC_GetSysClockFreq+0xd4>
 8001928:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800192a:	60bb      	str	r3, [r7, #8]
 800192c:	2300      	movs	r3, #0
 800192e:	60fb      	str	r3, [r7, #12]
 8001930:	4a22      	ldr	r2, [pc, #136]	; (80019bc <HAL_RCC_GetSysClockFreq+0x134>)
 8001932:	2300      	movs	r3, #0
 8001934:	68b8      	ldr	r0, [r7, #8]
 8001936:	68f9      	ldr	r1, [r7, #12]
 8001938:	f7fe fc92 	bl	8000260 <__aeabi_lmul>
 800193c:	0003      	movs	r3, r0
 800193e:	000c      	movs	r4, r1
 8001940:	0018      	movs	r0, r3
 8001942:	0021      	movs	r1, r4
 8001944:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001946:	603b      	str	r3, [r7, #0]
 8001948:	2300      	movs	r3, #0
 800194a:	607b      	str	r3, [r7, #4]
 800194c:	683a      	ldr	r2, [r7, #0]
 800194e:	687b      	ldr	r3, [r7, #4]
 8001950:	f7fe fc66 	bl	8000220 <__aeabi_uldivmod>
 8001954:	0003      	movs	r3, r0
 8001956:	000c      	movs	r4, r1
 8001958:	637b      	str	r3, [r7, #52]	; 0x34
 800195a:	e016      	b.n	800198a <HAL_RCC_GetSysClockFreq+0x102>
 800195c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800195e:	0018      	movs	r0, r3
 8001960:	2300      	movs	r3, #0
 8001962:	0019      	movs	r1, r3
 8001964:	4a16      	ldr	r2, [pc, #88]	; (80019c0 <HAL_RCC_GetSysClockFreq+0x138>)
 8001966:	2300      	movs	r3, #0
 8001968:	f7fe fc7a 	bl	8000260 <__aeabi_lmul>
 800196c:	0003      	movs	r3, r0
 800196e:	000c      	movs	r4, r1
 8001970:	0018      	movs	r0, r3
 8001972:	0021      	movs	r1, r4
 8001974:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001976:	001d      	movs	r5, r3
 8001978:	2300      	movs	r3, #0
 800197a:	001e      	movs	r6, r3
 800197c:	002a      	movs	r2, r5
 800197e:	0033      	movs	r3, r6
 8001980:	f7fe fc4e 	bl	8000220 <__aeabi_uldivmod>
 8001984:	0003      	movs	r3, r0
 8001986:	000c      	movs	r4, r1
 8001988:	637b      	str	r3, [r7, #52]	; 0x34
 800198a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800198c:	633b      	str	r3, [r7, #48]	; 0x30
 800198e:	e00d      	b.n	80019ac <HAL_RCC_GetSysClockFreq+0x124>
 8001990:	4b09      	ldr	r3, [pc, #36]	; (80019b8 <HAL_RCC_GetSysClockFreq+0x130>)
 8001992:	685b      	ldr	r3, [r3, #4]
 8001994:	0b5b      	lsrs	r3, r3, #13
 8001996:	2207      	movs	r2, #7
 8001998:	4013      	ands	r3, r2
 800199a:	623b      	str	r3, [r7, #32]
 800199c:	6a3b      	ldr	r3, [r7, #32]
 800199e:	3301      	adds	r3, #1
 80019a0:	2280      	movs	r2, #128	; 0x80
 80019a2:	0212      	lsls	r2, r2, #8
 80019a4:	409a      	lsls	r2, r3
 80019a6:	0013      	movs	r3, r2
 80019a8:	633b      	str	r3, [r7, #48]	; 0x30
 80019aa:	46c0      	nop			; (mov r8, r8)
 80019ac:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80019ae:	0018      	movs	r0, r3
 80019b0:	46bd      	mov	sp, r7
 80019b2:	b00f      	add	sp, #60	; 0x3c
 80019b4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80019b6:	46c0      	nop			; (mov r8, r8)
 80019b8:	40021000 	.word	0x40021000
 80019bc:	003d0900 	.word	0x003d0900
 80019c0:	00f42400 	.word	0x00f42400
 80019c4:	007a1200 	.word	0x007a1200
 80019c8:	08002290 	.word	0x08002290

080019cc <HAL_RCCEx_PeriphCLKConfig>:
 80019cc:	b580      	push	{r7, lr}
 80019ce:	b086      	sub	sp, #24
 80019d0:	af00      	add	r7, sp, #0
 80019d2:	6078      	str	r0, [r7, #4]
 80019d4:	2317      	movs	r3, #23
 80019d6:	18fb      	adds	r3, r7, r3
 80019d8:	2200      	movs	r2, #0
 80019da:	701a      	strb	r2, [r3, #0]
 80019dc:	687b      	ldr	r3, [r7, #4]
 80019de:	681b      	ldr	r3, [r3, #0]
 80019e0:	2220      	movs	r2, #32
 80019e2:	4013      	ands	r3, r2
 80019e4:	d106      	bne.n	80019f4 <HAL_RCCEx_PeriphCLKConfig+0x28>
 80019e6:	687b      	ldr	r3, [r7, #4]
 80019e8:	681a      	ldr	r2, [r3, #0]
 80019ea:	2380      	movs	r3, #128	; 0x80
 80019ec:	011b      	lsls	r3, r3, #4
 80019ee:	4013      	ands	r3, r2
 80019f0:	d100      	bne.n	80019f4 <HAL_RCCEx_PeriphCLKConfig+0x28>
 80019f2:	e0d9      	b.n	8001ba8 <HAL_RCCEx_PeriphCLKConfig+0x1dc>
 80019f4:	4b9c      	ldr	r3, [pc, #624]	; (8001c68 <HAL_RCCEx_PeriphCLKConfig+0x29c>)
 80019f6:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80019f8:	2380      	movs	r3, #128	; 0x80
 80019fa:	055b      	lsls	r3, r3, #21
 80019fc:	4013      	ands	r3, r2
 80019fe:	d10a      	bne.n	8001a16 <HAL_RCCEx_PeriphCLKConfig+0x4a>
 8001a00:	4b99      	ldr	r3, [pc, #612]	; (8001c68 <HAL_RCCEx_PeriphCLKConfig+0x29c>)
 8001a02:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8001a04:	4b98      	ldr	r3, [pc, #608]	; (8001c68 <HAL_RCCEx_PeriphCLKConfig+0x29c>)
 8001a06:	2180      	movs	r1, #128	; 0x80
 8001a08:	0549      	lsls	r1, r1, #21
 8001a0a:	430a      	orrs	r2, r1
 8001a0c:	639a      	str	r2, [r3, #56]	; 0x38
 8001a0e:	2317      	movs	r3, #23
 8001a10:	18fb      	adds	r3, r7, r3
 8001a12:	2201      	movs	r2, #1
 8001a14:	701a      	strb	r2, [r3, #0]
 8001a16:	4b95      	ldr	r3, [pc, #596]	; (8001c6c <HAL_RCCEx_PeriphCLKConfig+0x2a0>)
 8001a18:	681a      	ldr	r2, [r3, #0]
 8001a1a:	2380      	movs	r3, #128	; 0x80
 8001a1c:	005b      	lsls	r3, r3, #1
 8001a1e:	4013      	ands	r3, r2
 8001a20:	d11a      	bne.n	8001a58 <HAL_RCCEx_PeriphCLKConfig+0x8c>
 8001a22:	4b92      	ldr	r3, [pc, #584]	; (8001c6c <HAL_RCCEx_PeriphCLKConfig+0x2a0>)
 8001a24:	681a      	ldr	r2, [r3, #0]
 8001a26:	4b91      	ldr	r3, [pc, #580]	; (8001c6c <HAL_RCCEx_PeriphCLKConfig+0x2a0>)
 8001a28:	2180      	movs	r1, #128	; 0x80
 8001a2a:	0049      	lsls	r1, r1, #1
 8001a2c:	430a      	orrs	r2, r1
 8001a2e:	601a      	str	r2, [r3, #0]
 8001a30:	f7fe ffe6 	bl	8000a00 <HAL_GetTick>
 8001a34:	0003      	movs	r3, r0
 8001a36:	613b      	str	r3, [r7, #16]
 8001a38:	e008      	b.n	8001a4c <HAL_RCCEx_PeriphCLKConfig+0x80>
 8001a3a:	f7fe ffe1 	bl	8000a00 <HAL_GetTick>
 8001a3e:	0002      	movs	r2, r0
 8001a40:	693b      	ldr	r3, [r7, #16]
 8001a42:	1ad3      	subs	r3, r2, r3
 8001a44:	2b64      	cmp	r3, #100	; 0x64
 8001a46:	d901      	bls.n	8001a4c <HAL_RCCEx_PeriphCLKConfig+0x80>
 8001a48:	2303      	movs	r3, #3
 8001a4a:	e108      	b.n	8001c5e <HAL_RCCEx_PeriphCLKConfig+0x292>
 8001a4c:	4b87      	ldr	r3, [pc, #540]	; (8001c6c <HAL_RCCEx_PeriphCLKConfig+0x2a0>)
 8001a4e:	681a      	ldr	r2, [r3, #0]
 8001a50:	2380      	movs	r3, #128	; 0x80
 8001a52:	005b      	lsls	r3, r3, #1
 8001a54:	4013      	ands	r3, r2
 8001a56:	d0f0      	beq.n	8001a3a <HAL_RCCEx_PeriphCLKConfig+0x6e>
 8001a58:	4b83      	ldr	r3, [pc, #524]	; (8001c68 <HAL_RCCEx_PeriphCLKConfig+0x29c>)
 8001a5a:	681a      	ldr	r2, [r3, #0]
 8001a5c:	23c0      	movs	r3, #192	; 0xc0
 8001a5e:	039b      	lsls	r3, r3, #14
 8001a60:	4013      	ands	r3, r2
 8001a62:	60fb      	str	r3, [r7, #12]
 8001a64:	687b      	ldr	r3, [r7, #4]
 8001a66:	685a      	ldr	r2, [r3, #4]
 8001a68:	23c0      	movs	r3, #192	; 0xc0
 8001a6a:	039b      	lsls	r3, r3, #14
 8001a6c:	4013      	ands	r3, r2
 8001a6e:	68fa      	ldr	r2, [r7, #12]
 8001a70:	429a      	cmp	r2, r3
 8001a72:	d107      	bne.n	8001a84 <HAL_RCCEx_PeriphCLKConfig+0xb8>
 8001a74:	687b      	ldr	r3, [r7, #4]
 8001a76:	689a      	ldr	r2, [r3, #8]
 8001a78:	23c0      	movs	r3, #192	; 0xc0
 8001a7a:	039b      	lsls	r3, r3, #14
 8001a7c:	4013      	ands	r3, r2
 8001a7e:	68fa      	ldr	r2, [r7, #12]
 8001a80:	429a      	cmp	r2, r3
 8001a82:	d013      	beq.n	8001aac <HAL_RCCEx_PeriphCLKConfig+0xe0>
 8001a84:	687b      	ldr	r3, [r7, #4]
 8001a86:	685a      	ldr	r2, [r3, #4]
 8001a88:	23c0      	movs	r3, #192	; 0xc0
 8001a8a:	029b      	lsls	r3, r3, #10
 8001a8c:	401a      	ands	r2, r3
 8001a8e:	23c0      	movs	r3, #192	; 0xc0
 8001a90:	029b      	lsls	r3, r3, #10
 8001a92:	429a      	cmp	r2, r3
 8001a94:	d10a      	bne.n	8001aac <HAL_RCCEx_PeriphCLKConfig+0xe0>
 8001a96:	4b74      	ldr	r3, [pc, #464]	; (8001c68 <HAL_RCCEx_PeriphCLKConfig+0x29c>)
 8001a98:	681a      	ldr	r2, [r3, #0]
 8001a9a:	2380      	movs	r3, #128	; 0x80
 8001a9c:	029b      	lsls	r3, r3, #10
 8001a9e:	401a      	ands	r2, r3
 8001aa0:	2380      	movs	r3, #128	; 0x80
 8001aa2:	029b      	lsls	r3, r3, #10
 8001aa4:	429a      	cmp	r2, r3
 8001aa6:	d101      	bne.n	8001aac <HAL_RCCEx_PeriphCLKConfig+0xe0>
 8001aa8:	2301      	movs	r3, #1
 8001aaa:	e0d8      	b.n	8001c5e <HAL_RCCEx_PeriphCLKConfig+0x292>
 8001aac:	4b6e      	ldr	r3, [pc, #440]	; (8001c68 <HAL_RCCEx_PeriphCLKConfig+0x29c>)
 8001aae:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8001ab0:	23c0      	movs	r3, #192	; 0xc0
 8001ab2:	029b      	lsls	r3, r3, #10
 8001ab4:	4013      	ands	r3, r2
 8001ab6:	60fb      	str	r3, [r7, #12]
 8001ab8:	68fb      	ldr	r3, [r7, #12]
 8001aba:	2b00      	cmp	r3, #0
 8001abc:	d049      	beq.n	8001b52 <HAL_RCCEx_PeriphCLKConfig+0x186>
 8001abe:	687b      	ldr	r3, [r7, #4]
 8001ac0:	685a      	ldr	r2, [r3, #4]
 8001ac2:	23c0      	movs	r3, #192	; 0xc0
 8001ac4:	029b      	lsls	r3, r3, #10
 8001ac6:	4013      	ands	r3, r2
 8001ac8:	68fa      	ldr	r2, [r7, #12]
 8001aca:	429a      	cmp	r2, r3
 8001acc:	d004      	beq.n	8001ad8 <HAL_RCCEx_PeriphCLKConfig+0x10c>
 8001ace:	687b      	ldr	r3, [r7, #4]
 8001ad0:	681b      	ldr	r3, [r3, #0]
 8001ad2:	2220      	movs	r2, #32
 8001ad4:	4013      	ands	r3, r2
 8001ad6:	d10d      	bne.n	8001af4 <HAL_RCCEx_PeriphCLKConfig+0x128>
 8001ad8:	687b      	ldr	r3, [r7, #4]
 8001ada:	689a      	ldr	r2, [r3, #8]
 8001adc:	23c0      	movs	r3, #192	; 0xc0
 8001ade:	029b      	lsls	r3, r3, #10
 8001ae0:	4013      	ands	r3, r2
 8001ae2:	68fa      	ldr	r2, [r7, #12]
 8001ae4:	429a      	cmp	r2, r3
 8001ae6:	d034      	beq.n	8001b52 <HAL_RCCEx_PeriphCLKConfig+0x186>
 8001ae8:	687b      	ldr	r3, [r7, #4]
 8001aea:	681a      	ldr	r2, [r3, #0]
 8001aec:	2380      	movs	r3, #128	; 0x80
 8001aee:	011b      	lsls	r3, r3, #4
 8001af0:	4013      	ands	r3, r2
 8001af2:	d02e      	beq.n	8001b52 <HAL_RCCEx_PeriphCLKConfig+0x186>
 8001af4:	4b5c      	ldr	r3, [pc, #368]	; (8001c68 <HAL_RCCEx_PeriphCLKConfig+0x29c>)
 8001af6:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8001af8:	4a5d      	ldr	r2, [pc, #372]	; (8001c70 <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 8001afa:	4013      	ands	r3, r2
 8001afc:	60fb      	str	r3, [r7, #12]
 8001afe:	4b5a      	ldr	r3, [pc, #360]	; (8001c68 <HAL_RCCEx_PeriphCLKConfig+0x29c>)
 8001b00:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8001b02:	4b59      	ldr	r3, [pc, #356]	; (8001c68 <HAL_RCCEx_PeriphCLKConfig+0x29c>)
 8001b04:	2180      	movs	r1, #128	; 0x80
 8001b06:	0309      	lsls	r1, r1, #12
 8001b08:	430a      	orrs	r2, r1
 8001b0a:	651a      	str	r2, [r3, #80]	; 0x50
 8001b0c:	4b56      	ldr	r3, [pc, #344]	; (8001c68 <HAL_RCCEx_PeriphCLKConfig+0x29c>)
 8001b0e:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8001b10:	4b55      	ldr	r3, [pc, #340]	; (8001c68 <HAL_RCCEx_PeriphCLKConfig+0x29c>)
 8001b12:	4958      	ldr	r1, [pc, #352]	; (8001c74 <HAL_RCCEx_PeriphCLKConfig+0x2a8>)
 8001b14:	400a      	ands	r2, r1
 8001b16:	651a      	str	r2, [r3, #80]	; 0x50
 8001b18:	4b53      	ldr	r3, [pc, #332]	; (8001c68 <HAL_RCCEx_PeriphCLKConfig+0x29c>)
 8001b1a:	68fa      	ldr	r2, [r7, #12]
 8001b1c:	651a      	str	r2, [r3, #80]	; 0x50
 8001b1e:	68fa      	ldr	r2, [r7, #12]
 8001b20:	2380      	movs	r3, #128	; 0x80
 8001b22:	005b      	lsls	r3, r3, #1
 8001b24:	4013      	ands	r3, r2
 8001b26:	d014      	beq.n	8001b52 <HAL_RCCEx_PeriphCLKConfig+0x186>
 8001b28:	f7fe ff6a 	bl	8000a00 <HAL_GetTick>
 8001b2c:	0003      	movs	r3, r0
 8001b2e:	613b      	str	r3, [r7, #16]
 8001b30:	e009      	b.n	8001b46 <HAL_RCCEx_PeriphCLKConfig+0x17a>
 8001b32:	f7fe ff65 	bl	8000a00 <HAL_GetTick>
 8001b36:	0002      	movs	r2, r0
 8001b38:	693b      	ldr	r3, [r7, #16]
 8001b3a:	1ad3      	subs	r3, r2, r3
 8001b3c:	4a4e      	ldr	r2, [pc, #312]	; (8001c78 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
 8001b3e:	4293      	cmp	r3, r2
 8001b40:	d901      	bls.n	8001b46 <HAL_RCCEx_PeriphCLKConfig+0x17a>
 8001b42:	2303      	movs	r3, #3
 8001b44:	e08b      	b.n	8001c5e <HAL_RCCEx_PeriphCLKConfig+0x292>
 8001b46:	4b48      	ldr	r3, [pc, #288]	; (8001c68 <HAL_RCCEx_PeriphCLKConfig+0x29c>)
 8001b48:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8001b4a:	2380      	movs	r3, #128	; 0x80
 8001b4c:	009b      	lsls	r3, r3, #2
 8001b4e:	4013      	ands	r3, r2
 8001b50:	d0ef      	beq.n	8001b32 <HAL_RCCEx_PeriphCLKConfig+0x166>
 8001b52:	687b      	ldr	r3, [r7, #4]
 8001b54:	685a      	ldr	r2, [r3, #4]
 8001b56:	23c0      	movs	r3, #192	; 0xc0
 8001b58:	029b      	lsls	r3, r3, #10
 8001b5a:	401a      	ands	r2, r3
 8001b5c:	23c0      	movs	r3, #192	; 0xc0
 8001b5e:	029b      	lsls	r3, r3, #10
 8001b60:	429a      	cmp	r2, r3
 8001b62:	d10c      	bne.n	8001b7e <HAL_RCCEx_PeriphCLKConfig+0x1b2>
 8001b64:	4b40      	ldr	r3, [pc, #256]	; (8001c68 <HAL_RCCEx_PeriphCLKConfig+0x29c>)
 8001b66:	681b      	ldr	r3, [r3, #0]
 8001b68:	4a44      	ldr	r2, [pc, #272]	; (8001c7c <HAL_RCCEx_PeriphCLKConfig+0x2b0>)
 8001b6a:	4013      	ands	r3, r2
 8001b6c:	0019      	movs	r1, r3
 8001b6e:	687b      	ldr	r3, [r7, #4]
 8001b70:	685a      	ldr	r2, [r3, #4]
 8001b72:	23c0      	movs	r3, #192	; 0xc0
 8001b74:	039b      	lsls	r3, r3, #14
 8001b76:	401a      	ands	r2, r3
 8001b78:	4b3b      	ldr	r3, [pc, #236]	; (8001c68 <HAL_RCCEx_PeriphCLKConfig+0x29c>)
 8001b7a:	430a      	orrs	r2, r1
 8001b7c:	601a      	str	r2, [r3, #0]
 8001b7e:	4b3a      	ldr	r3, [pc, #232]	; (8001c68 <HAL_RCCEx_PeriphCLKConfig+0x29c>)
 8001b80:	6d19      	ldr	r1, [r3, #80]	; 0x50
 8001b82:	687b      	ldr	r3, [r7, #4]
 8001b84:	685a      	ldr	r2, [r3, #4]
 8001b86:	23c0      	movs	r3, #192	; 0xc0
 8001b88:	029b      	lsls	r3, r3, #10
 8001b8a:	401a      	ands	r2, r3
 8001b8c:	4b36      	ldr	r3, [pc, #216]	; (8001c68 <HAL_RCCEx_PeriphCLKConfig+0x29c>)
 8001b8e:	430a      	orrs	r2, r1
 8001b90:	651a      	str	r2, [r3, #80]	; 0x50
 8001b92:	2317      	movs	r3, #23
 8001b94:	18fb      	adds	r3, r7, r3
 8001b96:	781b      	ldrb	r3, [r3, #0]
 8001b98:	2b01      	cmp	r3, #1
 8001b9a:	d105      	bne.n	8001ba8 <HAL_RCCEx_PeriphCLKConfig+0x1dc>
 8001b9c:	4b32      	ldr	r3, [pc, #200]	; (8001c68 <HAL_RCCEx_PeriphCLKConfig+0x29c>)
 8001b9e:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8001ba0:	4b31      	ldr	r3, [pc, #196]	; (8001c68 <HAL_RCCEx_PeriphCLKConfig+0x29c>)
 8001ba2:	4937      	ldr	r1, [pc, #220]	; (8001c80 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 8001ba4:	400a      	ands	r2, r1
 8001ba6:	639a      	str	r2, [r3, #56]	; 0x38
 8001ba8:	687b      	ldr	r3, [r7, #4]
 8001baa:	681b      	ldr	r3, [r3, #0]
 8001bac:	2201      	movs	r2, #1
 8001bae:	4013      	ands	r3, r2
 8001bb0:	d009      	beq.n	8001bc6 <HAL_RCCEx_PeriphCLKConfig+0x1fa>
 8001bb2:	4b2d      	ldr	r3, [pc, #180]	; (8001c68 <HAL_RCCEx_PeriphCLKConfig+0x29c>)
 8001bb4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8001bb6:	2203      	movs	r2, #3
 8001bb8:	4393      	bics	r3, r2
 8001bba:	0019      	movs	r1, r3
 8001bbc:	687b      	ldr	r3, [r7, #4]
 8001bbe:	68da      	ldr	r2, [r3, #12]
 8001bc0:	4b29      	ldr	r3, [pc, #164]	; (8001c68 <HAL_RCCEx_PeriphCLKConfig+0x29c>)
 8001bc2:	430a      	orrs	r2, r1
 8001bc4:	64da      	str	r2, [r3, #76]	; 0x4c
 8001bc6:	687b      	ldr	r3, [r7, #4]
 8001bc8:	681b      	ldr	r3, [r3, #0]
 8001bca:	2202      	movs	r2, #2
 8001bcc:	4013      	ands	r3, r2
 8001bce:	d009      	beq.n	8001be4 <HAL_RCCEx_PeriphCLKConfig+0x218>
 8001bd0:	4b25      	ldr	r3, [pc, #148]	; (8001c68 <HAL_RCCEx_PeriphCLKConfig+0x29c>)
 8001bd2:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8001bd4:	220c      	movs	r2, #12
 8001bd6:	4393      	bics	r3, r2
 8001bd8:	0019      	movs	r1, r3
 8001bda:	687b      	ldr	r3, [r7, #4]
 8001bdc:	691a      	ldr	r2, [r3, #16]
 8001bde:	4b22      	ldr	r3, [pc, #136]	; (8001c68 <HAL_RCCEx_PeriphCLKConfig+0x29c>)
 8001be0:	430a      	orrs	r2, r1
 8001be2:	64da      	str	r2, [r3, #76]	; 0x4c
 8001be4:	687b      	ldr	r3, [r7, #4]
 8001be6:	681b      	ldr	r3, [r3, #0]
 8001be8:	2204      	movs	r2, #4
 8001bea:	4013      	ands	r3, r2
 8001bec:	d009      	beq.n	8001c02 <HAL_RCCEx_PeriphCLKConfig+0x236>
 8001bee:	4b1e      	ldr	r3, [pc, #120]	; (8001c68 <HAL_RCCEx_PeriphCLKConfig+0x29c>)
 8001bf0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8001bf2:	4a24      	ldr	r2, [pc, #144]	; (8001c84 <HAL_RCCEx_PeriphCLKConfig+0x2b8>)
 8001bf4:	4013      	ands	r3, r2
 8001bf6:	0019      	movs	r1, r3
 8001bf8:	687b      	ldr	r3, [r7, #4]
 8001bfa:	695a      	ldr	r2, [r3, #20]
 8001bfc:	4b1a      	ldr	r3, [pc, #104]	; (8001c68 <HAL_RCCEx_PeriphCLKConfig+0x29c>)
 8001bfe:	430a      	orrs	r2, r1
 8001c00:	64da      	str	r2, [r3, #76]	; 0x4c
 8001c02:	687b      	ldr	r3, [r7, #4]
 8001c04:	681b      	ldr	r3, [r3, #0]
 8001c06:	2208      	movs	r2, #8
 8001c08:	4013      	ands	r3, r2
 8001c0a:	d009      	beq.n	8001c20 <HAL_RCCEx_PeriphCLKConfig+0x254>
 8001c0c:	4b16      	ldr	r3, [pc, #88]	; (8001c68 <HAL_RCCEx_PeriphCLKConfig+0x29c>)
 8001c0e:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8001c10:	4a1d      	ldr	r2, [pc, #116]	; (8001c88 <HAL_RCCEx_PeriphCLKConfig+0x2bc>)
 8001c12:	4013      	ands	r3, r2
 8001c14:	0019      	movs	r1, r3
 8001c16:	687b      	ldr	r3, [r7, #4]
 8001c18:	699a      	ldr	r2, [r3, #24]
 8001c1a:	4b13      	ldr	r3, [pc, #76]	; (8001c68 <HAL_RCCEx_PeriphCLKConfig+0x29c>)
 8001c1c:	430a      	orrs	r2, r1
 8001c1e:	64da      	str	r2, [r3, #76]	; 0x4c
 8001c20:	687b      	ldr	r3, [r7, #4]
 8001c22:	681b      	ldr	r3, [r3, #0]
 8001c24:	2240      	movs	r2, #64	; 0x40
 8001c26:	4013      	ands	r3, r2
 8001c28:	d009      	beq.n	8001c3e <HAL_RCCEx_PeriphCLKConfig+0x272>
 8001c2a:	4b0f      	ldr	r3, [pc, #60]	; (8001c68 <HAL_RCCEx_PeriphCLKConfig+0x29c>)
 8001c2c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8001c2e:	4a17      	ldr	r2, [pc, #92]	; (8001c8c <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 8001c30:	4013      	ands	r3, r2
 8001c32:	0019      	movs	r1, r3
 8001c34:	687b      	ldr	r3, [r7, #4]
 8001c36:	6a1a      	ldr	r2, [r3, #32]
 8001c38:	4b0b      	ldr	r3, [pc, #44]	; (8001c68 <HAL_RCCEx_PeriphCLKConfig+0x29c>)
 8001c3a:	430a      	orrs	r2, r1
 8001c3c:	64da      	str	r2, [r3, #76]	; 0x4c
 8001c3e:	687b      	ldr	r3, [r7, #4]
 8001c40:	681b      	ldr	r3, [r3, #0]
 8001c42:	2280      	movs	r2, #128	; 0x80
 8001c44:	4013      	ands	r3, r2
 8001c46:	d009      	beq.n	8001c5c <HAL_RCCEx_PeriphCLKConfig+0x290>
 8001c48:	4b07      	ldr	r3, [pc, #28]	; (8001c68 <HAL_RCCEx_PeriphCLKConfig+0x29c>)
 8001c4a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8001c4c:	4a10      	ldr	r2, [pc, #64]	; (8001c90 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8001c4e:	4013      	ands	r3, r2
 8001c50:	0019      	movs	r1, r3
 8001c52:	687b      	ldr	r3, [r7, #4]
 8001c54:	69da      	ldr	r2, [r3, #28]
 8001c56:	4b04      	ldr	r3, [pc, #16]	; (8001c68 <HAL_RCCEx_PeriphCLKConfig+0x29c>)
 8001c58:	430a      	orrs	r2, r1
 8001c5a:	64da      	str	r2, [r3, #76]	; 0x4c
 8001c5c:	2300      	movs	r3, #0
 8001c5e:	0018      	movs	r0, r3
 8001c60:	46bd      	mov	sp, r7
 8001c62:	b006      	add	sp, #24
 8001c64:	bd80      	pop	{r7, pc}
 8001c66:	46c0      	nop			; (mov r8, r8)
 8001c68:	40021000 	.word	0x40021000
 8001c6c:	40007000 	.word	0x40007000
 8001c70:	fffcffff 	.word	0xfffcffff
 8001c74:	fff7ffff 	.word	0xfff7ffff
 8001c78:	00001388 	.word	0x00001388
 8001c7c:	ffcfffff 	.word	0xffcfffff
 8001c80:	efffffff 	.word	0xefffffff
 8001c84:	fffff3ff 	.word	0xfffff3ff
 8001c88:	ffffcfff 	.word	0xffffcfff
 8001c8c:	fbffffff 	.word	0xfbffffff
 8001c90:	fff3ffff 	.word	0xfff3ffff

08001c94 <HAL_SPI_Init>:
  * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Init(SPI_HandleTypeDef *hspi)
{
 8001c94:	b580      	push	{r7, lr}
 8001c96:	b082      	sub	sp, #8
 8001c98:	af00      	add	r7, sp, #0
 8001c9a:	6078      	str	r0, [r7, #4]
  /* Check the SPI handle allocation */
  if (hspi == NULL)
 8001c9c:	687b      	ldr	r3, [r7, #4]
 8001c9e:	2b00      	cmp	r3, #0
 8001ca0:	d101      	bne.n	8001ca6 <HAL_SPI_Init+0x12>
  {
    return HAL_ERROR;
 8001ca2:	2301      	movs	r3, #1
 8001ca4:	e083      	b.n	8001dae <HAL_SPI_Init+0x11a>
  assert_param(IS_SPI_DATASIZE(hspi->Init.DataSize));
  assert_param(IS_SPI_NSS(hspi->Init.NSS));
  assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
  assert_param(IS_SPI_FIRST_BIT(hspi->Init.FirstBit));
  assert_param(IS_SPI_TIMODE(hspi->Init.TIMode));
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 8001ca6:	687b      	ldr	r3, [r7, #4]
 8001ca8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001caa:	2b00      	cmp	r3, #0
 8001cac:	d109      	bne.n	8001cc2 <HAL_SPI_Init+0x2e>
  {
    assert_param(IS_SPI_CPOL(hspi->Init.CLKPolarity));
    assert_param(IS_SPI_CPHA(hspi->Init.CLKPhase));

    if (hspi->Init.Mode == SPI_MODE_MASTER)
 8001cae:	687b      	ldr	r3, [r7, #4]
 8001cb0:	685a      	ldr	r2, [r3, #4]
 8001cb2:	2382      	movs	r3, #130	; 0x82
 8001cb4:	005b      	lsls	r3, r3, #1
 8001cb6:	429a      	cmp	r2, r3
 8001cb8:	d009      	beq.n	8001cce <HAL_SPI_Init+0x3a>
      assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
    }
    else
    {
      /* Baudrate prescaler not use in Motoraola Slave mode. force to default value */
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 8001cba:	687b      	ldr	r3, [r7, #4]
 8001cbc:	2200      	movs	r2, #0
 8001cbe:	61da      	str	r2, [r3, #28]
 8001cc0:	e005      	b.n	8001cce <HAL_SPI_Init+0x3a>
  else
  {
    assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));

    /* Force polarity and phase to TI protocaol requirements */
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 8001cc2:	687b      	ldr	r3, [r7, #4]
 8001cc4:	2200      	movs	r2, #0
 8001cc6:	611a      	str	r2, [r3, #16]
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 8001cc8:	687b      	ldr	r3, [r7, #4]
 8001cca:	2200      	movs	r2, #0
 8001ccc:	615a      	str	r2, [r3, #20]
  if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
  {
    assert_param(IS_SPI_CRC_POLYNOMIAL(hspi->Init.CRCPolynomial));
  }
#else
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8001cce:	687b      	ldr	r3, [r7, #4]
 8001cd0:	2200      	movs	r2, #0
 8001cd2:	629a      	str	r2, [r3, #40]	; 0x28
#endif /* USE_SPI_CRC */

  if (hspi->State == HAL_SPI_STATE_RESET)
 8001cd4:	687b      	ldr	r3, [r7, #4]
 8001cd6:	2251      	movs	r2, #81	; 0x51
 8001cd8:	5c9b      	ldrb	r3, [r3, r2]
 8001cda:	b2db      	uxtb	r3, r3
 8001cdc:	2b00      	cmp	r3, #0
 8001cde:	d107      	bne.n	8001cf0 <HAL_SPI_Init+0x5c>
  {
    /* Allocate lock resource and initialize it */
    hspi->Lock = HAL_UNLOCKED;
 8001ce0:	687b      	ldr	r3, [r7, #4]
 8001ce2:	2250      	movs	r2, #80	; 0x50
 8001ce4:	2100      	movs	r1, #0
 8001ce6:	5499      	strb	r1, [r3, r2]

    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    hspi->MspInitCallback(hspi);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    HAL_SPI_MspInit(hspi);
 8001ce8:	687b      	ldr	r3, [r7, #4]
 8001cea:	0018      	movs	r0, r3
 8001cec:	f7fe fd96 	bl	800081c <HAL_SPI_MspInit>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
  }

  hspi->State = HAL_SPI_STATE_BUSY;
 8001cf0:	687b      	ldr	r3, [r7, #4]
 8001cf2:	2251      	movs	r2, #81	; 0x51
 8001cf4:	2102      	movs	r1, #2
 8001cf6:	5499      	strb	r1, [r3, r2]

  /* Disable the selected SPI peripheral */
  __HAL_SPI_DISABLE(hspi);
 8001cf8:	687b      	ldr	r3, [r7, #4]
 8001cfa:	681b      	ldr	r3, [r3, #0]
 8001cfc:	681a      	ldr	r2, [r3, #0]
 8001cfe:	687b      	ldr	r3, [r7, #4]
 8001d00:	681b      	ldr	r3, [r3, #0]
 8001d02:	2140      	movs	r1, #64	; 0x40
 8001d04:	438a      	bics	r2, r1
 8001d06:	601a      	str	r2, [r3, #0]

  /*----------------------- SPIx CR1 & CR2 Configuration ---------------------*/
  /* Configure : SPI Mode, Communication Mode, Data size, Clock polarity and phase, NSS management,
  Communication speed, First bit and CRC calculation state */
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 8001d08:	687b      	ldr	r3, [r7, #4]
 8001d0a:	685a      	ldr	r2, [r3, #4]
 8001d0c:	2382      	movs	r3, #130	; 0x82
 8001d0e:	005b      	lsls	r3, r3, #1
 8001d10:	401a      	ands	r2, r3
 8001d12:	687b      	ldr	r3, [r7, #4]
 8001d14:	6899      	ldr	r1, [r3, #8]
 8001d16:	2384      	movs	r3, #132	; 0x84
 8001d18:	021b      	lsls	r3, r3, #8
 8001d1a:	400b      	ands	r3, r1
 8001d1c:	431a      	orrs	r2, r3
 8001d1e:	687b      	ldr	r3, [r7, #4]
 8001d20:	68d9      	ldr	r1, [r3, #12]
 8001d22:	2380      	movs	r3, #128	; 0x80
 8001d24:	011b      	lsls	r3, r3, #4
 8001d26:	400b      	ands	r3, r1
 8001d28:	431a      	orrs	r2, r3
 8001d2a:	687b      	ldr	r3, [r7, #4]
 8001d2c:	691b      	ldr	r3, [r3, #16]
 8001d2e:	2102      	movs	r1, #2
 8001d30:	400b      	ands	r3, r1
 8001d32:	431a      	orrs	r2, r3
 8001d34:	687b      	ldr	r3, [r7, #4]
 8001d36:	695b      	ldr	r3, [r3, #20]
 8001d38:	2101      	movs	r1, #1
 8001d3a:	400b      	ands	r3, r1
 8001d3c:	431a      	orrs	r2, r3
 8001d3e:	687b      	ldr	r3, [r7, #4]
 8001d40:	6999      	ldr	r1, [r3, #24]
 8001d42:	2380      	movs	r3, #128	; 0x80
 8001d44:	009b      	lsls	r3, r3, #2
 8001d46:	400b      	ands	r3, r1
 8001d48:	431a      	orrs	r2, r3
 8001d4a:	687b      	ldr	r3, [r7, #4]
 8001d4c:	69db      	ldr	r3, [r3, #28]
 8001d4e:	2138      	movs	r1, #56	; 0x38
 8001d50:	400b      	ands	r3, r1
 8001d52:	431a      	orrs	r2, r3
 8001d54:	687b      	ldr	r3, [r7, #4]
 8001d56:	6a1b      	ldr	r3, [r3, #32]
 8001d58:	2180      	movs	r1, #128	; 0x80
 8001d5a:	400b      	ands	r3, r1
 8001d5c:	431a      	orrs	r2, r3
 8001d5e:	0011      	movs	r1, r2
 8001d60:	687b      	ldr	r3, [r7, #4]
 8001d62:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001d64:	2380      	movs	r3, #128	; 0x80
 8001d66:	019b      	lsls	r3, r3, #6
 8001d68:	401a      	ands	r2, r3
 8001d6a:	687b      	ldr	r3, [r7, #4]
 8001d6c:	681b      	ldr	r3, [r3, #0]
 8001d6e:	430a      	orrs	r2, r1
 8001d70:	601a      	str	r2, [r3, #0]
                                  (hspi->Init.BaudRatePrescaler & SPI_CR1_BR_Msk) |
                                  (hspi->Init.FirstBit  & SPI_CR1_LSBFIRST) |
                                  (hspi->Init.CRCCalculation & SPI_CR1_CRCEN)));

  /* Configure : NSS management, TI Mode */
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 8001d72:	687b      	ldr	r3, [r7, #4]
 8001d74:	699b      	ldr	r3, [r3, #24]
 8001d76:	0c1b      	lsrs	r3, r3, #16
 8001d78:	2204      	movs	r2, #4
 8001d7a:	4013      	ands	r3, r2
 8001d7c:	0019      	movs	r1, r3
 8001d7e:	687b      	ldr	r3, [r7, #4]
 8001d80:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001d82:	2210      	movs	r2, #16
 8001d84:	401a      	ands	r2, r3
 8001d86:	687b      	ldr	r3, [r7, #4]
 8001d88:	681b      	ldr	r3, [r3, #0]
 8001d8a:	430a      	orrs	r2, r1
 8001d8c:	605a      	str	r2, [r3, #4]
  }
#endif /* USE_SPI_CRC */

#if defined(SPI_I2SCFGR_I2SMOD)
  /* Activate the SPI mode (Make sure that I2SMOD bit in I2SCFGR register is reset) */
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 8001d8e:	687b      	ldr	r3, [r7, #4]
 8001d90:	681b      	ldr	r3, [r3, #0]
 8001d92:	69da      	ldr	r2, [r3, #28]
 8001d94:	687b      	ldr	r3, [r7, #4]
 8001d96:	681b      	ldr	r3, [r3, #0]
 8001d98:	4907      	ldr	r1, [pc, #28]	; (8001db8 <HAL_SPI_Init+0x124>)
 8001d9a:	400a      	ands	r2, r1
 8001d9c:	61da      	str	r2, [r3, #28]
#endif /* SPI_I2SCFGR_I2SMOD */

  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8001d9e:	687b      	ldr	r3, [r7, #4]
 8001da0:	2200      	movs	r2, #0
 8001da2:	655a      	str	r2, [r3, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 8001da4:	687b      	ldr	r3, [r7, #4]
 8001da6:	2251      	movs	r2, #81	; 0x51
 8001da8:	2101      	movs	r1, #1
 8001daa:	5499      	strb	r1, [r3, r2]

  return HAL_OK;
 8001dac:	2300      	movs	r3, #0
}
 8001dae:	0018      	movs	r0, r3
 8001db0:	46bd      	mov	sp, r7
 8001db2:	b002      	add	sp, #8
 8001db4:	bd80      	pop	{r7, pc}
 8001db6:	46c0      	nop			; (mov r8, r8)
 8001db8:	fffff7ff 	.word	0xfffff7ff

08001dbc <HAL_SPI_Transmit>:
  * @param  Size amount of data to be sent
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Transmit(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8001dbc:	b580      	push	{r7, lr}
 8001dbe:	b088      	sub	sp, #32
 8001dc0:	af00      	add	r7, sp, #0
 8001dc2:	60f8      	str	r0, [r7, #12]
 8001dc4:	60b9      	str	r1, [r7, #8]
 8001dc6:	603b      	str	r3, [r7, #0]
 8001dc8:	1dbb      	adds	r3, r7, #6
 8001dca:	801a      	strh	r2, [r3, #0]
  uint32_t tickstart;
  HAL_StatusTypeDef errorcode = HAL_OK;
 8001dcc:	231f      	movs	r3, #31
 8001dce:	18fb      	adds	r3, r7, r3
 8001dd0:	2200      	movs	r2, #0
 8001dd2:	701a      	strb	r2, [r3, #0]

  /* Check Direction parameter */
  assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));

  /* Process Locked */
  __HAL_LOCK(hspi);
 8001dd4:	68fb      	ldr	r3, [r7, #12]
 8001dd6:	2250      	movs	r2, #80	; 0x50
 8001dd8:	5c9b      	ldrb	r3, [r3, r2]
 8001dda:	2b01      	cmp	r3, #1
 8001ddc:	d101      	bne.n	8001de2 <HAL_SPI_Transmit+0x26>
 8001dde:	2302      	movs	r3, #2
 8001de0:	e13e      	b.n	8002060 <HAL_SPI_Transmit+0x2a4>
 8001de2:	68fb      	ldr	r3, [r7, #12]
 8001de4:	2250      	movs	r2, #80	; 0x50
 8001de6:	2101      	movs	r1, #1
 8001de8:	5499      	strb	r1, [r3, r2]

  /* Init tickstart for timeout management*/
  tickstart = HAL_GetTick();
 8001dea:	f7fe fe09 	bl	8000a00 <HAL_GetTick>
 8001dee:	0003      	movs	r3, r0
 8001df0:	61bb      	str	r3, [r7, #24]
  initial_TxXferCount = Size;
 8001df2:	2316      	movs	r3, #22
 8001df4:	18fb      	adds	r3, r7, r3
 8001df6:	1dba      	adds	r2, r7, #6
 8001df8:	8812      	ldrh	r2, [r2, #0]
 8001dfa:	801a      	strh	r2, [r3, #0]

  if (hspi->State != HAL_SPI_STATE_READY)
 8001dfc:	68fb      	ldr	r3, [r7, #12]
 8001dfe:	2251      	movs	r2, #81	; 0x51
 8001e00:	5c9b      	ldrb	r3, [r3, r2]
 8001e02:	b2db      	uxtb	r3, r3
 8001e04:	2b01      	cmp	r3, #1
 8001e06:	d004      	beq.n	8001e12 <HAL_SPI_Transmit+0x56>
  {
    errorcode = HAL_BUSY;
 8001e08:	231f      	movs	r3, #31
 8001e0a:	18fb      	adds	r3, r7, r3
 8001e0c:	2202      	movs	r2, #2
 8001e0e:	701a      	strb	r2, [r3, #0]
    goto error;
 8001e10:	e11b      	b.n	800204a <HAL_SPI_Transmit+0x28e>
  }

  if ((pData == NULL) || (Size == 0U))
 8001e12:	68bb      	ldr	r3, [r7, #8]
 8001e14:	2b00      	cmp	r3, #0
 8001e16:	d003      	beq.n	8001e20 <HAL_SPI_Transmit+0x64>
 8001e18:	1dbb      	adds	r3, r7, #6
 8001e1a:	881b      	ldrh	r3, [r3, #0]
 8001e1c:	2b00      	cmp	r3, #0
 8001e1e:	d104      	bne.n	8001e2a <HAL_SPI_Transmit+0x6e>
  {
    errorcode = HAL_ERROR;
 8001e20:	231f      	movs	r3, #31
 8001e22:	18fb      	adds	r3, r7, r3
 8001e24:	2201      	movs	r2, #1
 8001e26:	701a      	strb	r2, [r3, #0]
    goto error;
 8001e28:	e10f      	b.n	800204a <HAL_SPI_Transmit+0x28e>
  }

  /* Set the transaction information */
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 8001e2a:	68fb      	ldr	r3, [r7, #12]
 8001e2c:	2251      	movs	r2, #81	; 0x51
 8001e2e:	2103      	movs	r1, #3
 8001e30:	5499      	strb	r1, [r3, r2]
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8001e32:	68fb      	ldr	r3, [r7, #12]
 8001e34:	2200      	movs	r2, #0
 8001e36:	655a      	str	r2, [r3, #84]	; 0x54
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 8001e38:	68fb      	ldr	r3, [r7, #12]
 8001e3a:	68ba      	ldr	r2, [r7, #8]
 8001e3c:	631a      	str	r2, [r3, #48]	; 0x30
  hspi->TxXferSize  = Size;
 8001e3e:	68fb      	ldr	r3, [r7, #12]
 8001e40:	1dba      	adds	r2, r7, #6
 8001e42:	8812      	ldrh	r2, [r2, #0]
 8001e44:	869a      	strh	r2, [r3, #52]	; 0x34
  hspi->TxXferCount = Size;
 8001e46:	68fb      	ldr	r3, [r7, #12]
 8001e48:	1dba      	adds	r2, r7, #6
 8001e4a:	8812      	ldrh	r2, [r2, #0]
 8001e4c:	86da      	strh	r2, [r3, #54]	; 0x36

  /*Init field not used in handle to zero */
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 8001e4e:	68fb      	ldr	r3, [r7, #12]
 8001e50:	2200      	movs	r2, #0
 8001e52:	639a      	str	r2, [r3, #56]	; 0x38
  hspi->RxXferSize  = 0U;
 8001e54:	68fb      	ldr	r3, [r7, #12]
 8001e56:	2200      	movs	r2, #0
 8001e58:	879a      	strh	r2, [r3, #60]	; 0x3c
  hspi->RxXferCount = 0U;
 8001e5a:	68fb      	ldr	r3, [r7, #12]
 8001e5c:	2200      	movs	r2, #0
 8001e5e:	87da      	strh	r2, [r3, #62]	; 0x3e
  hspi->TxISR       = NULL;
 8001e60:	68fb      	ldr	r3, [r7, #12]
 8001e62:	2200      	movs	r2, #0
 8001e64:	645a      	str	r2, [r3, #68]	; 0x44
  hspi->RxISR       = NULL;
 8001e66:	68fb      	ldr	r3, [r7, #12]
 8001e68:	2200      	movs	r2, #0
 8001e6a:	641a      	str	r2, [r3, #64]	; 0x40

  /* Configure communication direction : 1Line */
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8001e6c:	68fb      	ldr	r3, [r7, #12]
 8001e6e:	689a      	ldr	r2, [r3, #8]
 8001e70:	2380      	movs	r3, #128	; 0x80
 8001e72:	021b      	lsls	r3, r3, #8
 8001e74:	429a      	cmp	r2, r3
 8001e76:	d110      	bne.n	8001e9a <HAL_SPI_Transmit+0xde>
  {
    /* Disable SPI Peripheral before set 1Line direction (BIDIOE bit) */
    __HAL_SPI_DISABLE(hspi);
 8001e78:	68fb      	ldr	r3, [r7, #12]
 8001e7a:	681b      	ldr	r3, [r3, #0]
 8001e7c:	681a      	ldr	r2, [r3, #0]
 8001e7e:	68fb      	ldr	r3, [r7, #12]
 8001e80:	681b      	ldr	r3, [r3, #0]
 8001e82:	2140      	movs	r1, #64	; 0x40
 8001e84:	438a      	bics	r2, r1
 8001e86:	601a      	str	r2, [r3, #0]
    SPI_1LINE_TX(hspi);
 8001e88:	68fb      	ldr	r3, [r7, #12]
 8001e8a:	681b      	ldr	r3, [r3, #0]
 8001e8c:	681a      	ldr	r2, [r3, #0]
 8001e8e:	68fb      	ldr	r3, [r7, #12]
 8001e90:	681b      	ldr	r3, [r3, #0]
 8001e92:	2180      	movs	r1, #128	; 0x80
 8001e94:	01c9      	lsls	r1, r1, #7
 8001e96:	430a      	orrs	r2, r1
 8001e98:	601a      	str	r2, [r3, #0]
    SPI_RESET_CRC(hspi);
  }
#endif /* USE_SPI_CRC */

  /* Check if the SPI is already enabled */
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8001e9a:	68fb      	ldr	r3, [r7, #12]
 8001e9c:	681b      	ldr	r3, [r3, #0]
 8001e9e:	681b      	ldr	r3, [r3, #0]
 8001ea0:	2240      	movs	r2, #64	; 0x40
 8001ea2:	4013      	ands	r3, r2
 8001ea4:	2b40      	cmp	r3, #64	; 0x40
 8001ea6:	d007      	beq.n	8001eb8 <HAL_SPI_Transmit+0xfc>
  {
    /* Enable SPI peripheral */
    __HAL_SPI_ENABLE(hspi);
 8001ea8:	68fb      	ldr	r3, [r7, #12]
 8001eaa:	681b      	ldr	r3, [r3, #0]
 8001eac:	681a      	ldr	r2, [r3, #0]
 8001eae:	68fb      	ldr	r3, [r7, #12]
 8001eb0:	681b      	ldr	r3, [r3, #0]
 8001eb2:	2140      	movs	r1, #64	; 0x40
 8001eb4:	430a      	orrs	r2, r1
 8001eb6:	601a      	str	r2, [r3, #0]
  }

  /* Transmit data in 16 Bit mode */
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8001eb8:	68fb      	ldr	r3, [r7, #12]
 8001eba:	68da      	ldr	r2, [r3, #12]
 8001ebc:	2380      	movs	r3, #128	; 0x80
 8001ebe:	011b      	lsls	r3, r3, #4
 8001ec0:	429a      	cmp	r2, r3
 8001ec2:	d14e      	bne.n	8001f62 <HAL_SPI_Transmit+0x1a6>
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8001ec4:	68fb      	ldr	r3, [r7, #12]
 8001ec6:	685b      	ldr	r3, [r3, #4]
 8001ec8:	2b00      	cmp	r3, #0
 8001eca:	d004      	beq.n	8001ed6 <HAL_SPI_Transmit+0x11a>
 8001ecc:	2316      	movs	r3, #22
 8001ece:	18fb      	adds	r3, r7, r3
 8001ed0:	881b      	ldrh	r3, [r3, #0]
 8001ed2:	2b01      	cmp	r3, #1
 8001ed4:	d13f      	bne.n	8001f56 <HAL_SPI_Transmit+0x19a>
    {
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8001ed6:	68fb      	ldr	r3, [r7, #12]
 8001ed8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001eda:	881a      	ldrh	r2, [r3, #0]
 8001edc:	68fb      	ldr	r3, [r7, #12]
 8001ede:	681b      	ldr	r3, [r3, #0]
 8001ee0:	60da      	str	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8001ee2:	68fb      	ldr	r3, [r7, #12]
 8001ee4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001ee6:	1c9a      	adds	r2, r3, #2
 8001ee8:	68fb      	ldr	r3, [r7, #12]
 8001eea:	631a      	str	r2, [r3, #48]	; 0x30
      hspi->TxXferCount--;
 8001eec:	68fb      	ldr	r3, [r7, #12]
 8001eee:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8001ef0:	b29b      	uxth	r3, r3
 8001ef2:	3b01      	subs	r3, #1
 8001ef4:	b29a      	uxth	r2, r3
 8001ef6:	68fb      	ldr	r3, [r7, #12]
 8001ef8:	86da      	strh	r2, [r3, #54]	; 0x36
    }
    /* Transmit data in 16 Bit mode */
    while (hspi->TxXferCount > 0U)
 8001efa:	e02c      	b.n	8001f56 <HAL_SPI_Transmit+0x19a>
    {
      /* Wait until TXE flag is set to send data */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8001efc:	68fb      	ldr	r3, [r7, #12]
 8001efe:	681b      	ldr	r3, [r3, #0]
 8001f00:	689b      	ldr	r3, [r3, #8]
 8001f02:	2202      	movs	r2, #2
 8001f04:	4013      	ands	r3, r2
 8001f06:	2b02      	cmp	r3, #2
 8001f08:	d112      	bne.n	8001f30 <HAL_SPI_Transmit+0x174>
      {
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8001f0a:	68fb      	ldr	r3, [r7, #12]
 8001f0c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001f0e:	881a      	ldrh	r2, [r3, #0]
 8001f10:	68fb      	ldr	r3, [r7, #12]
 8001f12:	681b      	ldr	r3, [r3, #0]
 8001f14:	60da      	str	r2, [r3, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8001f16:	68fb      	ldr	r3, [r7, #12]
 8001f18:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001f1a:	1c9a      	adds	r2, r3, #2
 8001f1c:	68fb      	ldr	r3, [r7, #12]
 8001f1e:	631a      	str	r2, [r3, #48]	; 0x30
        hspi->TxXferCount--;
 8001f20:	68fb      	ldr	r3, [r7, #12]
 8001f22:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8001f24:	b29b      	uxth	r3, r3
 8001f26:	3b01      	subs	r3, #1
 8001f28:	b29a      	uxth	r2, r3
 8001f2a:	68fb      	ldr	r3, [r7, #12]
 8001f2c:	86da      	strh	r2, [r3, #54]	; 0x36
 8001f2e:	e012      	b.n	8001f56 <HAL_SPI_Transmit+0x19a>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8001f30:	f7fe fd66 	bl	8000a00 <HAL_GetTick>
 8001f34:	0002      	movs	r2, r0
 8001f36:	69bb      	ldr	r3, [r7, #24]
 8001f38:	1ad3      	subs	r3, r2, r3
 8001f3a:	683a      	ldr	r2, [r7, #0]
 8001f3c:	429a      	cmp	r2, r3
 8001f3e:	d802      	bhi.n	8001f46 <HAL_SPI_Transmit+0x18a>
 8001f40:	683b      	ldr	r3, [r7, #0]
 8001f42:	3301      	adds	r3, #1
 8001f44:	d102      	bne.n	8001f4c <HAL_SPI_Transmit+0x190>
 8001f46:	683b      	ldr	r3, [r7, #0]
 8001f48:	2b00      	cmp	r3, #0
 8001f4a:	d104      	bne.n	8001f56 <HAL_SPI_Transmit+0x19a>
        {
          errorcode = HAL_TIMEOUT;
 8001f4c:	231f      	movs	r3, #31
 8001f4e:	18fb      	adds	r3, r7, r3
 8001f50:	2203      	movs	r2, #3
 8001f52:	701a      	strb	r2, [r3, #0]
          goto error;
 8001f54:	e079      	b.n	800204a <HAL_SPI_Transmit+0x28e>
    while (hspi->TxXferCount > 0U)
 8001f56:	68fb      	ldr	r3, [r7, #12]
 8001f58:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8001f5a:	b29b      	uxth	r3, r3
 8001f5c:	2b00      	cmp	r3, #0
 8001f5e:	d1cd      	bne.n	8001efc <HAL_SPI_Transmit+0x140>
 8001f60:	e04f      	b.n	8002002 <HAL_SPI_Transmit+0x246>
    }
  }
  /* Transmit data in 8 Bit mode */
  else
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8001f62:	68fb      	ldr	r3, [r7, #12]
 8001f64:	685b      	ldr	r3, [r3, #4]
 8001f66:	2b00      	cmp	r3, #0
 8001f68:	d004      	beq.n	8001f74 <HAL_SPI_Transmit+0x1b8>
 8001f6a:	2316      	movs	r3, #22
 8001f6c:	18fb      	adds	r3, r7, r3
 8001f6e:	881b      	ldrh	r3, [r3, #0]
 8001f70:	2b01      	cmp	r3, #1
 8001f72:	d141      	bne.n	8001ff8 <HAL_SPI_Transmit+0x23c>
    {
//      *((__IO uint8_t *)&hspi->Instance->DR) = 245;
//      SPI1->DR = 245;
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8001f74:	68fb      	ldr	r3, [r7, #12]
 8001f76:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001f78:	68fb      	ldr	r3, [r7, #12]
 8001f7a:	681b      	ldr	r3, [r3, #0]
 8001f7c:	330c      	adds	r3, #12
 8001f7e:	7812      	ldrb	r2, [r2, #0]
 8001f80:	701a      	strb	r2, [r3, #0]
//      SPI2->DR = (*hspi->pTxBuffPtr);
//      unsigned char readVal = *((__IO uint8_t *)&hspi->Instance->DR);
//      readVal += 1;
      hspi->pTxBuffPtr += sizeof(uint8_t);
 8001f82:	68fb      	ldr	r3, [r7, #12]
 8001f84:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001f86:	1c5a      	adds	r2, r3, #1
 8001f88:	68fb      	ldr	r3, [r7, #12]
 8001f8a:	631a      	str	r2, [r3, #48]	; 0x30
      hspi->TxXferCount--;
 8001f8c:	68fb      	ldr	r3, [r7, #12]
 8001f8e:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8001f90:	b29b      	uxth	r3, r3
 8001f92:	3b01      	subs	r3, #1
 8001f94:	b29a      	uxth	r2, r3
 8001f96:	68fb      	ldr	r3, [r7, #12]
 8001f98:	86da      	strh	r2, [r3, #54]	; 0x36
    }
    while (hspi->TxXferCount > 0U)
 8001f9a:	e02d      	b.n	8001ff8 <HAL_SPI_Transmit+0x23c>
    {
      /* Wait until TXE flag is set to send data */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8001f9c:	68fb      	ldr	r3, [r7, #12]
 8001f9e:	681b      	ldr	r3, [r3, #0]
 8001fa0:	689b      	ldr	r3, [r3, #8]
 8001fa2:	2202      	movs	r2, #2
 8001fa4:	4013      	ands	r3, r2
 8001fa6:	2b02      	cmp	r3, #2
 8001fa8:	d113      	bne.n	8001fd2 <HAL_SPI_Transmit+0x216>
      {
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8001faa:	68fb      	ldr	r3, [r7, #12]
 8001fac:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001fae:	68fb      	ldr	r3, [r7, #12]
 8001fb0:	681b      	ldr	r3, [r3, #0]
 8001fb2:	330c      	adds	r3, #12
 8001fb4:	7812      	ldrb	r2, [r2, #0]
 8001fb6:	701a      	strb	r2, [r3, #0]
        hspi->pTxBuffPtr += sizeof(uint8_t);
 8001fb8:	68fb      	ldr	r3, [r7, #12]
 8001fba:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001fbc:	1c5a      	adds	r2, r3, #1
 8001fbe:	68fb      	ldr	r3, [r7, #12]
 8001fc0:	631a      	str	r2, [r3, #48]	; 0x30
        hspi->TxXferCount--;
 8001fc2:	68fb      	ldr	r3, [r7, #12]
 8001fc4:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8001fc6:	b29b      	uxth	r3, r3
 8001fc8:	3b01      	subs	r3, #1
 8001fca:	b29a      	uxth	r2, r3
 8001fcc:	68fb      	ldr	r3, [r7, #12]
 8001fce:	86da      	strh	r2, [r3, #54]	; 0x36
 8001fd0:	e012      	b.n	8001ff8 <HAL_SPI_Transmit+0x23c>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8001fd2:	f7fe fd15 	bl	8000a00 <HAL_GetTick>
 8001fd6:	0002      	movs	r2, r0
 8001fd8:	69bb      	ldr	r3, [r7, #24]
 8001fda:	1ad3      	subs	r3, r2, r3
 8001fdc:	683a      	ldr	r2, [r7, #0]
 8001fde:	429a      	cmp	r2, r3
 8001fe0:	d802      	bhi.n	8001fe8 <HAL_SPI_Transmit+0x22c>
 8001fe2:	683b      	ldr	r3, [r7, #0]
 8001fe4:	3301      	adds	r3, #1
 8001fe6:	d102      	bne.n	8001fee <HAL_SPI_Transmit+0x232>
 8001fe8:	683b      	ldr	r3, [r7, #0]
 8001fea:	2b00      	cmp	r3, #0
 8001fec:	d104      	bne.n	8001ff8 <HAL_SPI_Transmit+0x23c>
        {
          errorcode = HAL_TIMEOUT;
 8001fee:	231f      	movs	r3, #31
 8001ff0:	18fb      	adds	r3, r7, r3
 8001ff2:	2203      	movs	r2, #3
 8001ff4:	701a      	strb	r2, [r3, #0]
          goto error;
 8001ff6:	e028      	b.n	800204a <HAL_SPI_Transmit+0x28e>
    while (hspi->TxXferCount > 0U)
 8001ff8:	68fb      	ldr	r3, [r7, #12]
 8001ffa:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8001ffc:	b29b      	uxth	r3, r3
 8001ffe:	2b00      	cmp	r3, #0
 8002000:	d1cc      	bne.n	8001f9c <HAL_SPI_Transmit+0x1e0>
    SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
  }
#endif /* USE_SPI_CRC */

  /* Check the end of the transaction */
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8002002:	69ba      	ldr	r2, [r7, #24]
 8002004:	6839      	ldr	r1, [r7, #0]
 8002006:	68fb      	ldr	r3, [r7, #12]
 8002008:	0018      	movs	r0, r3
 800200a:	f000 f8bb 	bl	8002184 <SPI_EndRxTxTransaction>
 800200e:	1e03      	subs	r3, r0, #0
 8002010:	d002      	beq.n	8002018 <HAL_SPI_Transmit+0x25c>
  {
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8002012:	68fb      	ldr	r3, [r7, #12]
 8002014:	2220      	movs	r2, #32
 8002016:	655a      	str	r2, [r3, #84]	; 0x54
  }

  /* Clear overrun flag in 2 Lines communication mode because received is not read */
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8002018:	68fb      	ldr	r3, [r7, #12]
 800201a:	689b      	ldr	r3, [r3, #8]
 800201c:	2b00      	cmp	r3, #0
 800201e:	d10a      	bne.n	8002036 <HAL_SPI_Transmit+0x27a>
  {
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8002020:	2300      	movs	r3, #0
 8002022:	613b      	str	r3, [r7, #16]
 8002024:	68fb      	ldr	r3, [r7, #12]
 8002026:	681b      	ldr	r3, [r3, #0]
 8002028:	68db      	ldr	r3, [r3, #12]
 800202a:	613b      	str	r3, [r7, #16]
 800202c:	68fb      	ldr	r3, [r7, #12]
 800202e:	681b      	ldr	r3, [r3, #0]
 8002030:	689b      	ldr	r3, [r3, #8]
 8002032:	613b      	str	r3, [r7, #16]
 8002034:	693b      	ldr	r3, [r7, #16]
  }

  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8002036:	68fb      	ldr	r3, [r7, #12]
 8002038:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800203a:	2b00      	cmp	r3, #0
 800203c:	d004      	beq.n	8002048 <HAL_SPI_Transmit+0x28c>
  {
    errorcode = HAL_ERROR;
 800203e:	231f      	movs	r3, #31
 8002040:	18fb      	adds	r3, r7, r3
 8002042:	2201      	movs	r2, #1
 8002044:	701a      	strb	r2, [r3, #0]
 8002046:	e000      	b.n	800204a <HAL_SPI_Transmit+0x28e>
  }

error:
 8002048:	46c0      	nop			; (mov r8, r8)
  hspi->State = HAL_SPI_STATE_READY;
 800204a:	68fb      	ldr	r3, [r7, #12]
 800204c:	2251      	movs	r2, #81	; 0x51
 800204e:	2101      	movs	r1, #1
 8002050:	5499      	strb	r1, [r3, r2]
  /* Process Unlocked */
  __HAL_UNLOCK(hspi);
 8002052:	68fb      	ldr	r3, [r7, #12]
 8002054:	2250      	movs	r2, #80	; 0x50
 8002056:	2100      	movs	r1, #0
 8002058:	5499      	strb	r1, [r3, r2]
  return errorcode;
 800205a:	231f      	movs	r3, #31
 800205c:	18fb      	adds	r3, r7, r3
 800205e:	781b      	ldrb	r3, [r3, #0]
}
 8002060:	0018      	movs	r0, r3
 8002062:	46bd      	mov	sp, r7
 8002064:	b008      	add	sp, #32
 8002066:	bd80      	pop	{r7, pc}

08002068 <SPI_WaitFlagStateUntilTimeout>:
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
                                                       uint32_t Timeout, uint32_t Tickstart)
{
 8002068:	b580      	push	{r7, lr}
 800206a:	b088      	sub	sp, #32
 800206c:	af00      	add	r7, sp, #0
 800206e:	60f8      	str	r0, [r7, #12]
 8002070:	60b9      	str	r1, [r7, #8]
 8002072:	603b      	str	r3, [r7, #0]
 8002074:	1dfb      	adds	r3, r7, #7
 8002076:	701a      	strb	r2, [r3, #0]
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 8002078:	f7fe fcc2 	bl	8000a00 <HAL_GetTick>
 800207c:	0002      	movs	r2, r0
 800207e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8002080:	1a9b      	subs	r3, r3, r2
 8002082:	683a      	ldr	r2, [r7, #0]
 8002084:	18d3      	adds	r3, r2, r3
 8002086:	61fb      	str	r3, [r7, #28]
  tmp_tickstart = HAL_GetTick();
 8002088:	f7fe fcba 	bl	8000a00 <HAL_GetTick>
 800208c:	0003      	movs	r3, r0
 800208e:	61bb      	str	r3, [r7, #24]

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 8002090:	4b3a      	ldr	r3, [pc, #232]	; (800217c <SPI_WaitFlagStateUntilTimeout+0x114>)
 8002092:	681b      	ldr	r3, [r3, #0]
 8002094:	015b      	lsls	r3, r3, #5
 8002096:	0d1b      	lsrs	r3, r3, #20
 8002098:	69fa      	ldr	r2, [r7, #28]
 800209a:	4353      	muls	r3, r2
 800209c:	617b      	str	r3, [r7, #20]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800209e:	e058      	b.n	8002152 <SPI_WaitFlagStateUntilTimeout+0xea>
  {
    if (Timeout != HAL_MAX_DELAY)
 80020a0:	683b      	ldr	r3, [r7, #0]
 80020a2:	3301      	adds	r3, #1
 80020a4:	d055      	beq.n	8002152 <SPI_WaitFlagStateUntilTimeout+0xea>
    {
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 80020a6:	f7fe fcab 	bl	8000a00 <HAL_GetTick>
 80020aa:	0002      	movs	r2, r0
 80020ac:	69bb      	ldr	r3, [r7, #24]
 80020ae:	1ad3      	subs	r3, r2, r3
 80020b0:	69fa      	ldr	r2, [r7, #28]
 80020b2:	429a      	cmp	r2, r3
 80020b4:	d902      	bls.n	80020bc <SPI_WaitFlagStateUntilTimeout+0x54>
 80020b6:	69fb      	ldr	r3, [r7, #28]
 80020b8:	2b00      	cmp	r3, #0
 80020ba:	d142      	bne.n	8002142 <SPI_WaitFlagStateUntilTimeout+0xda>
        /* Disable the SPI and reset the CRC: the CRC value should be cleared
           on both master and slave sides in order to resynchronize the master
           and slave for their respective CRC calculation */

        /* Disable TXE, RXNE and ERR interrupts for the interrupt process */
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 80020bc:	68fb      	ldr	r3, [r7, #12]
 80020be:	681b      	ldr	r3, [r3, #0]
 80020c0:	685a      	ldr	r2, [r3, #4]
 80020c2:	68fb      	ldr	r3, [r7, #12]
 80020c4:	681b      	ldr	r3, [r3, #0]
 80020c6:	21e0      	movs	r1, #224	; 0xe0
 80020c8:	438a      	bics	r2, r1
 80020ca:	605a      	str	r2, [r3, #4]

        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80020cc:	68fb      	ldr	r3, [r7, #12]
 80020ce:	685a      	ldr	r2, [r3, #4]
 80020d0:	2382      	movs	r3, #130	; 0x82
 80020d2:	005b      	lsls	r3, r3, #1
 80020d4:	429a      	cmp	r2, r3
 80020d6:	d113      	bne.n	8002100 <SPI_WaitFlagStateUntilTimeout+0x98>
 80020d8:	68fb      	ldr	r3, [r7, #12]
 80020da:	689a      	ldr	r2, [r3, #8]
 80020dc:	2380      	movs	r3, #128	; 0x80
 80020de:	021b      	lsls	r3, r3, #8
 80020e0:	429a      	cmp	r2, r3
 80020e2:	d005      	beq.n	80020f0 <SPI_WaitFlagStateUntilTimeout+0x88>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 80020e4:	68fb      	ldr	r3, [r7, #12]
 80020e6:	689a      	ldr	r2, [r3, #8]
 80020e8:	2380      	movs	r3, #128	; 0x80
 80020ea:	00db      	lsls	r3, r3, #3
 80020ec:	429a      	cmp	r2, r3
 80020ee:	d107      	bne.n	8002100 <SPI_WaitFlagStateUntilTimeout+0x98>
        {
          /* Disable SPI peripheral */
          __HAL_SPI_DISABLE(hspi);
 80020f0:	68fb      	ldr	r3, [r7, #12]
 80020f2:	681b      	ldr	r3, [r3, #0]
 80020f4:	681a      	ldr	r2, [r3, #0]
 80020f6:	68fb      	ldr	r3, [r7, #12]
 80020f8:	681b      	ldr	r3, [r3, #0]
 80020fa:	2140      	movs	r1, #64	; 0x40
 80020fc:	438a      	bics	r2, r1
 80020fe:	601a      	str	r2, [r3, #0]
        }

        /* Reset CRC Calculation */
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 8002100:	68fb      	ldr	r3, [r7, #12]
 8002102:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8002104:	2380      	movs	r3, #128	; 0x80
 8002106:	019b      	lsls	r3, r3, #6
 8002108:	429a      	cmp	r2, r3
 800210a:	d110      	bne.n	800212e <SPI_WaitFlagStateUntilTimeout+0xc6>
        {
          SPI_RESET_CRC(hspi);
 800210c:	68fb      	ldr	r3, [r7, #12]
 800210e:	681b      	ldr	r3, [r3, #0]
 8002110:	681a      	ldr	r2, [r3, #0]
 8002112:	68fb      	ldr	r3, [r7, #12]
 8002114:	681b      	ldr	r3, [r3, #0]
 8002116:	491a      	ldr	r1, [pc, #104]	; (8002180 <SPI_WaitFlagStateUntilTimeout+0x118>)
 8002118:	400a      	ands	r2, r1
 800211a:	601a      	str	r2, [r3, #0]
 800211c:	68fb      	ldr	r3, [r7, #12]
 800211e:	681b      	ldr	r3, [r3, #0]
 8002120:	681a      	ldr	r2, [r3, #0]
 8002122:	68fb      	ldr	r3, [r7, #12]
 8002124:	681b      	ldr	r3, [r3, #0]
 8002126:	2180      	movs	r1, #128	; 0x80
 8002128:	0189      	lsls	r1, r1, #6
 800212a:	430a      	orrs	r2, r1
 800212c:	601a      	str	r2, [r3, #0]
        }

        hspi->State = HAL_SPI_STATE_READY;
 800212e:	68fb      	ldr	r3, [r7, #12]
 8002130:	2251      	movs	r2, #81	; 0x51
 8002132:	2101      	movs	r1, #1
 8002134:	5499      	strb	r1, [r3, r2]

        /* Process Unlocked */
        __HAL_UNLOCK(hspi);
 8002136:	68fb      	ldr	r3, [r7, #12]
 8002138:	2250      	movs	r2, #80	; 0x50
 800213a:	2100      	movs	r1, #0
 800213c:	5499      	strb	r1, [r3, r2]

        return HAL_TIMEOUT;
 800213e:	2303      	movs	r3, #3
 8002140:	e017      	b.n	8002172 <SPI_WaitFlagStateUntilTimeout+0x10a>
      }
      /* If Systick is disabled or not incremented, deactivate timeout to go in disable loop procedure */
      if(count == 0U)
 8002142:	697b      	ldr	r3, [r7, #20]
 8002144:	2b00      	cmp	r3, #0
 8002146:	d101      	bne.n	800214c <SPI_WaitFlagStateUntilTimeout+0xe4>
      {
        tmp_timeout = 0U;
 8002148:	2300      	movs	r3, #0
 800214a:	61fb      	str	r3, [r7, #28]
      }
      count--;
 800214c:	697b      	ldr	r3, [r7, #20]
 800214e:	3b01      	subs	r3, #1
 8002150:	617b      	str	r3, [r7, #20]
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8002152:	68fb      	ldr	r3, [r7, #12]
 8002154:	681b      	ldr	r3, [r3, #0]
 8002156:	689b      	ldr	r3, [r3, #8]
 8002158:	68ba      	ldr	r2, [r7, #8]
 800215a:	4013      	ands	r3, r2
 800215c:	68ba      	ldr	r2, [r7, #8]
 800215e:	1ad3      	subs	r3, r2, r3
 8002160:	425a      	negs	r2, r3
 8002162:	4153      	adcs	r3, r2
 8002164:	b2db      	uxtb	r3, r3
 8002166:	001a      	movs	r2, r3
 8002168:	1dfb      	adds	r3, r7, #7
 800216a:	781b      	ldrb	r3, [r3, #0]
 800216c:	429a      	cmp	r2, r3
 800216e:	d197      	bne.n	80020a0 <SPI_WaitFlagStateUntilTimeout+0x38>
    }
  }

  return HAL_OK;
 8002170:	2300      	movs	r3, #0
}
 8002172:	0018      	movs	r0, r3
 8002174:	46bd      	mov	sp, r7
 8002176:	b008      	add	sp, #32
 8002178:	bd80      	pop	{r7, pc}
 800217a:	46c0      	nop			; (mov r8, r8)
 800217c:	20000000 	.word	0x20000000
 8002180:	ffffdfff 	.word	0xffffdfff

08002184 <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 8002184:	b580      	push	{r7, lr}
 8002186:	b088      	sub	sp, #32
 8002188:	af02      	add	r7, sp, #8
 800218a:	60f8      	str	r0, [r7, #12]
 800218c:	60b9      	str	r1, [r7, #8]
 800218e:	607a      	str	r2, [r7, #4]
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8002190:	4b1d      	ldr	r3, [pc, #116]	; (8002208 <SPI_EndRxTxTransaction+0x84>)
 8002192:	681b      	ldr	r3, [r3, #0]
 8002194:	491d      	ldr	r1, [pc, #116]	; (800220c <SPI_EndRxTxTransaction+0x88>)
 8002196:	0018      	movs	r0, r3
 8002198:	f7fd ffb6 	bl	8000108 <__udivsi3>
 800219c:	0003      	movs	r3, r0
 800219e:	001a      	movs	r2, r3
 80021a0:	0013      	movs	r3, r2
 80021a2:	015b      	lsls	r3, r3, #5
 80021a4:	1a9b      	subs	r3, r3, r2
 80021a6:	009b      	lsls	r3, r3, #2
 80021a8:	189b      	adds	r3, r3, r2
 80021aa:	00db      	lsls	r3, r3, #3
 80021ac:	617b      	str	r3, [r7, #20]
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 80021ae:	68fb      	ldr	r3, [r7, #12]
 80021b0:	685a      	ldr	r2, [r3, #4]
 80021b2:	2382      	movs	r3, #130	; 0x82
 80021b4:	005b      	lsls	r3, r3, #1
 80021b6:	429a      	cmp	r2, r3
 80021b8:	d112      	bne.n	80021e0 <SPI_EndRxTxTransaction+0x5c>
  {
    /* Control the BSY flag */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 80021ba:	68ba      	ldr	r2, [r7, #8]
 80021bc:	68f8      	ldr	r0, [r7, #12]
 80021be:	687b      	ldr	r3, [r7, #4]
 80021c0:	9300      	str	r3, [sp, #0]
 80021c2:	0013      	movs	r3, r2
 80021c4:	2200      	movs	r2, #0
 80021c6:	2180      	movs	r1, #128	; 0x80
 80021c8:	f7ff ff4e 	bl	8002068 <SPI_WaitFlagStateUntilTimeout>
 80021cc:	1e03      	subs	r3, r0, #0
 80021ce:	d016      	beq.n	80021fe <SPI_EndRxTxTransaction+0x7a>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 80021d0:	68fb      	ldr	r3, [r7, #12]
 80021d2:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80021d4:	2220      	movs	r2, #32
 80021d6:	431a      	orrs	r2, r3
 80021d8:	68fb      	ldr	r3, [r7, #12]
 80021da:	655a      	str	r2, [r3, #84]	; 0x54
      return HAL_TIMEOUT;
 80021dc:	2303      	movs	r3, #3
 80021de:	e00f      	b.n	8002200 <SPI_EndRxTxTransaction+0x7c>
    * User have to calculate the timeout value to fit with the time of 1 byte transfer.
    * This time is directly link with the SPI clock from Master device.
    */
    do
    {
      if (count == 0U)
 80021e0:	697b      	ldr	r3, [r7, #20]
 80021e2:	2b00      	cmp	r3, #0
 80021e4:	d00a      	beq.n	80021fc <SPI_EndRxTxTransaction+0x78>
      {
        break;
      }
      count--;
 80021e6:	697b      	ldr	r3, [r7, #20]
 80021e8:	3b01      	subs	r3, #1
 80021ea:	617b      	str	r3, [r7, #20]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 80021ec:	68fb      	ldr	r3, [r7, #12]
 80021ee:	681b      	ldr	r3, [r3, #0]
 80021f0:	689b      	ldr	r3, [r3, #8]
 80021f2:	2280      	movs	r2, #128	; 0x80
 80021f4:	4013      	ands	r3, r2
 80021f6:	2b80      	cmp	r3, #128	; 0x80
 80021f8:	d0f2      	beq.n	80021e0 <SPI_EndRxTxTransaction+0x5c>
 80021fa:	e000      	b.n	80021fe <SPI_EndRxTxTransaction+0x7a>
        break;
 80021fc:	46c0      	nop			; (mov r8, r8)
  }

  return HAL_OK;
 80021fe:	2300      	movs	r3, #0
}
 8002200:	0018      	movs	r0, r3
 8002202:	46bd      	mov	sp, r7
 8002204:	b006      	add	sp, #24
 8002206:	bd80      	pop	{r7, pc}
 8002208:	20000000 	.word	0x20000000
 800220c:	016e3600 	.word	0x016e3600

08002210 <__libc_init_array>:
 8002210:	b570      	push	{r4, r5, r6, lr}
 8002212:	2600      	movs	r6, #0
 8002214:	4d0c      	ldr	r5, [pc, #48]	; (8002248 <__libc_init_array+0x38>)
 8002216:	4c0d      	ldr	r4, [pc, #52]	; (800224c <__libc_init_array+0x3c>)
 8002218:	1b64      	subs	r4, r4, r5
 800221a:	10a4      	asrs	r4, r4, #2
 800221c:	42a6      	cmp	r6, r4
 800221e:	d109      	bne.n	8002234 <__libc_init_array+0x24>
 8002220:	2600      	movs	r6, #0
 8002222:	f000 f821 	bl	8002268 <_init>
 8002226:	4d0a      	ldr	r5, [pc, #40]	; (8002250 <__libc_init_array+0x40>)
 8002228:	4c0a      	ldr	r4, [pc, #40]	; (8002254 <__libc_init_array+0x44>)
 800222a:	1b64      	subs	r4, r4, r5
 800222c:	10a4      	asrs	r4, r4, #2
 800222e:	42a6      	cmp	r6, r4
 8002230:	d105      	bne.n	800223e <__libc_init_array+0x2e>
 8002232:	bd70      	pop	{r4, r5, r6, pc}
 8002234:	00b3      	lsls	r3, r6, #2
 8002236:	58eb      	ldr	r3, [r5, r3]
 8002238:	4798      	blx	r3
 800223a:	3601      	adds	r6, #1
 800223c:	e7ee      	b.n	800221c <__libc_init_array+0xc>
 800223e:	00b3      	lsls	r3, r6, #2
 8002240:	58eb      	ldr	r3, [r5, r3]
 8002242:	4798      	blx	r3
 8002244:	3601      	adds	r6, #1
 8002246:	e7f2      	b.n	800222e <__libc_init_array+0x1e>
 8002248:	080022a4 	.word	0x080022a4
 800224c:	080022a4 	.word	0x080022a4
 8002250:	080022a4 	.word	0x080022a4
 8002254:	080022a8 	.word	0x080022a8

08002258 <memset>:
 8002258:	0003      	movs	r3, r0
 800225a:	1812      	adds	r2, r2, r0
 800225c:	4293      	cmp	r3, r2
 800225e:	d100      	bne.n	8002262 <memset+0xa>
 8002260:	4770      	bx	lr
 8002262:	7019      	strb	r1, [r3, #0]
 8002264:	3301      	adds	r3, #1
 8002266:	e7f9      	b.n	800225c <memset+0x4>

08002268 <_init>:
 8002268:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800226a:	46c0      	nop			; (mov r8, r8)
 800226c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800226e:	bc08      	pop	{r3}
 8002270:	469e      	mov	lr, r3
 8002272:	4770      	bx	lr

08002274 <_fini>:
 8002274:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002276:	46c0      	nop			; (mov r8, r8)
 8002278:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800227a:	bc08      	pop	{r3}
 800227c:	469e      	mov	lr, r3
 800227e:	4770      	bx	lr
